# SPDX-License-Identifier: 2023 - 2025 Slavi Pantaleev
# SPDX-License-Identifier: 2023 Julian-Samuel Geb√ºhr
# SPDX-License-Identifier: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---

# Below is an example which installs a few services on the same server
# as your Matrix services have been installed and configured with
# matrix-docker-ansible-deploy (MDAD) playbook.
#
# If you are installing services on the server where neither Docker
# nor Traefik is installed, see vars.yml on the parent directory instead.
#
# You should tweak this example as you see fit and enable the services that you need.

########################################################################
#                                                                      #
# Playbook                                                             #
#                                                                      #
########################################################################

# Put a strong secret below, generated with `pwgen -s 64 1` or in another way
# Various other secrets will be derived from this secret automatically.
mash_playbook_generic_secret_key: ''

########################################################################
#                                                                      #
# /Playbook                                                            #
#                                                                      #
########################################################################


########################################################################
#                                                                      #
# Docker                                                               #
#                                                                      #
########################################################################

# To disable Docker SDK for Python installation (in case you'd be installing the SDK in another way),
# remove the line below.
devture_docker_sdk_for_python_installation_enabled: true

########################################################################
#                                                                      #
# /Docker                                                              #
#                                                                      #
########################################################################



########################################################################
#                                                                      #
# com.devture.ansible.role.timesync                                    #
#                                                                      #
########################################################################

# To ensure the server's clock is synchronized (using systemd-timesyncd/ntpd),
# we enable the timesync service.

devture_timesync_installation_enabled: true

########################################################################
#                                                                      #
# /com.devture.ansible.role.timesync                                   #
#                                                                      #
########################################################################



########################################################################
#                                                                      #
# traefik                                                              #
#                                                                      #
########################################################################

# We're relying on the matrix-docker-ansible-deploy playbook to manage Traefik,
# so tell mash-playbook about it.
mash_playbook_reverse_proxy_type: other-traefik-container

# Tell the playbook to attach services which require reverse-proxying to an additional network by default (e.g. traefik)
# This needs to match your Traefik network.
mash_playbook_reverse_proxyable_services_additional_network: traefik

# Uncomment and adjust the variables below if you'd like to enable HTTP-compression.
#
# For this to work, you will need to define a compress middleware (https://doc.traefik.io/traefik/middlewares/http/compress/) for your Traefik instance
# using a file (https://doc.traefik.io/traefik/providers/file/) or Docker (https://doc.traefik.io/traefik/providers/docker/) configuration provider.
#
# mash_playbook_reverse_proxy_traefik_middleware_compession_enabled: true
# mash_playbook_reverse_proxy_traefik_middleware_compession_name: my-compression-middleware@file

########################################################################
#                                                                      #
# /traefik                                                             #
#                                                                      #
########################################################################



########################################################################
#                                                                      #
# postgres                                                             #
#                                                                      #
########################################################################

# Most services require a Postgres database, so we enable Postgres here.
#
# Learn more about the Postgres service in docs/services/postgres.md

postgres_enabled: true

# Put a strong password below, generated with `pwgen -s 64 1` or in another way
postgres_connection_password: ''

########################################################################
#                                                                      #
# /postgres                                                            #
#                                                                      #
########################################################################



########################################################################
#                                                                      #
# exim_relay                                                           #
#                                                                      #
########################################################################

# Various services need to send out email.
#
# Enabling this Exim relay SMTP mailer service automatically wires
# all other services to send email through it.
#
# exim-relay then gives you a centralized place for configuring email-sending.

exim_relay_enabled: true

exim_relay_hostname: mash.example.com

exim_relay_sender_address: "someone@{{ exim_relay_hostname }}"

# By default, exim-relay attempts to deliver emails directly.
# To make it relay via an external SMTP server, see docs/services/exim-relay.md

########################################################################
#                                                                      #
# /exim_relay                                                          #
#                                                                      #
########################################################################



########################################################################
#                                                                      #
# miniflux                                                             #
#                                                                      #
########################################################################

# Learn more about the Miniflux service in docs/services/miniflux.md
#
# This service is only here as an example. If you don't wish to use the
# Miniflux service, remove the whole section.

miniflux_enabled: true

miniflux_hostname: mash.example.com
miniflux_path_prefix: /miniflux

miniflux_admin_login: your-username-here
miniflux_admin_password: a-strong-password-here

########################################################################
#                                                                      #
# /miniflux                                                            #
#                                                                      #
########################################################################



########################################################################
#                                                                      #
# uptime-kuma                                                          #
#                                                                      #
########################################################################

# Learn more about the Uptime-kuma service in docs/services/uptime-kuma.md
#
# This service is only here as an example. If you don't wish to use the
# Uptime-kuma service, remove the whole section.

uptime_kuma_enabled: true

uptime_kuma_hostname: uptime-kuma.example.com

# For now, hosting uptime-kuma under a path is not supported.
# See: https://github.com/louislam/uptime-kuma/issues/147
# uptime_kuma_path_prefix: /uptime-kuma

########################################################################
#                                                                      #
# /uptime-kuma                                                         #
#                                                                      #
########################################################################


# You can add additional services here, as you see fit.
# To discover new services and configuration, see docs/supported-services.md
