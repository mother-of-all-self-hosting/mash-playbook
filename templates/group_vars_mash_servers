---

# role-specific:auxiliary
########################################################################
#                                                                      #
# aux                                                                  #
#                                                                      #
########################################################################

aux_directory_default_owner: "{{ mash_playbook_user_name }}"
aux_directory_default_group: "{{ mash_playbook_group_name }}"

aux_file_default_owner: "{{ mash_playbook_user_name }}"
aux_file_default_group: "{{ mash_playbook_group_name }}"

########################################################################
#                                                                      #
# /aux                                                                 #
#                                                                      #
########################################################################
# /role-specific:auxiliary



# role-specific:ssh
########################################################################
#                                                                      #
# ssh                                                                  #
#                                                                      #
########################################################################

system_security_ssh_enabled: false

########################################################################
#                                                                      #
# /ssh                                                                 #
#                                                                      #
########################################################################
# /role-specific:ssh



# role-specific:fail2ban
########################################################################
#                                                                      #
# fail2ban                                                             #
#                                                                      #
########################################################################

system_security_fail2ban_enabled: false

########################################################################
#                                                                      #
# /fail2ban                                                            #
#                                                                      #
########################################################################
# /role-specific:fail2ban



# role-specific:swap
########################################################################
#                                                                      #
# swap                                                                 #
#                                                                      #
########################################################################

system_swap_enabled: false

########################################################################
#                                                                      #
# /swap                                                                #
#                                                                      #
########################################################################
# /role-specific:swap



# role-specific:systemd_service_manager
########################################################################
#                                                                      #
# systemd_service_manager                                              #
#                                                                      #
########################################################################

mash_playbook_devture_systemd_service_manager_services_list_auto_itemized:
  # Dummy entry, which is not role-specific.
  # Ensures there's at least one entry defined in the list.
  - "{{ omit }}"

  # role-specific:adguard_home
  - |-
    {{ ({'name': (adguard_home_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'adguard-home']} if adguard_home_enabled else omit) }}
  # /role-specific:adguard_home

  # role-specific:anki
  - |-
    {{ ({'name': (anki_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'anki']} if anki_enabled else omit) }}
  # /role-specific:anki

  # role-specific:anonymousoverflow
  - |-
    {{ ({'name': (anonymousoverflow_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'anonymousoverflow']} if anonymousoverflow_enabled else omit) }}
  # /role-specific:anonymousoverflow

  # role-specific:apisix_dashboard
  - |-
    {{ ({'name': (apisix_dashboard_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'apisix-dashboard']} if apisix_dashboard_enabled else omit) }}
  # /role-specific:apisix_dashboard

  # role-specific:apisix_gateway
  - |-
    {{ ({'name': (apisix_gateway_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'apisix-gateway']} if apisix_gateway_enabled else omit) }}
  # /role-specific:apisix_gateway

  # role-specific:apprise
  - |-
    {{ ({'name': (apprise_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'apprise']} if apprise_enabled else omit) }}
  # /role-specific:apprise

  # role-specific:appsmith
  - |-
    {{ ({'name': (appsmith_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'appsmith']} if appsmith_enabled else omit) }}
  # /role-specific:appsmith

  # role-specific:asciinema_server
  - |-
    {{ ({'name': (asciinema_server_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'asciinema-server']} if asciinema_server_enabled else omit) }}
  # /role-specific:asciinema_server

  # role-specific:atuin
  - |-
    {{ ({'name': (atuin_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'atuin']} if atuin_enabled else omit) }}
  # /role-specific:atuin

  # role-specific:audiobookshelf
  - |-
    {{ ({'name': (audiobookshelf_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'audiobookshelf']} if audiobookshelf_enabled else omit) }}
  # /role-specific:audiobookshelf

  # role-specific:authelia
  - |-
    {{ ({'name': (authelia_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'authelia']} if authelia_enabled else omit) }}
  # /role-specific:authelia

  # role-specific:authentik
  - |-
    {{ ({'name': (authentik_server_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'authentik']} if authentik_enabled else omit) }}
  - |-
    {{ ({'name': (authentik_worker_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'authentik']} if authentik_enabled else omit) }}
  # /role-specific:authentik

  # role-specific:autobrr
  - |-
    {{ ({'name': (autobrr_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'autobrr']} if autobrr_enabled else omit) }}
  # /role-specific:autobrr

  # role-specific:backup_borg
  - |-
    {{ ({'name': (backup_borg_identifier + '.timer'), 'priority': 5000, 'groups': ['mash', 'backup', 'borg']} if backup_borg_enabled else omit) }}
  # /role-specific:backup_borg

  # role-specific:barassistant
  - |-
    {{ ({'name': (barassistant_saltrim_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'barassistant']} if barassistant_enabled else omit) }}
  - |-
    {{ ({'name': (barassistant_server_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'barassistant']} if barassistant_enabled else omit) }}
  # /role-specific:barassistant

  # role-specific:browserless
  - |-
    {{ ({'name': (browserless_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'browserless']} if browserless_enabled else omit) }}
  # /role-specific:browserless

  # role-specific:calibre_web
  - |-
    {{ ({'name': (calibre_web_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'calibre-web']} if calibre_web_enabled else omit) }}
  # /role-specific:calibre_web

  # role-specific:changedetection
  - |-
    {{ ({'name': (changedetection_identifier + '.service'), 'priority': 2100, 'groups': ['mash', 'changedetection']} if changedetection_enabled else omit) }}
  - |-
    {{ ({'name': (changedetection_playwright_driver_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'changedetection']} if changedetection_playwright_driver_enabled else omit) }}
  # /role-specific:changedetection

  # role-specific:clickhouse
  - |-
    {{ ({'name': (clickhouse_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'clickhouse']} if clickhouse_enabled else omit) }}
  # /role-specific:clickhouse

  # role-specific:collabora_online
  - |-
    {{ ({'name': (collabora_online_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'collabora-online']} if collabora_online_enabled else omit) }}
  # /role-specific:collabora_online

  # role-specific:convertx
  - |-
    {{ ({'name': (convertx_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'convertx']} if convertx_enabled else omit) }}
  # /role-specific:convertx

  # role-specific:couchdb
  - |-
    {{ ({'name': (couchdb_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'couchdb']} if couchdb_enabled else omit) }}
  # /role-specific:couchdb

  # role-specific:container_socket_proxy
  - |-
    {{ ({'name': (container_socket_proxy_identifier + '.service'), 'priority': 200, 'groups': ['mash', 'reverse-proxies', 'container-socket-proxy']} if container_socket_proxy_enabled else omit) }}
  # /role-specific:container_socket_proxy

  # role-specific:cyberchef
  - |-
    {{ ({'name': (cyberchef_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'cyberchef']} if cyberchef_enabled else omit) }}
  # /role-specific:cyberchef

  # role-specific:docker_registry
  - |-
    {{ ({'name': (docker_registry_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'docker-registry']} if docker_registry_enabled else omit) }}
  - |-
    {{ ({'name': (docker_registry_identifier + '-garbage-collect.timer'), 'priority': 2500, 'groups': ['mash', 'docker-registry', 'docker-registry-gc']} if docker_registry_enabled else omit) }}
  # /role-specific:docker_registry

  # role-specific:docker_registry_browser
  - |-
    {{ ({'name': (docker_registry_browser_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'docker-registry-browser']} if docker_registry_browser_enabled else omit) }}
  # /role-specific:docker_registry_browser

  # role-specific:docker_registry_proxy
  - |-
    {{ ({'name': (docker_registry_proxy_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'docker-registry-proxy']} if docker_registry_proxy_enabled else omit) }}
  # /role-specific:docker_registry_proxy

  # role-specific:docker_registry_purger
  - |-
    {{ ({'name': (docker_registry_purger_identifier + '.timer'), 'priority': 3000, 'groups': ['mash', 'docker-registry-purger']} if docker_registry_purger_enabled else omit) }}
  # /role-specific:docker_registry_purger

  # role-specific:docmost
  - |-
    {{ ({'name': (docmost_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'docmost']} if docmost_enabled else omit) }}
  # /role-specific:docmost

  # role-specific:dokuwiki
  - |-
    {{ ({'name': (dokuwiki_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'dokuwiki']} if dokuwiki_enabled else omit) }}
  # /role-specific:dokuwiki

  # role-specific:duplicati
  - |-
    {{ ({'name': (duplicati_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'duplicati']} if duplicati_enabled else omit) }}
  # /role-specific:duplicati

  # role-specific:echoip
  - |-
    {{ ({'name': (echoip_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'echoip']} if echoip_enabled else omit) }}
  # /role-specific:echoip

  # role-specific:endlessh
  - |-
    {{ ({'name': (endlessh_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'endlessh']} if endlessh_enabled else omit) }}
  # /role-specific:endlessh

  # role-specific:etcd
  - |-
    {{ ({'name': (etcd_identifier + '.service'), 'priority': 500, 'groups': ['mash', 'etcd']} if etcd_enabled else omit) }}
  # /role-specific:etcd

  # role-specific:etherpad
  - |-
    {{ ({'name': (etherpad_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'etherpad']} if etherpad_enabled else omit) }}
  # /role-specific:etherpad

  # role-specific:excalidraw
  - |-
    {{ ({'name': (excalidraw_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'excalidraw']} if excalidraw_enabled else omit) }}
  # /role-specific:excalidraw

  # role-specific:excalidraw_room
  - |-
    {{ ({'name': (excalidraw_room_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'excalidraw_room']} if excalidraw_room_enabled else omit) }}
  # /role-specific:excalidraw_room

  # role-specific:exim_relay
  - |-
    {{ ({'name': (exim_relay_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'exim-relay']} if exim_relay_enabled else omit) }}
  # /role-specific:exim_relay

  # role-specific:filebrowser
  - |-
    {{ ({'name': (filebrowser_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'filebrowser']} if filebrowser_enabled else omit) }}
  # /role-specific:filebrowser

  # role-specific:filebrowser_quantum
  - |-
    {{ ({'name': (filebrowser_quantum_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'filebrowser-quantum']} if filebrowser_quantum_enabled else omit) }}
  # /role-specific:filebrowser_quantum

  # role-specific:firezone
  - |-
    {{ ({'name': (firezone_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'firezone']} if firezone_enabled else omit) }}
  # /role-specific:firezone

  # role-specific:flaresolverr
  - |-
    {{ ({'name': (flaresolverr_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'flaresolverr']} if flaresolverr_enabled else omit) }}
  # /role-specific:flaresolverr

  # role-specific:fmd_server
  - |-
    {{ ({'name': (fmd_server_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'fmd-server']} if fmd_server_enabled else omit) }}
  # /role-specific:fmd_server

  # role-specific:focalboard
  - |-
    {{ ({'name': (focalboard_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'focalboard']} if focalboard_enabled else omit) }}
  # /role-specific:focalboard

  # role-specific:forgejo
  - |-
    {{ ({'name': (forgejo_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'forgejo', 'forgejo-server']} if forgejo_enabled else omit) }}
  # /role-specific:forgejo

  # role-specific:forgejo_runner
  - |-
    {{ ({'name': (forgejo_runner_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'forgejo-runner']} if forgejo_runner_enabled else omit) }}
  # /role-specific:forgejo_runner

  # role-specific:freescout
  - |-
    {{ ({'name': (freescout_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'freescout']} if freescout_enabled else omit) }}
  # /role-specific:freescout

  # role-specific:freshrss
  - |-
    {{ ({'name': (freshrss_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'freshrss']} if freshrss_enabled else omit) }}
  # /role-specific:freshrss

  # role-specific:funkwhale
  - |-
    {{ ({'name': (funkwhale_api_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'funkwhale']} if funkwhale_enabled else omit) }}
  - |-
    {{ ({'name': (funkwhale_frontend_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'funkwhale']} if funkwhale_enabled else omit) }}
  - |-
    {{ ({'name': (funkwhale_celery_beat_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'funkwhale']} if funkwhale_enabled else omit) }}
  - |-
    {{ ({'name': (funkwhale_celery_worker_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'funkwhale']} if funkwhale_enabled else omit) }}
  - |-
    {{ ({'name': (funkwhale_watch_imports_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'funkwhale']} if funkwhale_enabled and funkwhale_watch_imports_enabled else omit) }}
  # /role-specific:funkwhale

  # role-specific:ghostfolio
  - |-
    {{ ({'name': (ghostfolio_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'ghostfolio']} if ghostfolio_enabled else omit) }}
  # /role-specific:ghostfolio

  # role-specific:gitea
  - |-
    {{ ({'name': (gitea_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'gitea', 'gitea-server']} if gitea_enabled else omit) }}
  # /role-specific:gitea

  # role-specific:gothub
  - |-
    {{ ({'name': (gothub_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'gothub']} if gothub_enabled else omit) }}
  # /role-specific:gothub

  # role-specific:gotify
  - |-
    {{ ({'name': (gotify_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'gotify']} if gotify_enabled else omit) }}
  # /role-specific:gotify

  # role-specific:gotosocial
  - |-
    {{ ({'name': (gotosocial_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'gotosocial']} if gotosocial_enabled else omit) }}
  # /role-specific:gotosocial

  # role-specific:grafana
  - |-
    {{ ({'name': (grafana_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'grafana']} if grafana_enabled else omit) }}
  # /role-specific:grafana

  # role-specific:headplane
  - |-
    {{ ({'name': (headplane_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'headplane']} if headplane_enabled else omit) }}
  # /role-specific:headplane

  # role-specific:headscale
  - |-
    {{ ({'name': (headscale_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'headscale']} if headscale_enabled else omit) }}
  # /role-specific:headscale

  # role-specific:healthchecks
  - |-
    {{ ({'name': (healthchecks_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'healthchecks']} if healthchecks_enabled else omit) }}
  # /role-specific:healthchecks

  # role-specific:homarr
  - |-
    {{ ({'name': (homarr_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'homarr']} if homarr_enabled else omit) }}
  # /role-specific:homarr

  # role-specific:hubsite
  - |-
    {{ ({'name': (hubsite_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'hubsite']} if hubsite_enabled else omit) }}
  # /role-specific:hubsite

  # role-specific:ihatemoney
  - |-
    {{ ({'name': (ihatemoney_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'ihatemoney']} if ihatemoney_enabled else omit) }}
  # /role-specific:ihatemoney

  # role-specific:ilmo
  - |-
    {{ ({'name': (ilmo_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'ilmo']} if ilmo_enabled else omit) }}
  # /role-specific:ilmo

  # role-specific:immich
  - |-
    {{ ({'name': (immich_server_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'immich']} if immich_enabled and immich_server_enabled else omit) }}
  - |-
    {{ ({'name': (immich_machine_learning_identifier + '.service'), 'priority': 1500, 'groups': ['mash', 'immich']} if immich_enabled and immich_machine_learning_enabled else omit) }}
  # /role-specific:immich

  # role-specific:immich_kiosk
  - |-
    {{ ({'name': (immich_kiosk_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'immich-kiosk']} if immich_kiosk_enabled else omit) }}
  # /role-specific:immich_kiosk

  # role-specific:infisical
  - |-
    {{ ({'name': (infisical_identifier + '-backend.service'), 'priority': 2000, 'groups': ['mash', 'infisical', 'infisical-backend']} if infisical_enabled else omit) }}
  - |-
    {{ ({'name': (infisical_identifier + '-frontend.service'), 'priority': 2000, 'groups': ['mash', 'infisical', 'infisical-frontend']} if infisical_enabled else omit) }}
  # /role-specific:infisical

  # role-specific:influxdb
  - |-
    {{ ({'name': (influxdb_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'influxdb']} if influxdb_enabled else omit) }}
  # /role-specific:influxdb

  # role-specific:jackett
  - |-
    {{ ({'name': (jackett_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'jackett']} if jackett_enabled else omit) }}
  # /role-specific:jackett

  # role-specific:jellyfin
  - |-
    {{ ({'name': (jellyfin_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'jellyfin']} if jellyfin_enabled else omit) }}
  # /role-specific:jellyfin

  # role-specific:jellyseerr
  - |-
    {{ ({'name': (jellyseerr_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'jellyseerr']} if jellyseerr_enabled else omit) }}
  # /role-specific:jellyseerr

  # role-specific:jitsi
  - |-
    {{ ({'name': (jitsi_identifier + '-web.service'), 'priority': 4200, 'groups': ['mash', 'jitsi', 'jitsi-web']} if jitsi_enabled else omit) }}
  - |-
    {{ ({'name': (jitsi_identifier + '-prosody.service'), 'priority': 4000, 'groups': ['mash', 'jitsi', 'jitsi-prosody']} if jitsi_enabled else omit) }}
  - |-
    {{ ({'name': (jitsi_identifier + '-jicofo.service'), 'priority': 4100, 'groups': ['mash', 'jitsi', 'jitsi-jicofo']} if jitsi_enabled else omit) }}
  - |-
    {{ ({'name': (jitsi_identifier + '-jvb.service'), 'priority': 4100, 'groups': ['mash', 'jitsi', 'jitsi-jvb']} if jitsi_enabled else omit) }}
  # /role-specific:jitsi

  # role-specific:joplin_server
  - |-
    {{ ({'name': (joplin_server_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'joplin-server']} if joplin_server_enabled else omit) }}
  # /role-specific:joplin_server

  # role-specific:karakeep
  - |-
    {{ ({'name': (karakeep_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'karakeep']} if karakeep_enabled else omit) }}
  # /role-specific:karakeep

  # role-specific:keycloak
  - |-
    {{ ({'name': (keycloak_identifier + '.service'), 'priority': 1000, 'groups': ['mash', 'keycloak']} if keycloak_enabled else omit) }}
  # /role-specific:keycloak

  # role-specific:keydb
  - |-
    {{ ({'name': (keydb_identifier + '.service'), 'priority': 750, 'groups': ['mash', 'keydb']} if keydb_enabled else omit) }}
  # /role-specific:keydb

  # role-specific:kutt
  - |-
    {{ ({'name': (kutt_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'kutt']} if kutt_enabled else omit) }}
  # /role-specific:kutt

  # role-specific:labelstudio
  - |-
    {{ ({'name': (labelstudio_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'labelstudio']} if labelstudio_enabled else omit) }}
  # /role-specific:labelstudio

  # role-specific:lago
  - |-
    {{ ({'name': (lago_identifier + '-api.service'), 'priority': 2000, 'groups': ['mash', 'lago', 'lago-api']} if lago_enabled else omit) }}
  - |-
    {{ ({'name': (lago_identifier + '-api-worker.service'), 'priority': 2500, 'groups': ['mash', 'lago', 'lago-api-worker']} if lago_enabled else omit) }}
  - |-
    {{ ({'name': (lago_identifier + '-api-clock.service'), 'priority': 2500, 'groups': ['mash', 'lago', 'lago-api-clock']} if lago_enabled else omit) }}
  - |-
    {{ ({'name': (lago_identifier + '-front.service'), 'priority': 2200, 'groups': ['mash', 'lago', 'lago-front']} if lago_enabled else omit) }}
  - |-
    {{ ({'name': (lago_identifier + '-pdf.service'), 'priority': 1900, 'groups': ['mash', 'lago', 'lago-pdf']} if lago_enabled else omit) }}
  # /role-specific:lago

  # role-specific:languagetool
  - |-
    {{ ({'name': (languagetool_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'languagetool']} if languagetool_enabled else omit) }}
  # /role-specific:languagetool

  # role-specific:limesurvey
  - |-
    {{ ({'name': (limesurvey_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'limesurvey']} if limesurvey_enabled else omit) }}
  # /role-specific:limesurvey

  # role-specific:linkding
  - |-
    {{ ({'name': (linkding_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'linkding']} if linkding_enabled else omit) }}
  # /role-specific:linkding

  # role-specific:linkwarden
  - |-
    {{ ({'name': (linkwarden_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'linkwarden']} if linkwarden_enabled else omit) }}
  # /role-specific:linkwarden

  # role-specific:listmonk
  - |-
    {{ ({'name': (listmonk_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'listmonk']} if listmonk_enabled else omit) }}
  # /role-specific:listmonk

  # role-specific:lldap
  - |-
    {{ ({'name': (lldap_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'lldap']} if lldap_enabled else omit) }}
  # /role-specific:lldap

  # role-specific:loki
  - |-
    {{ ({'name': (loki_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'loki']} if loki_enabled else omit) }}
  # /role-specific:loki

  # role-specific:mariadb
  - |-
    {{ ({'name': (mariadb_identifier + '.service'), 'priority': 500, 'groups': ['mash', 'mariadb']} if mariadb_enabled else omit) }}
  # /role-specific:mariadb

  # role-specific:matomo
  - |-
    {{ ({'name': (matomo_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'matomo']} if matomo_enabled else omit) }}
  # /role-specific:matomo

  # role-specific:matterbridge
  - |-
    {{ ({'name': (matterbridge_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'matterbridge']} if matterbridge_enabled else omit) }}
  # /role-specific:matterbridge

  # role-specific:mediawiki
  - |-
    {{ ({'name': (mediawiki_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'mediawiki']} if mediawiki_enabled else omit) }}
  # /role-specific:mediawiki

  # role-specific:meilisearch
  - |-
    {{ ({'name': (meilisearch_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'meilisearch']} if meilisearch_enabled else omit) }}
  # /role-specific:meilisearch

  # role-specific:minecraft
  - |-
    {{ ({'name': (minecraft_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'minecraft']} if minecraft_enabled else omit) }}
  # /role-specific:minecraft

  # role-specific:miniflux
  - |-
    {{ ({'name': (miniflux_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'miniflux']} if miniflux_enabled else omit) }}
  # /role-specific:miniflux

  # role-specific:misskey
  - |-
    {{ ({'name': (misskey_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'misskey']} if misskey_enabled else omit) }}
  # /role-specific:misskey

  # role-specific:mobilizon
  - |-
    {{ ({'name': (mobilizon_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'mobilizon']} if mobilizon_enabled else omit) }}
  # /role-specific:mobilizon

  # role-specific:mongodb
  - |-
    {{ ({'name': (mongodb_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'mongodb']} if mongodb_enabled else omit) }}
  # /role-specific:mongodb

  # role-specific:mosquitto
  - |-
    {{ ({'name': (mosquitto_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'mosquitto']} if mosquitto_enabled else omit) }}
  # /role-specific:mosquitto

  # role-specific:mozhi
  - |-
    {{ ({'name': (mozhi_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'mozhi']} if mozhi_enabled else omit) }}
  # /role-specific:mozhi

  # role-specific:mrs
  - |-
    {{ ({'name': (mrs_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'mrs']} if mrs_enabled else omit) }}
  # /role-specific:mrs

  # role-specific:n8n
  - |-
    {{ ({'name': (n8n_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'n8n']} if n8n_enabled else omit) }}
  # /role-specific:n8n

  # role-specific:navidrome
  - |-
    {{ ({'name': (navidrome_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'navidrome']} if navidrome_enabled else omit) }}
  # /role-specific:navidrome

  # role-specific:neko
  - |-
    {{ ({'name': (neko_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'neko']} if neko_enabled else omit) }}
  # /role-specific:neko

  # role-specific:netbox
  - |-
    {{ ({'name': (netbox_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'netbox', 'netbox-server']} if netbox_enabled else omit) }}
  - |-
    {{ ({'name': (netbox_identifier + '-worker.service'), 'priority': 2500, 'groups': ['mash', 'netbox', 'netbox-worker']} if netbox_enabled else omit) }}
  - |-
    {{ ({'name': (netbox_identifier + '-housekeeping.service'), 'priority': 2500, 'groups': ['mash', 'netbox', 'netbox-housekeeping']} if netbox_enabled else omit) }}
  # /role-specific:netbox

  # role-specific:nextcloud
  - |-
    {{ ({'name': (nextcloud_identifier + '-server.service'), 'priority': 2000, 'groups': ['mash', 'nextcloud', 'nextcloud-server']} if nextcloud_enabled else omit) }}
  - |-
    {{ ({'name': (nextcloud_identifier + '-cron.timer'), 'priority': 2500, 'groups': ['mash', 'nextcloud', 'nextcloud-cron']} if nextcloud_enabled else omit) }}
  - |-
    {{ ({'name': (nextcloud_identifier + '-app-update.timer'), 'priority': 2500, 'groups': ['mash', 'nextcloud', 'nextcloud-app-update']} if nextcloud_enabled and nextcloud_app_autoupdate_enabled else omit) }}
  # /role-specific:nextcloud

  # role-specific:nocdnbs
  - |-
    {{ ({'name': (nocdnbs_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'nocdnbs']} if nocdnbs_enabled else omit) }}
  # /role-specific:nocdnbs

  # role-specific:nodebb
  - |-
    {{ ({'name': (nodebb_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'nodebb']} if nodebb_enabled else omit) }}
  # /role-specific:nodebb

  # role-specific:notfellchen
  - |-
    {{ ({'name': (notfellchen_identifier  + '.service'), 'priority': 2000, 'groups': ['mash', 'notfellchen']} if notfellchen_enabled else omit) }}
  - |-
    {{ ({'name': (notfellchen_sws_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'notfellchen', 'notfellchen-sws']} if notfellchen_enabled else omit) }}
  - |-
    {{ ({'name': (notfellchen_celery_beat_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'notfellchen']} if notfellchen_enabled else omit) }}
  - |-
    {{ ({'name': (notfellchen_celery_worker_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'notfellchen']} if notfellchen_enabled else omit) }}
  # /role-specific:notfellchen

  # role-specific:ntfy
  - |-
    {{ ({'name': (ntfy_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'ntfy']} if ntfy_enabled else omit) }}
  # /role-specific:ntfy

  # role-specific:oauth2_proxy
  - |-
    {{ ({'name': (oauth2_proxy_identifier + '.service'), 'priority': 1900, 'groups': ['mash', 'oauth2-proxy']} if oauth2_proxy_enabled else omit) }}
  # /role-specific:oauth2_proxy

  # role-specific:onlyoffice_docs
  - |-
    {{ ({'name': (onlyoffice_docs_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'onlyoffice-docs']} if onlyoffice_docs_enabled else omit) }}
  # /role-specific:onlyoffice_docs

  # role-specific:opengist
  - |-
    {{ ({'name': (opengist_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'opengist']} if opengist_enabled else omit) }}
  # /role-specific:opengist

  # role-specific:outline
  - |-
    {{ ({'name': (outline_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'outline']} if outline_enabled else omit) }}
  # /role-specific:outline

  # role-specific:overseerr
  - |-
    {{ ({'name': (overseerr_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'overseerr']} if overseerr_enabled else omit) }}
  # /role-specific:overseerr

  # role-specific:owncast
  - |-
    {{ ({'name': (owncast_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'owncast']} if owncast_enabled else omit) }}
  # /role-specific:owncast

  # role-specific:oxitraffic
  - |-
    {{ ({'name': (oxitraffic_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'oxitraffic']} if oxitraffic_enabled else omit) }}
  # /role-specific:oxitraffic

  # role-specific:paperless
  - |-
    {{ ({'name': (paperless_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'paperless']} if paperless_enabled else omit) }}
  - |-
    {{ ({'name': (paperless_tika_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'paperless']} if paperless_enabled and paperless_tika_enabled else omit) }}
  - |-
    {{ ({'name': (paperless_gotenberg_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'paperless']} if paperless_enabled and paperless_gotenberg_enabled else omit) }}
  # /role-specific:paperless

  # role-specific:peertube
  - |-
    {{ ({'name': (peertube_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'peertube']} if peertube_enabled else omit) }}
  # /role-specific:peertube

  # role-specific:plausible
  - |-
    {{ ({'name': (plausible_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'plausible']} if plausible_enabled else omit) }}
  # /role-specific:plausible

  # role-specific:plex
  - |-
    {{ ({'name': (plex_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'plex']} if plex_enabled else omit) }}
  # /role-specific:plex

  # role-specific:pocket_id
  - |-
    {{ ({'name': (pocket_id_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'pocket-id']} if pocket_id_enabled else omit) }}
  # /role-specific:pocket_id

  # role-specific:postgis
  - |-
    {{ ({'name': (postgis_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'metrics', 'postgis']} if postgis_enabled else omit) }}
  # /role-specific:postgis

  # role-specific:poodledonts
  - |-
    {{ ({'name': (poodledonts_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'poodledonts']} if poodledonts_enabled else omit) }}
  # /role-specific:poodledonts

  # role-specific:postgres
  - |-
    {{ ({'name': (postgres_identifier + '.service'), 'priority': 500, 'groups': ['mash', 'postgres']} if postgres_enabled else omit) }}
  # /role-specific:postgres

  # role-specific:postgres_backup
  - |-
    {{ ({'name': (postgres_backup_identifier + '.service'), 'priority': 5000, 'groups': ['mash', 'backup', 'postgres-backup']} if postgres_backup_enabled else omit) }}
  # /role-specific:postgres_backup

  # role-specific:privatebin
  - |-
    {{ ({'name': (privatebin_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'privatebin']} if privatebin_enabled else omit) }}
  # /role-specific:privatebin

  # role-specific:prometheus
  - |-
    {{ ({'name': (prometheus_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'metrics', 'prometheus']} if prometheus_enabled else omit) }}
  # /role-specific:prometheus

  # role-specific:prometheus_blackbox_exporter
  - |-
    {{ ({'name': (prometheus_blackbox_exporter_identifier + '.service'), 'priority': 500, 'groups': ['mash', 'metrics', 'prometheus-blackbox-exporter']} if prometheus_blackbox_exporter_enabled else omit) }}
  # /role-specific:prometheus_blackbox_exporter

  # role-specific:prometheus_node_exporter
  - |-
    {{ ({'name': (prometheus_node_exporter_identifier + '.service'), 'priority': 500, 'groups': ['mash', 'metrics', 'prometheus-node-exporter']} if prometheus_node_exporter_enabled else omit) }}
  # /role-specific:prometheus_node_exporter

  # role-specific:prometheus_postgres_exporter
  - |-
    {{ ({'name': (prometheus_postgres_exporter_identifier + '.service'), 'priority': 500, 'groups': ['mash', 'metrics', 'prometheus-postgres-exporter']} if prometheus_postgres_exporter_enabled else omit) }}
  # /role-specific:prometheus_postgres_exporter

  # role-specific:prometheus_ssh_exporter
  - |-
    {{ ({'name': (prometheus_ssh_exporter_identifier + '.service'), 'priority': 500, 'groups': ['mash', 'metrics', 'prometheus-ssh-exporter']} if prometheus_ssh_exporter_enabled else omit) }}
  # /role-specific:prometheus_ssh_exporter

  # role-specific:promtail
  - |-
    {{ ({'name': (promtail_identifier + '.service'), 'priority': 500, 'groups': ['mash', 'logs', 'promtail']} if promtail_enabled else omit) }}
  # /role-specific:promtail

  # role-specific:qbittorrent
  - |-
    {{ ({'name': (qbittorrent_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'qbittorrent']} if qbittorrent_enabled else omit) }}
  # /role-specific:qbittorrent

  # role-specific:radarr
  - |-
    {{ ({'name': (radarr_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'radarr']} if radarr_enabled else omit) }}
  # /role-specific:radarr

  # role-specific:radicale
  - |-
    {{ ({'name': (radicale_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'radicale']} if radicale_enabled else omit) }}
  # /role-specific:radicale

  # role-specific:reactflux
  - |-
    {{ ({'name': (reactflux_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'reactflux']} if reactflux_enabled else omit) }}
  # /role-specific:reactflux

  # role-specific:readeck
  - |-
    {{ ({'name': (readeck_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'readeck']} if readeck_enabled else omit) }}
  # /role-specific:readeck

  # role-specific:redis
  - |-
    {{ ({'name': (redis_identifier + '.service'), 'priority': 750, 'groups': ['mash', 'redis']} if redis_enabled else omit) }}
  # /role-specific:redis

  # role-specific:redlib
  - |-
    {{ ({'name': (redlib_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'redlib']} if redlib_enabled else omit) }}
  # /role-specific:redlib

  # role-specific:redmine
  - |-
    {{ ({'name': (redmine_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'redmine']} if redmine_enabled else omit) }}
  - |-
    {{ ({'name': (redmine_identifier + '-send-reminders.timer'), 'priority': 2000, 'groups': ['mash', 'redmine']} if redmine_enabled else omit) }}
  - |-
    {{ ({'name': (redmine_identifier + '-recurring-tasks.timer'), 'priority': 2000, 'groups': ['mash', 'redmine']} if redmine_enabled and redmine_recurring_tasks_enabled else omit) }}
  # /role-specific:redmine

  # role-specific:roundcube
  - |-
    {{ ({'name': (roundcube_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'roundcube']} if roundcube_enabled else omit) }}
  # /role-specific:roundcube

  # role-specific:rssbridge
  - |-
    {{ ({'name': (rssbridge_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'rssbridge']} if rssbridge_enabled else omit) }}
  # /role-specific:rssbridge

  # role-specific:rumqttd
  - |-
    {{ ({'name': (rumqttd_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'rumqttd']} if rumqttd_enabled else omit) }}
  # /role-specific:rumqttd

  # role-specific:searxng
  - |-
    {{ ({'name': (searxng_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'searxng']} if searxng_enabled else omit) }}
  # /role-specific:searxng

  # role-specific:semaphore
  - |-
    {{ ({'name': (semaphore_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'semaphore']} if semaphore_enabled else omit) }}
  # /role-specific:semaphore

  # role-specific:send
  - |-
    {{ ({'name': (send_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'send']} if send_enabled else omit) }}
  # /role-specific:send

  # role-specific:sftpgo
  - |-
    {{ ({'name': (sftpgo_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'sftpgo']} if sftpgo_enabled else omit) }}
  # /role-specific:sftpgo

  # role-specific:soft_serve
  - |-
    {{ ({'name': (soft_serve_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'soft-serve']} if soft_serve_enabled else omit) }}
  # /role-specific:soft_serve

  # role-specific:sonarr
  - |-
    {{ ({'name': (sonarr_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'sonarr']} if sonarr_enabled else omit) }}
  # /role-specific:sonarr

  # role-specific:stirling_pdf
  - |-
    {{ ({'name': (stirling_pdf_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'stirling_pdf']} if stirling_pdf_enabled else omit) }}
  # /role-specific:stirling_pdf

  # role-specific:syncstorage_rs_docker
  - |-
    {{ ({'name': (syncstorage_rs_docker_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'syncstorage-rs-docker']} if syncstorage_rs_docker_enabled else omit) }}
  # /role-specific:syncstorage_rs_docker

  # role-specific:syncthing
  - |-
    {{ ({'name': (syncthing_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'syncthing']} if syncthing_enabled else omit) }}
  # /role-specific:syncthing

  # role-specific:tandoor
  - |-
    {{ ({'name': (tandoor_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'tandoor']} if tandoor_enabled else omit) }}
  # /role-specific:tandoor

  # role-specific:telegraf
  - |-
    {{ ({'name': (telegraf_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'telegraf']} if telegraf_enabled else omit) }}
  # /role-specific:telegraf

  # role-specific:thelounge
  - |-
    {{ ({'name': (thelounge_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'thelounge']} if thelounge_enabled else omit) }}
  # /role-specific:thelounge

  # role-specific:tinyauth
  - |-
    {{ ({'name': (tinyauth_identifier + '.service'), 'priority': 1900, 'groups': ['mash', 'tinyauth']} if tinyauth_enabled else omit) }}
  # /role-specific:tinyauth

  # role-specific:traefik
  - |-
    {{ ({'name': (traefik_identifier + '.service'), 'priority': 250, 'groups': ['mash', 'traefik', 'reverse-proxies']} if traefik_enabled else omit) }}
  # /role-specific:traefik

  # role-specific:tsdproxy
  - |-
    {{ ({'name': (tsdproxy_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'tsdproxy']} if tsdproxy_enabled else omit) }}
  # /role-specific:tsdproxy

  # role-specific:typesense
  - |-
    {{ ({'name': (typesense_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'typesense']} if typesense_enabled else omit) }}
  # /role-specific:typesense

  # role-specific:uptime_kuma
  - |-
    {{ ({'name': (uptime_kuma_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'uptime-kuma']} if uptime_kuma_enabled else omit) }}
  # /role-specific:uptime_kuma

  # role-specific:valkey
  - |-
    {{ ({'name': (valkey_identifier + '.service'), 'priority': 750, 'groups': ['mash', 'valkey']} if valkey_enabled else omit) }}
  # /role-specific:valkey

  # role-specific:vaultwarden
  - |-
    {{ ({'name': (vaultwarden_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'vaultwarden', 'vaultwarden-server']} if vaultwarden_enabled else omit) }}
  # /role-specific:vaultwarden

  # role-specific:vikunja
  - |-
    {{ ({'name': (vikunja_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'vikunja']} if vikunja_enabled else omit) }}
  # /role-specific:vikunja

  # role-specific:wetty
  - |-
    {{ ({'name': (wetty_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'wetty']} if wetty_enabled else omit) }}
  # /role-specific:wetty

  # role-specific:wg_easy
  - |-
    {{ ({'name': (wg_easy_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'wg-easy']} if wg_easy_enabled else omit) }}
  # /role-specific:wg_easy

  # role-specific:woodpecker_ci_agent
  - |-
    {{ ({'name': (woodpecker_ci_agent_identifier + '.service'), 'priority': 4100, 'groups': ['mash', 'woodpecker', 'ci', 'woodpecker-ci-agent']} if woodpecker_ci_agent_enabled else omit) }}
  # /role-specific:woodpecker_ci_agent

  # role-specific:woodpecker_ci_server
  - |-
    {{ ({'name': (woodpecker_ci_server_identifier + '.service'), 'priority': 4000, 'groups': ['mash', 'woodpecker', 'ci', 'woodpecker-ci-server']} if woodpecker_ci_server_enabled else omit) }}
  # /role-specific:woodpecker_ci_server

  # role-specific:wordpress
  - |-
    {{ ({'name': (wordpress_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'wordpress']} if wordpress_enabled else omit) }}
  # /role-specific:wordpress

  # role-specific:writefreely
  - |-
    {{ ({'name': (writefreely_identifier  + '.service'), 'priority': 2000, 'groups': ['mash', 'writefreely']} if writefreely_enabled else omit) }}
  # /role-specific:writefreely

  # role-specific:yacy
  - |-
    {{ ({'name': (yacy_identifier + '.service'), 'priority': 2000, 'groups': ['mash', 'yacy']} if yacy_enabled else omit) }}
  # /role-specific:yacy

  # role-specific:yourls
  - |-
    {{ ({'name': (yourls_identifier  + '.service'), 'priority': 2000, 'groups': ['mash', 'yourls']} if yourls_enabled else omit) }}
  # /role-specific:yourls

devture_systemd_service_manager_services_list_auto: "{{ mash_playbook_devture_systemd_service_manager_services_list_auto_itemized | reject('equalto', omit) }}"

########################################################################
#                                                                      #
# /systemd_service_manager                                             #
#                                                                      #
########################################################################
# /role-specific:systemd_service_manager



# role-specific:postgres
########################################################################
#                                                                      #
# postgres                                                             #
#                                                                      #
########################################################################

postgres_enabled: false

postgres_identifier: "{{ mash_playbook_service_identifier_prefix }}postgres"

postgres_architecture: "{{ mash_playbook_architecture }}"

postgres_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}postgres"

postgres_uid: "{{ mash_playbook_uid }}"
postgres_gid: "{{ mash_playbook_gid }}"

postgres_allowed_versions_auto: "{{ backup_borg_supported_postgres_versions | map('int') if backup_borg_enabled | default(false) and backup_borg_postgresql_enabled | default(false) else [] }}"

# This includes everything for maximum safety.
# It may not be optimal though, because some services may not be dependent on Postgres at all, etc.
postgres_systemd_services_to_stop_for_maintenance_list_auto: "{{ devture_systemd_service_manager_services_list_auto | map(attribute='name') | reject('equalto', (postgres_identifier + '.service')) }}"

mash_playbook_postgres_managed_databases_auto_itemized:
  # Dummy entry, which is not role-specific.
  # Ensures there's at least one entry defined in the list.
  - "{{ omit }}"

  # role-specific:asciinema_server
  - |-
    {{
      ({
        'name': asciinema_server_database_name,
        'username': asciinema_server_database_username,
        'password': asciinema_server_database_password,
      } if asciinema_server_enabled and asciinema_server_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:asciinema_server

  # role-specific:atuin
  - |-
    {{
      ({
        'name': atuin_database_name,
        'username': atuin_database_username,
        'password': atuin_database_password,
      } if atuin_enabled and atuin_database_hostname == postgres_connection_hostname and atuin_database_type == 'postgres' else omit)
    }}
  # /role-specific:atuin

  # role-specific:authelia
  - |-
    {{
      ({
        'name': authelia_config_storage_postgres_database,
        'username': authelia_config_storage_postgres_username,
        'password': authelia_config_storage_postgres_password,
      } if authelia_enabled and authelia_config_storage_postgres_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:authelia

  # role-specific:authentik
  - |-
    {{
      ({
        'name': authentik_database_name,
        'username': authentik_database_username,
        'password': authentik_database_password,
      } if authentik_enabled and authentik_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:authentik

  # role-specific:docmost
  - |-
    {{
      ({
        'name': docmost_database_name,
        'username': docmost_database_username,
        'password': docmost_database_password,
      } if docmost_enabled and docmost_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:docmost

  # role-specific:etherpad
  - |-
    {{
      ({
        'name': etherpad_database_name,
        'username': etherpad_database_postgres_username,
        'password': etherpad_database_postgres_password,
      } if etherpad_enabled and etherpad_database_postgres_hostname == postgres_connection_hostname and etherpad_database_type == 'postgres' else omit)
    }}
  # /role-specific:etherpad

  # role-specific:firezone
  - |-
    {{
      ({
        'name': firezone_database_name,
        'username': firezone_database_username,
        'password': firezone_database_password,
      } if firezone_enabled and firezone_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:firezone

  # role-specific:focalboard
  - |-
    {{
      ({
        'name': focalboard_database_name,
        'username': focalboard_database_username,
        'password': focalboard_database_password,
      } if focalboard_enabled and focalboard_database_hostname == postgres_connection_hostname and focalboard_database_type == 'postgres' else omit)
    }}
  # /role-specific:focalboard

  # role-specific:forgejo
  - |-
    {{
      ({
        'name': forgejo_database_name,
        'username': forgejo_database_postgres_username,
        'password': forgejo_database_postgres_password,
      } if forgejo_enabled and forgejo_database_postgres_hostname == postgres_connection_hostname and forgejo_database_type == 'postgres' else omit)
    }}
  # /role-specific:forgejo

  # role-specific:freescout
  - |-
    {{
      ({
        'name': freescout_database_name,
        'username': freescout_database_username,
        'password': freescout_database_password,
      } if freescout_enabled and freescout_database_hostname == postgres_connection_hostname and freescout_database_type == 'pgsql' else omit)
    }}
  # /role-specific:freescout

  # role-specific:freshrss
  - |-
    {{
      ({
        'name': freshrss_database_name,
        'username': freshrss_database_username,
        'password': freshrss_database_password,
      } if freshrss_enabled and freshrss_database_hostname == postgres_connection_hostname and freshrss_database_type == 'postgres' else omit)
    }}
  # /role-specific:freshrss

  # role-specific:funkwhale
  - |-
    {{
      ({
        'name': funkwhale_database_name,
        'username': funkwhale_database_username,
        'password': funkwhale_database_password,
      } if funkwhale_enabled and funkwhale_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:funkwhale

  # role-specific:ghostfolio
  - |-
    {{
      ({
        'name': ghostfolio_database_name,
        'username': ghostfolio_database_username,
        'password': ghostfolio_database_password,
      } if ghostfolio_enabled and ghostfolio_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:ghostfolio

  # role-specific:gitea
  - |-
    {{
      ({
        'name': gitea_database_name,
        'username': gitea_database_username,
        'password': gitea_database_password,
      } if gitea_enabled and gitea_database_hostname == postgres_connection_hostname and gitea_database_type == 'postgres' else omit)
    }}
  # /role-specific:gitea

  # role-specific:gotify
  - |-
    {{
      ({
        'name': gotify_database_name,
        'username': gotify_database_postgres_username,
        'password': gotify_database_postgres_password,
      } if gotify_enabled and gotify_database_postgres_hostname == postgres_connection_hostname and gotify_database_type == 'postgres' else omit)
    }}
  # /role-specific:gotify

  # role-specific:gotosocial
  - |-
    {{
      ({
        'name': gotosocial_database_name,
        'username': gotosocial_database_username,
        'password': gotosocial_database_password,
      } if gotosocial_enabled and gotosocial_database_hostname == postgres_connection_hostname and gotosocial_database_type == 'postgres' else omit)
    }}
  # /role-specific:gotosocial

  # role-specific:healthchecks
  - |-
    {{
      ({
        'name': healthchecks_database_name,
        'username': healthchecks_database_username,
        'password': healthchecks_database_password,
      } if healthchecks_enabled and healthchecks_database_hostname == postgres_connection_hostname and healthchecks_database_type == 'postgres' else omit)
    }}
  # /role-specific:healthchecks

  # role-specific:homarr
  - |-
    {{
      ({
        'name': homarr_database_name,
        'username': homarr_database_postgres_username,
        'password': homarr_database_postgres_password,
      } if homarr_enabled and homarr_database_postgres_hostname == postgres_connection_hostname and homarr_database_type == 'node-postgres' else omit)
    }}
  # /role-specific:homarr

  # role-specific:ihatemoney
  - |-
    {{
      ({
        'name': ihatemoney_database_name,
        'username': ihatemoney_database_username,
        'password': ihatemoney_database_password,
      } if ihatemoney_enabled and ihatemoney_database_hostname == postgres_connection_hostname and ihatemoney_database_type == 'postgres' else omit)
    }}
  # /role-specific:ihatemoney

  # role-specific:ilmo
  - |-
    {{
      ({
        'name': ilmo_database_name,
        'username': ilmo_database_username,
        'password': ilmo_database_password,
      } if ilmo_enabled and ilmo_database_host == postgres_connection_hostname and ilmo_database_type == 'postgresql' else omit)
    }}
  # /role-specific:ilmo

  # role-specific:immich
  # Ref: https://immich.app/docs/administration/postgres-standalone/#without-superuser-permission
  - |-
    {{
      ({
        'name': immich_database_name,
        'username': immich_database_username,
        'password': immich_database_password,
        'additional_sql_queries': immich_database_preparation_sql_queries,
      } if immich_enabled and immich_server_enabled and immich_database_hostname == postgres_identifier else omit)
    }}
  # /role-specific:immich

  # role-specific:joplin_server
  - |-
    {{
      ({
        'name': joplin_server_database_name,
        'username': joplin_server_database_username,
        'password': joplin_server_database_password,
      } if joplin_server_enabled and joplin_server_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:joplin_server

  # role-specific:keycloak
  - |-
    {{
      ({
        'name': keycloak_database_name,
        'username': keycloak_database_username,
        'password': keycloak_database_password,
      } if keycloak_enabled and keycloak_database_hostname == postgres_connection_hostname and keycloak_database_type == 'postgres' else omit)
    }}
  # /role-specific:keycloak

  # role-specific:kutt
  - |-
    {{
      ({
        'name': kutt_database_name,
        'username': kutt_database_postgres_username,
        'password': kutt_database_postgres_password,
      } if kutt_enabled and kutt_database_postgres_hostname == postgres_connection_hostname and kutt_database_type == 'pg' else omit)
    }}
  # /role-specific:kutt

  # role-specific:labelstudio
  - |-
    {{
      ({
        'name': labelstudio_database_name,
        'username': labelstudio_database_username,
        'password': labelstudio_database_password,
      } if labelstudio_enabled and labelstudio_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:labelstudio

  # role-specific:lago
  - |-
    {{
      ({
        'name': lago_database_name,
        'username': lago_database_username,
        'password': lago_database_password,
      } if lago_enabled and lago_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:lago

  # role-specific:linkding
  - |-
    {{
      ({
        'name': linkding_database_name,
        'username': linkding_database_username,
        'password': linkding_database_password,
      } if linkding_enabled and linkding_database_hostname == postgres_connection_hostname and linkding_database_type == 'postgres' else omit)
    }}
  # /role-specific:linkding

  # role-specific:linkwarden
  - |-
    {{
      ({
        'name': linkwarden_database_name,
        'username': linkwarden_database_username,
        'password': linkwarden_database_password,
      } if linkwarden_enabled and linkwarden_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:linkwarden

  # role-specific:listmonk
  - |-
    {{
      ({
        'name': listmonk_database_name,
        'username': listmonk_database_username,
        'password': listmonk_database_password,
      } if listmonk_enabled and listmonk_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:listmonk

  # role-specific:lldap
  - |-
    {{
      ({
        'name': lldap_database_name,
        'username': lldap_database_postgres_username,
        'password': lldap_database_postgres_password,
      } if lldap_enabled and lldap_database_postgres_hostname == postgres_connection_hostname and lldap_database_type == 'postgres' else omit)
    }}
  # /role-specific:lldap

  # role-specific:mediawiki
  - |-
    {{
      ({
        'name': mediawiki_database_name,
        'username': mediawiki_database_postgres_username,
        'password': mediawiki_database_postgres_password,
      } if mediawiki_enabled and mediawiki_database_postgres_hostname == postgres_connection_hostname and mediawiki_database_type == 'postgres' else omit)
    }}
  # /role-specific:mediawiki

  # role-specific:miniflux
  - |-
    {{
      ({
        'name': miniflux_database_name,
        'username': miniflux_database_username,
        'password': miniflux_database_password,
      } if miniflux_enabled and miniflux_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:miniflux

  # role-specific:misskey
  - |-
    {{
      ({
        'name': misskey_database_name,
        'username': misskey_database_username,
        'password': misskey_database_password,
      } if misskey_enabled and misskey_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:misskey

  # role-specific:n8n
  - |-
    {{
      ({
        'name': n8n_database_name,
        'username': n8n_database_username,
        'password': n8n_database_password,
      } if n8n_enabled and n8n_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:n8n

  # role-specific:netbox
  - |-
    {{
      ({
        'name': netbox_database_name,
        'username': netbox_database_username,
        'password': netbox_database_password,
      } if netbox_enabled and netbox_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:netbox

  # role-specific:nextcloud
  - |-
    {{
      ({
        'name': nextcloud_database_name,
        'username': nextcloud_database_postgres_username,
        'password': nextcloud_database_postgres_password,
      } if nextcloud_enabled and nextcloud_database_postgres_hostname == postgres_connection_hostname and nextcloud_database_type == 'postgres' else omit)
    }}
  # /role-specific:nextcloud

  # role-specific:notfellchen
  - |-
    {{
      ({
        'name': notfellchen_database_name,
        'username': notfellchen_database_username,
        'password': notfellchen_database_password,
      } if notfellchen_enabled and notfellchen_database_host == postgres_connection_hostname and notfellchen_database_type == 'postgresql' else omit)
    }}
  # /role-specific:notfellchen

  # role-specific:onlyoffice_docs
  - |-
    {{
      ({
        'name': onlyoffice_docs_database_name,
        'username': onlyoffice_docs_database_postgres_username,
        'password': onlyoffice_docs_database_postgres_password,
      } if onlyoffice_docs_enabled and onlyoffice_docs_database_postgres_hostname == postgres_connection_hostname and onlyoffice_docs_database_type == 'postgres' else omit)
    }}
  # /role-specific:onlyoffice_docs

  # role-specific:opengist
  - |-
    {{
      ({
        'name': opengist_database_name,
        'username': opengist_database_postgres_username,
        'password': opengist_database_postgres_password,
      } if opengist_enabled and opengist_database_postgres_hostname == postgres_connection_hostname and opengist_database_type == 'postgres' else omit)
    }}
  # /role-specific:opengist

  # role-specific:outline
  - |-
    {{
      ({
        'name': outline_database_name,
        'username': outline_database_username,
        'password': outline_database_password,
      } if outline_enabled and outline_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:outline

  # role-specific:oxitraffic
  - |-
    {{
      ({
        'name': oxitraffic_database_name,
        'username': oxitraffic_database_username,
        'password': oxitraffic_database_password,
      } if oxitraffic_enabled and oxitraffic_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:oxitraffic

  # role-specific:paperless
  - |-
    {{
      ({
        'name': paperless_database_name,
        'username': paperless_database_postgres_username,
        'password': paperless_database_postgres_password,
      } if paperless_enabled and paperless_database_postgres_hostname == postgres_connection_hostname and paperless_database_type == 'postgres' else omit)
    }}
  # /role-specific:paperless

  # role-specific:peertube
  - |-
    {{
      ({
        'name': peertube_database_name,
        'username': peertube_database_username,
        'password': peertube_database_password,
      } if peertube_enabled and peertube_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:peertube

  # role-specific:plausible
  - |-
    {{
      ({
        'name': plausible_database_name,
        'username': plausible_database_username,
        'password': plausible_database_password,
      } if plausible_enabled and plausible_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:plausible

  # role-specific:pocket_id
  - |-
    {{
      ({
        'name': pocket_id_database_name,
        'username': pocket_id_database_username,
        'password': pocket_id_database_password,
      } if pocket_id_enabled and pocket_id_database_hostname == postgres_connection_hostname and pocket_id_database_type == 'postgres' else omit)
    }}
  # /role-specific:pocket_id

  # role-specific:privatebin
  - |-
    {{
      ({
        'name': privatebin_database_name,
        'username': privatebin_database_postgres_username,
        'password': privatebin_database_postgres_password,
      } if privatebin_enabled and privatebin_database_postgres_hostname == postgres_connection_hostname and privatebin_config_model == 'PostgreSQL' else omit)
    }}
  # /role-specific:privatebin

  # role-specific:prometheus_postgres_exporter
  - |-
    {{
      ({
        'name': prometheus_postgres_exporter_database_name,
        'username': prometheus_postgres_exporter_database_username,
        'password': prometheus_postgres_exporter_database_password,
      } if prometheus_postgres_exporter_enabled and prometheus_postgres_exporter_database_hostname == postgres_connection_hostname else omit)
    }}
  # /role-specific:prometheus_postgres_exporter

  # role-specific:redmine
  - |-
    {{
      ({
        'name': redmine_database_name,
        'username': redmine_database_postgres_username,
        'password': redmine_database_postgres_password,
      } if redmine_enabled and redmine_database_postgres_hostname == postgres_connection_hostname and redmine_database_type == 'postgresql' else omit)
    }}
  # /role-specific:redmine

  # role-specific:roundcube
  - |-
    {{
      ({
        'name': roundcube_database_name,
        'username': roundcube_database_username,
        'password': roundcube_database_password,
      } if roundcube_enabled and roundcube_database_hostname == postgres_connection_hostname and roundcube_database_type == 'postgresql' else omit)
    }}
  # /role-specific:roundcube

  # role-specific:semaphore
  - |-
    {{
      ({
        'name': semaphore_database_name,
        'username': semaphore_database_postgres_username,
        'password': semaphore_database_postgres_password,
      } if semaphore_enabled and semaphore_database_postgres_hostname == postgres_connection_hostname and semaphore_database_type == 'postgres' else omit)
    }}
  # /role-specific:semaphore

  # role-specific:sftpgo
  - |-
    {{
      ({
        'name': sftpgo_database_postgresql_name,
        'username': sftpgo_database_postgresql_username,
        'password': sftpgo_database_postgresql_password,
      } if sftpgo_enabled and sftpgo_database_postgresql_hostname == postgres_connection_hostname and sftpgo_environment_variables_data_provider_driver == 'postgresql' else omit)
    }}
  # /role-specific:sftpgo

  # role-specific:tandoor
  - |-
    {{
      ({
        'name': tandoor_database_name,
        'username': tandoor_database_username,
        'password': tandoor_database_password,
      } if tandoor_enabled and tandoor_database_hostname == postgres_connection_hostname and tandoor_database_type == 'postgres' else omit)
    }}
  # /role-specific:tandoor

  # role-specific:vaultwarden
  - |-
    {{
      ({
        'name': vaultwarden_database_name,
        'username': vaultwarden_database_postgres_username,
        'password': vaultwarden_database_postgres_password,
      } if vaultwarden_enabled and vaultwarden_database_postgres_hostname == postgres_connection_hostname and vaultwarden_database_type == 'postgres' else omit)
    }}
  # /role-specific:vaultwarden

  # role-specific:vikunja
  - |-
    {{
      ({
        'name': vikunja_database_name,
        'username': vikunja_database_postgres_username,
        'password': vikunja_database_postgres_password,
      } if vikunja_enabled and vikunja_database_postgres_hostname == postgres_connection_hostname and vikunja_database_type == 'postgres' else omit)
    }}
  # /role-specific:vikunja

  # role-specific:woodpecker_ci_server
  - |-
    {{
      ({
        'name': woodpecker_ci_server_database_name,
        'username': woodpecker_ci_server_database_postgres_username,
        'password': woodpecker_ci_server_database_postgres_password,
      } if woodpecker_ci_server_enabled and woodpecker_ci_server_database_postgres_hostname == postgres_connection_hostname and woodpecker_ci_server_database_type == 'postgres' else omit)
    }}
  # /role-specific:woodpecker_ci_server

postgres_managed_databases_auto: "{{ mash_playbook_postgres_managed_databases_auto_itemized | reject('equalto', omit) }}"

########################################################################
#                                                                      #
# /postgres                                                            #
#                                                                      #
########################################################################
# /role-specific:postgres



# role-specific:postgres_backup
########################################################################
#                                                                      #
# postgres_backup                                                      #
#                                                                      #
########################################################################

postgres_backup_enabled: false

postgres_backup_postgres_role_include_name: galaxy/postgres

postgres_backup_identifier: "{{ mash_playbook_service_identifier_prefix }}postgres-backup"

postgres_backup_architecture: "{{ mash_playbook_architecture }}"

postgres_backup_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}postgres-backup"

postgres_backup_uid: "{{ mash_playbook_uid }}"
postgres_backup_gid: "{{ mash_playbook_gid }}"

# role-specific:postgres
postgres_backup_systemd_required_services_list_auto: |
  {{
    ([(postgres_identifier + '.service')] if (postgres_enabled and postgres_backup_connection_hostname == postgres_connection_hostname) else [])
  }}

postgres_backup_container_additional_networks_auto: |-
  {{
    ([postgres_container_network] if (postgres_enabled and postgres_backup_connection_hostname == postgres_connection_hostname and postgres_backup_container_network != postgres_container_network) else [])
  }}

postgres_backup_container_network: "{{ (postgres_container_network if (postgres_enabled and postgres_backup_connection_hostname == postgres_connection_hostname) else postgres_backup_identifier) }}"

postgres_backup_connection_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
postgres_backup_connection_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
postgres_backup_connection_username: "{{ postgres_connection_username if postgres_enabled else '' }}"
postgres_backup_connection_password: "{{ postgres_connection_password if postgres_enabled else '' }}"

postgres_backup_postgres_data_path: "{{ postgres_data_path if postgres_enabled else '' }}"

postgres_backup_databases_auto: "{{ postgres_managed_databases | map(attribute='name') if postgres_enabled else [] }}"
# /role-specific:postgres

########################################################################
#                                                                      #
# /postgres_backup                                                     #
#                                                                      #
########################################################################
# /role-specific:postgres_backup



# role-specific:playbook_state_preserver
########################################################################
#                                                                      #
# playbook_state_preserver                                             #
#                                                                      #
########################################################################

# To completely disable this feature, use `devture_playbook_state_preserver_enabled: false`.

devture_playbook_state_preserver_uid: "{{ mash_playbook_uid }}"
devture_playbook_state_preserver_gid: "{{ mash_playbook_gid }}"

devture_playbook_state_preserver_vars_preservation_dst: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}vars.yml"

devture_playbook_state_preserver_commit_hash_preservation_dst: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}git_hash.yml"

########################################################################
#                                                                      #
# /playbook_state_preserver                                            #
#                                                                      #
########################################################################
# /role-specific:playbook_state_preserver



########################################################################
#                                                                      #
# geerlingguy/ansible-role-docker                                      #
#                                                                      #
########################################################################

docker_daemon_options: "{{ mash_playbook_docker_installation_daemon_options }}"

########################################################################
#                                                                      #
# /geerlingguy/ansible-role-docker                                     #
#                                                                      #
########################################################################



# role-specific:container_socket_proxy
########################################################################
#                                                                      #
# container_socket_proxy                                               #
#                                                                      #
########################################################################

container_socket_proxy_enabled: "{{ traefik_enabled }}"

container_socket_proxy_identifier: "{{ mash_playbook_service_identifier_prefix }}container-socket-proxy"

container_socket_proxy_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}container-socket-proxy"

container_socket_proxy_uid: "{{ mash_playbook_uid }}"
container_socket_proxy_gid: "{{ mash_playbook_gid }}"

# Traefik requires read access to the containers APIs to do its job
container_socket_proxy_api_containers_enabled: true

########################################################################
#                                                                      #
# /container_socket_proxy                                              #
#                                                                      #
########################################################################
# /role-specific:container_socket_proxy



# role-specific:traefik
########################################################################
#                                                                      #
# traefik                                                              #
#                                                                      #
########################################################################

traefik_enabled: "{{ mash_playbook_reverse_proxy_type == 'playbook-managed-traefik' }}"

traefik_identifier: "{{ mash_playbook_service_identifier_prefix }}traefik"

traefik_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}traefik"

traefik_uid: "{{ mash_playbook_uid }}"
traefik_gid: "{{ mash_playbook_gid }}"

traefik_systemd_required_services_list: |
  {{
    ([devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [])
    +
    ([container_socket_proxy_identifier + '.service'] if container_socket_proxy_enabled | default(false) else [])
  }}

traefik_container_additional_networks_auto: |
  {{
    ([container_socket_proxy_container_network] if container_socket_proxy_enabled | default(false) else [])
  }}

# role-specific:container_socket_proxy
traefik_config_providers_docker_endpoint: "{{ container_socket_proxy_endpoint if container_socket_proxy_enabled else 'unix:///var/run/docker.sock' }}"
# /role-specific:container_socket_proxy

########################################################################
#                                                                      #
# /traefik                                                             #
#                                                                      #
########################################################################
# /role-specific:traefik



# role-specific:docker_sdk_for_python
########################################################################
#                                                                      #
# docker_sdk_for_python                                                #
#                                                                      #
########################################################################

devture_docker_sdk_for_python_installation_enabled: false

########################################################################
#                                                                      #
# /docker_sdk_for_python                                               #
#                                                                      #
########################################################################
# /role-specific:docker_sdk_for_python



# role-specific:timesync
########################################################################
#                                                                      #
# timesync                                                             #
#                                                                      #
########################################################################

# To completely disable installing systemd-timesyncd/ntpd, use `devture_timesync_installation_enabled: false`.

devture_timesync_installation_enabled: false

########################################################################
#                                                                      #
# /timesync                                                            #
#                                                                      #
########################################################################
# /role-specific:timesync



# role-specific:adguard_home
########################################################################
#                                                                      #
# adguard_home                                                         #
#                                                                      #
########################################################################

adguard_home_enabled: false

adguard_home_identifier: "{{ mash_playbook_service_identifier_prefix }}adguard-home"

adguard_home_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}adguard-home"

adguard_home_uid: "{{ mash_playbook_uid }}"
adguard_home_gid: "{{ mash_playbook_gid }}"

adguard_home_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

adguard_home_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
adguard_home_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
adguard_home_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
adguard_home_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /adguard_home                                                        #
#                                                                      #
########################################################################
# /role-specific:adguard_home



# role-specific:anki
########################################################################
#                                                                      #
# anki                                                                 #
#                                                                      #
########################################################################

anki_enabled: false

anki_identifier: "{{ mash_playbook_service_identifier_prefix }}anki"

anki_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}anki"

anki_uid: "{{ mash_playbook_uid }}"
anki_gid: "{{ mash_playbook_gid }}"

anki_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

anki_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
anki_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
anki_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
anki_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /anki                                                                #
#                                                                      #
########################################################################
# /role-specific:anki



# role-specific:anonymousoverflow
########################################################################
#                                                                      #
# anonymousoverflow                                                    #
#                                                                      #
########################################################################

anonymousoverflow_enabled: false

anonymousoverflow_identifier: "{{ mash_playbook_service_identifier_prefix }}anonymousoverflow"

anonymousoverflow_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}anonymousoverflow"

anonymousoverflow_uid: "{{ mash_playbook_uid }}"
anonymousoverflow_gid: "{{ mash_playbook_gid }}"

anonymousoverflow_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

anonymousoverflow_environment_variable_jwt_signing_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'anonymousoverflo', rounds=655555) | to_uuid }}"

anonymousoverflow_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
anonymousoverflow_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
anonymousoverflow_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
anonymousoverflow_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /anonymousoverflow                                                   #
#                                                                      #
########################################################################
# /role-specific:anonymousoverflow



# role-specific:apisix_dashboard
########################################################################
#                                                                      #
# apisix_dashboard                                                     #
#                                                                      #
########################################################################

apisix_dashboard_enabled: false

apisix_dashboard_identifier: "{{ mash_playbook_service_identifier_prefix }}apisix-dashboard"

apisix_dashboard_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}apisix-dashboard"

apisix_dashboard_uid: "{{ mash_playbook_uid }}"
apisix_dashboard_gid: "{{ mash_playbook_gid }}"

apisix_dashboard_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if (mash_playbook_reverse_proxyable_services_additional_network and apisix_dashboard_container_labels_traefik_enabled) else [])
  }}

apisix_dashboard_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
apisix_dashboard_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:etcd
apisix_dashboard_config_conf_etcd_endpoints: |
  {{
    ([(etcd_identifier + ':2379')] if etcd_enabled else [])
  }}

apisix_dashboard_config_conf_etcd_username: "{{ ('root' if (etcd_enabled and not etcd_environment_variable_allow_none_authentication) else '') }}"
apisix_dashboard_config_conf_etcd_password: "{{ (etcd_environment_variable_etcd_root_password if (etcd_enabled and not etcd_environment_variable_allow_none_authentication) else '') }}"

apisix_dashboard_container_additional_networks_custom: |
  {{
    ([etcd_container_network] if etcd_enabled else [])
  }}

apisix_dashboard_systemd_required_services_list_auto: |
  {{
    ([(etcd_identifier + '.service')] if etcd_enabled else [])
  }}
# /role-specific:etcd

# role-specific:traefik
apisix_dashboard_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
apisix_dashboard_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /apisix_dashboard                                                    #
#                                                                      #
########################################################################
# /role-specific:apisix_dashboard



# role-specific:apisix_gateway
########################################################################
#                                                                      #
# apisix_gateway                                                       #
#                                                                      #
########################################################################

apisix_gateway_enabled: false

apisix_gateway_identifier: "{{ mash_playbook_service_identifier_prefix }}apisix-gateway"

apisix_gateway_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}apisix-gateway"

apisix_gateway_uid: "{{ mash_playbook_uid }}"
apisix_gateway_gid: "{{ mash_playbook_gid }}"

apisix_gateway_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if (mash_playbook_reverse_proxyable_services_additional_network and apisix_gateway_container_labels_traefik_enabled) else [])
  }}

apisix_gateway_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
apisix_gateway_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

apisix_gateway_container_labels_metrics_enabled: "{{ mash_playbook_metrics_exposure_enabled }}"
apisix_gateway_container_labels_metrics_hostname: "{{ mash_playbook_metrics_exposure_hostname }}"
apisix_gateway_container_labels_metrics_path_prefix: "{{ mash_playbook_metrics_exposure_path_prefix }}/{{ apisix_gateway_identifier }}"
apisix_gateway_container_labels_metrics_middleware_basic_auth_enabled: "{{ mash_playbook_metrics_exposure_http_basic_auth_enabled }}"
apisix_gateway_container_labels_metrics_middleware_basic_auth_users: "{{ mash_playbook_metrics_exposure_http_basic_auth_users }}"

# role-specific:etcd
apisix_gateway_config_deployment_etcd_host: |
  {{
    ([('http://' + etcd_identifier + ':2379')] if etcd_enabled else [])
  }}

apisix_gateway_config_deployment_etcd_user: "{{ ('root' if (etcd_enabled and not etcd_environment_variable_allow_none_authentication) else '') }}"
apisix_gateway_config_deployment_etcd_password: "{{ (etcd_environment_variable_etcd_root_password if (etcd_enabled and not etcd_environment_variable_allow_none_authentication) else '') }}"

apisix_gateway_container_additional_networks_custom: |
  {{
    ([etcd_container_network] if etcd_enabled else [])
  }}

apisix_gateway_systemd_required_services_list_auto: |
  {{
    ([(etcd_identifier + '.service')] if etcd_enabled else [])
  }}
# /role-specific:etcd

# role-specific:traefik
apisix_gateway_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
apisix_gateway_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /apisix_gateway                                                      #
#                                                                      #
########################################################################
# /role-specific:apisix_gateway



# role-specific:apprise
########################################################################
#                                                                      #
# apprise                                                              #
#                                                                      #
########################################################################

apprise_enabled: false

apprise_identifier: "{{ mash_playbook_service_identifier_prefix }}apprise"

apprise_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}apprise"

apprise_uid: "{{ mash_playbook_uid }}"
apprise_gid: "{{ mash_playbook_gid }}"

apprise_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

# Only enable Traefik labels if a hostname is set (indicating that this will be exposed publicly)
apprise_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled and apprise_hostname | length > 0 }}"
apprise_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
apprise_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
apprise_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /apprise                                                             #
#                                                                      #
########################################################################
# /role-specific:apprise



# role-specific:appsmith
########################################################################
#                                                                      #
# appsmith                                                             #
#                                                                      #
########################################################################

appsmith_enabled: false

appsmith_identifier: "{{ mash_playbook_service_identifier_prefix }}appsmith"

appsmith_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}appsmith"

appsmith_uid: "{{ mash_playbook_uid }}"
appsmith_gid: "{{ mash_playbook_gid }}"

appsmith_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

appsmith_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
appsmith_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
appsmith_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
appsmith_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /appsmith                                                            #
#                                                                      #
########################################################################
# /role-specific:appsmith



# role-specific:asciinema_server
########################################################################
#                                                                      #
# asciinema_server                                                     #
#                                                                      #
########################################################################

asciinema_server_enabled: false

asciinema_server_identifier: "{{ mash_playbook_service_identifier_prefix }}asciinema-server"

asciinema_server_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}asciinema-server"

asciinema_server_uid: "{{ mash_playbook_uid }}"
asciinema_server_gid: "{{ mash_playbook_gid }}"

asciinema_server_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and asciinema_server_environment_variable_smtp_host == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

asciinema_server_systemd_required_services_list_auto: |
 {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and asciinema_server_database_hostname == postgres_connection_hostname else [])
  }}

asciinema_server_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and asciinema_server_environment_variable_smtp_host == exim_relay_identifier | default('mash-exim-relay') and asciinema_server_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and asciinema_server_database_hostname == postgres_connection_hostname and asciinema_server_container_network != postgres_container_network else [])
  }}

asciinema_server_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
asciinema_server_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:exim_relay
asciinema_server_mailer_enabled: "{{ exim_relay_enabled }}"
asciinema_server_environment_variable_smtp_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
asciinema_server_environment_variable_smtp_port: "{{ 8025 if exim_relay_enabled else '587' }}"
asciinema_server_environment_variable_mail_from_address: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:postgres
asciinema_server_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
asciinema_server_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
asciinema_server_database_user: "{{ asciinema_server_identifier }}"
asciinema_server_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.asciinema', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
asciinema_server_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
asciinema_server_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /asciinema_server                                                    #
#                                                                      #
########################################################################
# /role-specific:asciinema_server



# role-specific:atuin
########################################################################
#                                                                      #
# atuin                                                                #
#                                                                      #
########################################################################

atuin_enabled: false

atuin_identifier: "{{ mash_playbook_service_identifier_prefix }}atuin"

atuin_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}atuin"

atuin_uid: "{{ mash_playbook_uid }}"
atuin_gid: "{{ mash_playbook_gid }}"

atuin_systemd_required_services_list_auto: |
 {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and atuin_database_hostname == postgres_connection_hostname else [])
  }}

atuin_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and atuin_database_hostname == postgres_connection_hostname and atuin_container_network != postgres_container_network else [])
  }}

atuin_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
atuin_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:postgres
atuin_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
atuin_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
atuin_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.atuin', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
atuin_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
atuin_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /atuin                                                               #
#                                                                      #
########################################################################
# /role-specific:atuin



# role-specific:audiobookshelf
########################################################################
#                                                                      #
# audiobookshelf                                                       #
#                                                                      #
########################################################################

audiobookshelf_enabled: false

audiobookshelf_identifier: "{{ mash_playbook_service_identifier_prefix }}audiobookshelf"

audiobookshelf_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}audiobookshelf"

audiobookshelf_uid: "{{ mash_playbook_uid }}"
audiobookshelf_gid: "{{ mash_playbook_gid }}"

audiobookshelf_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if exim_relay_enabled | default(false) else [])
  }}

audiobookshelf_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if exim_relay_enabled | default(false) and audiobookshelf_container_network != exim_relay_container_network else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

audiobookshelf_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
audiobookshelf_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
audiobookshelf_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
audiobookshelf_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /audiobookshelf                                                      #
#                                                                      #
########################################################################
# /role-specific:audiobookshelf



# role-specific:authelia
########################################################################
#                                                                      #
# authelia                                                             #
#                                                                      #
########################################################################

authelia_enabled: false

authelia_identifier: "{{ mash_playbook_service_identifier_prefix }}authelia"

authelia_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}authelia"

authelia_uid: "{{ mash_playbook_uid }}"
authelia_gid: "{{ mash_playbook_gid }}"

authelia_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and authelia_config_storage_postgres_hostname == postgres_connection_hostname else [])
  }}

authelia_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and authelia_config_storage_postgres_hostname == postgres_connection_hostname and authelia_container_network != postgres_container_network else [])
  }}

authelia_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
authelia_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

authelia_config_jwt_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'jwt.authelia', rounds=655555) | to_uuid }}"

authelia_config_session_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'ses.authelia', rounds=655555) | to_uuid }}"

authelia_config_identity_providers_oidc_hmac_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'hm.authelia', rounds=655555) | to_uuid }}"

# role-specific:mariadb
# If Postgres and MariaDB are not enabled, we favor Postgres.
# We only enable MySQL if it's the only enabled component (that is, if Postgres is not enabled at the same time).
authelia_config_storage_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled and not postgres_enabled | default(false) else '' }}"
authelia_config_storage_mysql_port: "{{ mariadb_connection_port if mariadb_enabled | default(false) else '3306' }}"
authelia_config_storage_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.authelia', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
authelia_config_storage_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
authelia_config_storage_postgres_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
authelia_config_storage_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.authelia', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
authelia_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
authelia_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /authelia                                                            #
#                                                                      #
########################################################################
# /role-specific:authelia



# role-specific:authentik
########################################################################
#                                                                      #
# authentik                                                            #
#                                                                      #
########################################################################

authentik_enabled: false

authentik_identifier: "{{ mash_playbook_service_identifier_prefix }}authentik"

authentik_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}authentik"

authentik_uid: "{{ mash_playbook_uid }}"
authentik_gid: "{{ mash_playbook_gid }}"

authentik_server_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and authentik_database_hostname == postgres_connection_hostname else [])
  }}

authentik_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and authentik_email_host == exim_relay_identifier | default('mash-exim-relay') and authentik_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and authentik_database_hostname == postgres_connection_hostname and authentik_container_network != postgres_container_network else [])
  }}

authentik_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
authentik_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:exim_relay
authentik_email_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
authentik_email_port: "{{ 8025 if exim_relay_enabled else '587' }}"
authentik_email_from: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:postgres
authentik_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
authentik_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
authentik_database_username: "{{ authentik_identifier }}"
authentik_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.authentik', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
authentik_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
authentik_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /authentik                                                           #
#                                                                      #
########################################################################
# /role-specific:authentik



# role-specific:autobrr
########################################################################
#                                                                      #
# autobrr                                                              #
#                                                                      #
########################################################################

autobrr_enabled: false

autobrr_identifier: "{{ mash_playbook_service_identifier_prefix }}autobrr"

autobrr_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}autobrr"

autobrr_uid: "{{ mash_playbook_uid }}"
autobrr_gid: "{{ mash_playbook_gid }}"

autobrr_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

autobrr_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
autobrr_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
autobrr_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
autobrr_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /autobrr                                                             #
#                                                                      #
########################################################################
# /role-specific:autobrr



# role-specific:backup_borg
########################################################################
#                                                                      #
# backup_borg                                                          #
#                                                                      #
########################################################################

backup_borg_enabled: false

backup_borg_identifier: "{{ mash_playbook_service_identifier_prefix }}backup-borg"

backup_borg_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}borg-backup"

backup_borg_uid: "{{ mash_playbook_uid }}"
backup_borg_gid: "{{ mash_playbook_gid }}"

backup_borg_container_network: "{{ postgres_container_network if postgres_enabled else backup_borg_identifier }}"

backup_borg_retention_prefix: "{{ mash_playbook_service_identifier_prefix }}"
backup_borg_storage_archive_name_format: "{{ mash_playbook_service_identifier_prefix }}-{now:%Y-%m-%d-%H%M%S}"

backup_borg_container_image_self_build: "{{ mash_playbook_architecture not in ['amd64', 'arm32', 'arm64'] }}"

backup_borg_location_source_directories_auto:
  - "{{ mash_playbook_base_path }}"

backup_borg_location_exclude_patterns: |
  {{
    ([postgres_data_path] if postgres_enabled | default(false) else [])
    +
    ([mariadb_data_path] if mariadb_enabled | default(false) else [])
  }}

backup_borg_systemd_required_services_list: |
  {{
    ([devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) else [])
    +
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) else [])
  }}

backup_borg_mysql_enabled: "{{ mariadb_enabled | default(false) }}"
backup_borg_postgresql_enabled: "{{ postgres_enabled | default(false) }}"

# role-specific:mariadb
backup_borg_mysql_databases_hostname: "{{ mariadb_connection_hostname if mariadb_enabled | default(false) else '' }}"
backup_borg_mysql_databases_port: "{{ mariadb_connection_port if mariadb_enabled | default(false) else '3306' }}"
backup_borg_mysql_databases_password: "{{ mariadb_root_password if mariadb_enabled | default(false) else '' }}"
backup_borg_mysql_databases_username: "root"
backup_borg_mysql_databases_auto: "{{ mariadb_managed_databases | map(attribute='name') if mariadb_enabled | default(false) else [] }}"
# /role-specific:mariadb

# role-specific:postgres
backup_borg_postgresql_databases_hostname: "{{ postgres_connection_hostname if postgres_enabled | default(false) else '' }}"
backup_borg_postgresql_databases_port: "{{ postgres_connection_port if postgres_enabled | default(false) else '5432' }}"
backup_borg_postgresql_databases_username: "{{ postgres_connection_username if postgres_enabled | default(false) else '' }}"
backup_borg_postgresql_databases_password: "{{ postgres_connection_password if postgres_enabled | default(false) else '' }}"
backup_borg_postgresql_databases_auto: "{{ postgres_managed_databases | map(attribute='name') if postgres_enabled | default(false) else [] }}"
# /role-specific:postgres

########################################################################
#                                                                      #
# /backup_borg                                                         #
#                                                                      #
########################################################################
# /role-specific:backup_borg



# role-specific:barassistant
########################################################################
#                                                                      #
# barassistant                                                         #
#                                                                      #
########################################################################

barassistant_enabled: false

barassistant_identifier: "{{ mash_playbook_service_identifier_prefix }}barassistant"

barassistant_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}barassistant"

barassistant_uid: "{{ mash_playbook_uid }}"
barassistant_gid: "{{ mash_playbook_gid }}"

barassistant_server_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and barassistant_server_environment_variables_mail_host == exim_relay_identifier | default('mash-exim-relay')) else [])
    +
    ([meilisearch_identifier ~ '.service'] if meilisearch_identifier | default(false) else [])
  }}

barassistant_saltrim_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and barassistant_server_environment_variables_mail_host == exim_relay_identifier | default('mash-exim-relay')) else [])
    +
    ([meilisearch_identifier ~ '.service'] if meilisearch_identifier | default(false) else [])
  }}

barassistant_server_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and barassistant_server_environment_variables_mail_host == exim_relay_identifier | default('mash-exim-relay') and barassistant_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([meilisearch_container_network] if meilisearch_enabled | default(false) and barassistant_container_network != meilisearch_container_network else [])
  }}

barassistant_saltrim_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and barassistant_server_environment_variables_mail_host == exim_relay_identifier | default('mash-exim-relay') and barassistant_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([meilisearch_container_network] if meilisearch_enabled | default(false) and barassistant_container_network != meilisearch_container_network else [])
  }}

barassistant_saltrim_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
barassistant_saltrim_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"
barassistant_server_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
barassistant_server_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:exim_relay
barassistant_mailer_enabled: "{{ exim_relay_enabled }}"
barassistant_server_environment_variables_mail_mailer: smtp
barassistant_server_environment_variables_mail_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
barassistant_server_environment_variables_mail_port: 8025
barassistant_server_environment_variables_mail_from_address: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:meilisearch
barassistant_saltrim_environment_variables_meilisearch_url: "{{ barassistant_server_environment_variables_meilisearch_host }}"
barassistant_server_environment_variables_meilisearch_host: "{{ meilisearch_scheme }}://{{ meilisearch_hostname }}"
barassistant_server_environment_variables_meilisearch_key: "{{ meilisearch_default_admin_api_key }}"
# /role-specific:meilisearch

# role-specific:traefik
barassistant_saltrim_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
barassistant_saltrim_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
barassistant_server_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
barassistant_server_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /barassistant                                                        #
#                                                                      #
########################################################################
# /role-specific:barassistant



# role-specific:browserless
########################################################################
#                                                                      #
# browserless                                                          #
#                                                                      #
########################################################################

browserless_enabled: false

browserless_identifier: "{{ mash_playbook_service_identifier_prefix }}browserless"

browserless_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}browserless"

# Currently Browserless can only run as root user
browserless_uid: "0"
browserless_gid: "0"

browserless_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

# Only enable Traefik labels if a hostname is set (indicating that this will be exposed publicly)
browserless_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled and browserless_hostname | length > 0 }}"
browserless_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
browserless_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
browserless_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /browserless                                                         #
#                                                                      #
########################################################################
# /role-specific:browserless



# role-specific:calibre_web
########################################################################
#                                                                      #
# calibre_web                                                          #
#                                                                      #
########################################################################

calibre_web_enabled: false

calibre_web_identifier: "{{ mash_playbook_service_identifier_prefix }}calibre-web"

calibre_web_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}calibre-web"

calibre_web_uid: "{{ mash_playbook_uid }}"
calibre_web_gid: "{{ mash_playbook_gid }}"

calibre_web_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and calibre_web_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

calibre_web_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
calibre_web_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
calibre_web_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
calibre_web_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /calibre_web                                                         #
#                                                                      #
########################################################################
# /role-specific:calibre_web



# role-specific:changedetection
########################################################################
#                                                                      #
# Changedetection.io                                                   #
#                                                                      #
########################################################################

changedetection_enabled: false

changedetection_identifier: "{{ mash_playbook_service_identifier_prefix }}changedetection"

changedetection_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}changedetection"

changedetection_uid: "{{ mash_playbook_uid }}"
changedetection_gid: "{{ mash_playbook_gid }}"

changedetection_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

changedetection_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
changedetection_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
changedetection_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
changedetection_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /Changedetection.io                                                  #
#                                                                      #
########################################################################
# /role-specific:changedetection



# role-specific:clickhouse
########################################################################
#                                                                      #
# clickhouse                                                           #
#                                                                      #
########################################################################

clickhouse_enabled: false

clickhouse_identifier: "{{ mash_playbook_service_identifier_prefix }}clickhouse"

clickhouse_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}clickhouse"

clickhouse_uid: "{{ mash_playbook_uid }}"
clickhouse_gid: "{{ mash_playbook_gid }}"

clickhouse_managed_databases_auto_itemized:
  # Dummy entry, which is not role-specific.
  # Ensures there's at least one entry defined in the list.
  - "{{ omit }}"

  # role-specific:plausible
  - |-
    {{
      ({
        'name': plausible_clickhouse_database_name,
        'username': plausible_clickhouse_database_username,
        'password': plausible_clickhouse_database_password,
        'additional_sql': ('GRANT SELECT ON system.replicas TO ' + plausible_clickhouse_database_username + '; GRANT SELECT ON system.parts TO ' + plausible_clickhouse_database_username + '; GRANT CREATE FUNCTION ON *.* TO ' + plausible_clickhouse_database_username + '; GRANT DROP FUNCTION ON *.* TO ' + plausible_clickhouse_database_username + ';')
      } if plausible_enabled and plausible_clickhouse_database_hostname == clickhouse_identifier else omit)
    }}
  # /role-specific:plausible

clickhouse_managed_databases_auto: "{{ clickhouse_managed_databases_auto_itemized | reject('equalto', omit) }}"

########################################################################
#                                                                      #
# /clickhouse                                                          #
#                                                                      #
########################################################################
# /role-specific:clickhouse



# role-specific:collabora_online
########################################################################
#                                                                      #
# collabora_online                                                     #
#                                                                      #
########################################################################

collabora_online_enabled: false

collabora_online_identifier: "{{ mash_playbook_service_identifier_prefix }}collabora-online"

collabora_online_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}collabora-online"

collabora_online_uid: "{{ mash_playbook_uid }}"
collabora_online_gid: "{{ mash_playbook_gid }}"

collabora_online_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

collabora_online_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
collabora_online_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:nextcloud
#
# Because a CODE instance requires a backend which works as File Sync
# and Share (FSS) tool and the playbook currently integrates only one
# FSS, which is Nextcloud, the Nextcloud and CODE instances are
# connected by default, if both of them are enabled.
#
collabora_online_environment_variable_aliasgroup1: "{{ nextcloud_scheme }}://{{ nextcloud_hostname | replace('.', '\\.') }}{{ ':443' if nextcloud_scheme == 'https' else '' }}"
# /role-specific:nextcloud

# role-specific:traefik
collabora_online_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
collabora_online_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /collabora_online                                                    #
#                                                                      #
########################################################################
# /role-specific:collabora_online



# role-specific:convertx
########################################################################
#                                                                      #
# convertx                                                             #
#                                                                      #
########################################################################

convertx_enabled: false

convertx_identifier: "{{ mash_playbook_service_identifier_prefix }}convertx"

convertx_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}convertx"

convertx_uid: "{{ mash_playbook_uid }}"
convertx_gid: "{{ mash_playbook_gid }}"

convertx_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

convertx_environment_variables_jwt_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'jwt.convertx', rounds=655555) | to_uuid }}"

convertx_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
convertx_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
convertx_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
convertx_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /convertx                                                            #
#                                                                      #
########################################################################
# /role-specific:convertx



# role-specific:couchdb
########################################################################
#                                                                      #
# couchdb                                                              #
#                                                                      #
########################################################################

couchdb_enabled: false

couchdb_identifier: "{{ mash_playbook_service_identifier_prefix }}couchdb"

couchdb_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}couchdb"

couchdb_uid: "5984"
couchdb_gid: "5984"

couchdb_admin_user: "{{ mash_playbook_service_identifier_prefix }}admin"
couchdb_admin_passwd: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.couchdb', rounds=655555) | to_uuid }}"
couchdb_config_uuid: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'uuid.couchdb', rounds=655555) | to_uuid }}"

couchdb_config_couch_chttpd_auth_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'secret.couchdb', rounds=655555) | to_uuid }}"

########################################################################
#                                                                      #
# /couchdb                                                             #
#                                                                      #
########################################################################
# /role-specific:couchdb



# role-specific:cyberchef
########################################################################
#                                                                      #
# cyberchef                                                            #
#                                                                      #
########################################################################

cyberchef_enabled: false

cyberchef_identifier: "{{ mash_playbook_service_identifier_prefix }}cyberchef"

cyberchef_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}cyberchef"

cyberchef_uid: "{{ mash_playbook_uid }}"
cyberchef_gid: "{{ mash_playbook_gid }}"

cyberchef_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

cyberchef_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
cyberchef_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
cyberchef_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
cyberchef_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /cyberchef                                                           #
#                                                                      #
########################################################################
# /role-specific:cyberchef



# role-specific:docker_registry
########################################################################
#                                                                      #
# docker_registry                                                      #
#                                                                      #
########################################################################

docker_registry_enabled: false

docker_registry_identifier: "{{ mash_playbook_service_identifier_prefix }}docker-registry"

docker_registry_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}docker-registry"

docker_registry_uid: "{{ mash_playbook_uid }}"
docker_registry_gid: "{{ mash_playbook_gid }}"

docker_registry_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

docker_registry_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
docker_registry_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
docker_registry_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
docker_registry_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /docker_registry                                                     #
#                                                                      #
########################################################################
# /role-specific:docker_registry



# role-specific:docker_registry_browser
########################################################################
#                                                                      #
# docker_registry_browser                                              #
#                                                                      #
########################################################################

docker_registry_browser_enabled: false

docker_registry_browser_identifier: "{{ mash_playbook_service_identifier_prefix }}docker-registry-browser"

docker_registry_browser_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}docker-registry-browser"

docker_registry_browser_uid: "{{ mash_playbook_uid }}"
docker_registry_browser_gid: "{{ mash_playbook_gid }}"

docker_registry_browser_secret_key_base: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'browser', rounds=655555) }}"

docker_registry_browser_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

docker_registry_browser_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
docker_registry_browser_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
docker_registry_browser_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
docker_registry_browser_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /docker_registry_browser                                             #
#                                                                      #
########################################################################
# /role-specific:docker_registry_browser



# role-specific:docker_registry_proxy
########################################################################
#                                                                      #
# docker_registry_proxy                                                #
#                                                                      #
########################################################################

docker_registry_proxy_enabled: false

docker_registry_proxy_identifier: "{{ mash_playbook_service_identifier_prefix }}docker-registry-proxy"

docker_registry_proxy_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}docker-registry-proxy"

docker_registry_proxy_uid: "{{ mash_playbook_uid }}"
docker_registry_proxy_gid: "{{ mash_playbook_gid }}"

docker_registry_proxy_target_scheme: "{{ 'http' if docker_registry_enabled else '' }}"
docker_registry_proxy_target_host: "{{ docker_registry_identifier+':5000' if docker_registry_enabled else '' }}"

docker_registry_proxy_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

docker_registry_proxy_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
docker_registry_proxy_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
docker_registry_proxy_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
docker_registry_proxy_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /docker_registry_proxy                                               #
#                                                                      #
########################################################################
# /role-specific:docker_registry_proxy



# role-specific:docker_registry_purger
########################################################################
#                                                                      #
# docker_registry_purger                                               #
#                                                                      #
########################################################################

docker_registry_purger_enabled: false

docker_registry_purger_identifier: "{{ mash_playbook_service_identifier_prefix }}docker-registry-purger"

docker_registry_purger_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}docker-registry-purger"

docker_registry_purger_uid: "{{ mash_playbook_uid }}"
docker_registry_purger_gid: "{{ mash_playbook_gid }}"

########################################################################
#                                                                      #
# /docker_registry_purger                                              #
#                                                                      #
########################################################################
# /role-specific:docker_registry_purger



# role-specific:docmost
########################################################################
#                                                                      #
# docmost                                                              #
#                                                                      #
########################################################################

docmost_enabled: false

docmost_identifier: "{{ mash_playbook_service_identifier_prefix }}docmost"

docmost_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}docmost"

# The role is based on Node.js docker image, and is currently expected to run with uid 1000.
#
# See: https://github.com/nodejs/docker-node/blob/main/docs/BestPractices.md#non-root-user
# and https://github.com/docmost/docmost/blob/main/Dockerfile
docmost_uid: 1000
docmost_gid: 1000

docmost_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and docmost_database_hostname == postgres_connection_hostname else [])
  }}

docmost_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and docmost_environment_variable_smtp_host == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

docmost_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and docmost_environment_variable_smtp_host == exim_relay_identifier | default('mash-exim-relay') and docmost_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and docmost_database_hostname == postgres_connection_hostname and docmost_container_network != postgres_container_network else [])
  }}

docmost_environment_variable_app_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'secret.docmost', rounds=655555) | to_uuid }}"

# Disable Telemetry by default
docmost_environment_variable_disable_telemetry: true

# Required for a Redis / KeyDB / Valkey instance
docmost_environment_variable_redis_url: "redis://{{ docmost_redis_hostname }}:{{ docmost_redis_port }}"

docmost_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
docmost_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

docmost_mailer_enabled: "{{ exim_relay_enabled | default(false) }}"

# role-specific:exim_relay
docmost_environment_variable_smtp_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
docmost_environment_variable_smtp_port: "{{ 8025 if exim_relay_enabled else '587' }}"
docmost_environment_variable_mail_from_address: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
docmost_environment_variable_mail_driver: "{{ 'smtp' if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:postgres
docmost_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
docmost_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
docmost_database_username: "{{ docmost_identifier }}"
docmost_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.docmost', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
docmost_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
docmost_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /docmost                                                             #
#                                                                      #
########################################################################
# /role-specific:docmost



# role-specific:dokuwiki
########################################################################
#                                                                      #
# dokuwiki                                                             #
#                                                                      #
########################################################################

dokuwiki_enabled: false

dokuwiki_identifier: "{{ mash_playbook_service_identifier_prefix }}dokuwiki"

dokuwiki_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}dokuwiki"

dokuwiki_uid: "{{ mash_playbook_uid }}"
dokuwiki_gid: "{{ mash_playbook_gid }}"

dokuwiki_systemd_required_services_list: |
  {{
    ([devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [])
  }}

dokuwiki_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

dokuwiki_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
dokuwiki_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
dokuwiki_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
dokuwiki_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /dokuwiki                                                            #
#                                                                      #
########################################################################
# /role-specific:dokuwiki



# role-specific:duplicati
########################################################################
#                                                                      #
# duplicati                                                            #
#                                                                      #
########################################################################

duplicati_enabled: false

duplicati_identifier: "{{ mash_playbook_service_identifier_prefix }}duplicati"

duplicati_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}duplicati"

duplicati_uid: "{{ mash_playbook_uid }}"
duplicati_gid: "{{ mash_playbook_gid }}"

duplicati_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and duplicati_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

duplicati_environment_variable_settings_encryption_key: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.duplicati', rounds=655555) }}"

duplicati_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
duplicati_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
duplicati_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
duplicati_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /duplicati                                                           #
#                                                                      #
########################################################################
# /role-specific:duplicati



# role-specific:echoip
########################################################################
#                                                                      #
# echoip                                                               #
#                                                                      #
########################################################################

echoip_enabled: false

echoip_identifier: "{{ mash_playbook_service_identifier_prefix }}echoip"

echoip_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}echoip"

echoip_uid: "{{ mash_playbook_uid }}"
echoip_gid: "{{ mash_playbook_gid }}"

echoip_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

echoip_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
echoip_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
echoip_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
echoip_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /echoip                                                              #
#                                                                      #
########################################################################
# /role-specific:echoip



# role-specific:endlessh
########################################################################
#                                                                      #
# endlessh                                                             #
#                                                                      #
########################################################################

endlessh_enabled: false

endlessh_identifier: "{{ mash_playbook_service_identifier_prefix }}endlessh"

endlessh_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}endlessh"

endlessh_uid: "{{ mash_playbook_uid }}"
endlessh_gid: "{{ mash_playbook_gid }}"

endlessh_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

endlessh_hostname: "{{ mash_playbook_metrics_exposure_hostname }}"
endlessh_path_prefix: "{{ mash_playbook_metrics_exposure_path_prefix }}/{{ endlessh_identifier }}"

endlessh_container_labels_metrics_middleware_basic_auth_enabled: "{{ mash_playbook_metrics_exposure_http_basic_auth_enabled }}"
endlessh_container_labels_metrics_middleware_basic_auth_users: "{{ mash_playbook_metrics_exposure_http_basic_auth_users }}"

# Only enable Traefik labels if a hostname is set (indicating that this will be exposed publicly)
endlessh_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled and endlessh_hostname }}"
endlessh_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
endlessh_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
endlessh_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /endlessh                                                            #
#                                                                      #
########################################################################
# /role-specific:endlessh



# role-specific:etcd
########################################################################
#                                                                      #
# etcd                                                                 #
#                                                                      #
########################################################################

etcd_enabled: false

etcd_identifier: "{{ mash_playbook_service_identifier_prefix }}etcd"

etcd_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}etcd"

etcd_uid: "{{ mash_playbook_uid }}"
etcd_gid: "{{ mash_playbook_gid }}"

etcd_environment_variable_etcd_root_password: "{{ '' if etcd_environment_variable_allow_none_authentication else ('%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'etcd', rounds=655555) | to_uuid) }}"

########################################################################
#                                                                      #
# /etcd                                                                #
#                                                                      #
########################################################################
# /role-specific:etcd



# role-specific:etherpad
########################################################################
#                                                                      #
# etherpad                                                             #
#                                                                      #
########################################################################

etherpad_enabled: false

etherpad_identifier: "{{ mash_playbook_service_identifier_prefix }}etherpad"

etherpad_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}etherpad"

etherpad_uid: "{{ mash_playbook_uid }}"
etherpad_gid: "{{ mash_playbook_gid }}"

etherpad_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and etherpad_database_mysql_hostname == mariadb_connection_hostname and etherpad_database_type == 'mysql' else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and etherpad_database_postgres_hostname == postgres_connection_hostname and etherpad_database_type == 'postgres' else [])
  }}

etherpad_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([mariadb_container_network] if mariadb_enabled | default(false) and etherpad_database_mysql_hostname == mariadb_connection_hostname and etherpad_container_network != mariadb_container_network and etherpad_database_type == 'mysql' else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and etherpad_database_postgres_hostname == postgres_connection_hostname and etherpad_container_network != postgres_container_network and etherpad_database_type == 'postgres' else [])
  }}

etherpad_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
etherpad_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

etherpad_database_type: "{{ 'postgres' if postgres_enabled | default(false) else 'sqlite' }}"

# role-specific:mariadb
etherpad_database_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
etherpad_database_mysql_port: "{{ mariadb_connection_port if mariadb_enabled else '3306' }}"
etherpad_database_mysql_username: "{{ etherpad_identifier }}"
etherpad_database_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.etherpad.ma', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
etherpad_database_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
etherpad_database_postgres_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
etherpad_database_postgres_username: "{{ etherpad_identifier }}"
etherpad_database_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.etherpad', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
etherpad_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
etherpad_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /etherpad                                                            #
#                                                                      #
########################################################################
# /role-specific:etherpad



# role-specific:excalidraw
########################################################################
#                                                                      #
# excalidraw                                                           #
#                                                                      #
########################################################################

excalidraw_enabled: false

excalidraw_identifier: "{{ mash_playbook_service_identifier_prefix }}excalidraw"

excalidraw_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}excalidraw"

excalidraw_uid: "{{ mash_playbook_uid }}"
excalidraw_gid: "{{ mash_playbook_gid }}"

excalidraw_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

excalidraw_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
excalidraw_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:excalidraw_room
excalidraw_container_image_self_build: true # Building the image is necessary for using the self-hosted collaboration server
# /role-specific:excalidraw_room

# role-specific:traefik
excalidraw_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
excalidraw_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /excalidraw                                                          #
#                                                                      #
########################################################################
# /role-specific:excalidraw



# role-specific:excalidraw_room
########################################################################
#                                                                      #
# excalidraw_room                                                      #
#                                                                      #
########################################################################

excalidraw_room_enabled: false

excalidraw_room_identifier: "{{ mash_playbook_service_identifier_prefix }}excalidraw-room"

excalidraw_room_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}excalidraw-room"

excalidraw_room_uid: "{{ mash_playbook_uid }}"
excalidraw_room_gid: "{{ mash_playbook_gid }}"

excalidraw_room_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

excalidraw_room_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
excalidraw_room_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
excalidraw_room_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
excalidraw_room_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /excalidraw_room                                                     #
#                                                                      #
########################################################################
# /role-specific:excalidraw_room



# role-specific:exim_relay
########################################################################
#                                                                      #
# exim_relay                                                           #
#                                                                      #
########################################################################

exim_relay_enabled: false

exim_relay_identifier: "{{ mash_playbook_service_identifier_prefix }}exim-relay"

exim_relay_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}exim-relay"

exim_relay_uid: "{{ mash_playbook_uid }}"
exim_relay_gid: "{{ mash_playbook_gid }}"

########################################################################
#                                                                      #
# /exim_relay                                                          #
#                                                                      #
########################################################################
# /role-specific:exim_relay



# role-specific:filebrowser
########################################################################
#                                                                      #
# filebrowser                                                          #
#                                                                      #
########################################################################

filebrowser_enabled: false

filebrowser_identifier: "{{ mash_playbook_service_identifier_prefix }}filebrowser"

filebrowser_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}filebrowser"

filebrowser_uid: "{{ mash_playbook_uid }}"
filebrowser_gid: "{{ mash_playbook_gid }}"

filebrowser_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

filebrowser_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
filebrowser_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
filebrowser_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
filebrowser_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /filebrowser                                                         #
#                                                                      #
########################################################################
# /role-specific:filebrowser



# role-specific:filebrowser_quantum
########################################################################
#                                                                      #
# filebrowser_quantum                                                  #
#                                                                      #
########################################################################

filebrowser_quantum_enabled: false

filebrowser_quantum_identifier: "{{ mash_playbook_service_identifier_prefix }}filebrowser-quantum"

filebrowser_quantum_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}filebrowser-quantum"

filebrowser_quantum_uid: "{{ mash_playbook_uid }}"
filebrowser_quantum_gid: "{{ mash_playbook_gid }}"

filebrowser_quantum_systemd_wanted_services_list_auto: |
  {{
    ([onlyoffice_docs_identifier ~ '.service'] if onlyoffice_docs_enabled and filebrowser_quantum_config_integrations_office else [])
  }}

filebrowser_quantum_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

filebrowser_quantum_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
filebrowser_quantum_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:onlyoffice_docs
filebrowser_quantum_config_integrations_office: true
filebrowser_quantum_config_integrations_office_url: "{{ onlyoffice_docs_scheme }}://{{ onlyoffice_docs_hostname }}"
filebrowser_quantum_config_integrations_office_secret: "{{ onlyoffice_docs_environment_variables_jwt_secret }}"
# /role-specific:onlyoffice_docs

# role-specific:traefik
filebrowser_quantum_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
filebrowser_quantum_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /filebrowser_quantum                                                 #
#                                                                      #
########################################################################
# /role-specific:filebrowser_quantum



# role-specific:firezone
########################################################################
#                                                                      #
# firezone                                                             #
#                                                                      #
########################################################################

firezone_enabled: false

firezone_identifier: "{{ mash_playbook_service_identifier_prefix }}firezone"

firezone_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}firezone"

firezone_uid: "{{ mash_playbook_uid }}"
firezone_gid: "{{ mash_playbook_gid }}"

firezone_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and firezone_database_hostname == postgres_connection_hostname else [])
  }}

firezone_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and firezone_database_hostname == postgres_connection_hostname and firezone_container_network != postgres_container_network else [])
  }}

firezone_generic_secret: "{{ mash_playbook_generic_secret_key }}"

firezone_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
firezone_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:postgres
firezone_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
firezone_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
firezone_database_username: "{{ firezone_identifier }}"
firezone_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'fz.db.user', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
firezone_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
firezone_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /firezone                                                            #
#                                                                      #
########################################################################
# /role-specific:firezone



# role-specific:flaresolverr
########################################################################
#                                                                      #
# flaresolverr                                                         #
#                                                                      #
########################################################################

flaresolverr_enabled: false

flaresolverr_identifier: "{{ mash_playbook_service_identifier_prefix }}flaresolverr"

flaresolverr_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}flaresolverr"

flaresolverr_uid: "{{ mash_playbook_uid }}"
flaresolverr_gid: "{{ mash_playbook_gid }}"


flaresolverr_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

flaresolverr_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
flaresolverr_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
flaresolverr_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
flaresolverr_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /flaresolverr                                                        #
#                                                                      #
########################################################################
# /role-specific:flaresolverr



# role-specific:fmd_server
########################################################################
#                                                                      #
# fmd_server                                                           #
#                                                                      #
########################################################################

fmd_server_enabled: false

fmd_server_identifier: "{{ mash_playbook_service_identifier_prefix }}findmydeviceserver"

fmd_server_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}findmydeviceserver"

# Running with mash_playbook_uid and mash_playbook_gid returns permission errors.
fmd_server_uid: 1000
fmd_server_gid: 1000

fmd_server_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

fmd_server_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
fmd_server_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
fmd_server_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
fmd_server_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /fmd_server                                                          #
#                                                                      #
########################################################################
# /role-specific:fmd_server



# role-specific:focalboard
########################################################################
#                                                                      #
# focalboard                                                           #
#                                                                      #
########################################################################

focalboard_enabled: false

focalboard_identifier: "{{ mash_playbook_service_identifier_prefix }}focalboard"

focalboard_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}focalboard"

focalboard_uid: "{{ mash_playbook_uid }}"
focalboard_gid: "{{ mash_playbook_gid }}"

focalboard_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and focalboard_database_hostname == postgres_connection_hostname else [])
  }}

focalboard_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and focalboard_database_hostname == postgres_connection_hostname else [])
  }}

focalboard_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
focalboard_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

focalboard_database_type: "{{ 'postgres' if postgres_enabled else 'sqlite' }}"

# role-specific:postgres
focalboard_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
focalboard_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
focalboard_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.focalboard', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
focalboard_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
focalboard_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /focalboard                                                          #
#                                                                      #
########################################################################
# /role-specific:focalboard



# role-specific:forgejo
########################################################################
#                                                                      #
# forgejo                                                              #
#                                                                      #
########################################################################

forgejo_enabled: false

forgejo_identifier: "{{ mash_playbook_service_identifier_prefix }}forgejo"

forgejo_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}forgejo"

forgejo_uid: "{{ mash_playbook_uid }}"
forgejo_gid: "{{ mash_playbook_gid }}"

forgejo_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and forgejo_database_mysql_hostname == mariadb_connection_hostname and forgejo_database_type == 'mysql' else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and forgejo_database_postgres_hostname == postgres_connection_hostname and forgejo_database_type == 'postgres' else [])
  }}

forgejo_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and forgejo_config_mailer_smtp_addr == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

forgejo_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and forgejo_config_mailer_smtp_addr == exim_relay_identifier | default('mash-exim-relay') and forgejo_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([mariadb_container_network] if mariadb_enabled | default(false) and forgejo_database_mysql_hostname == mariadb_connection_hostname and forgejo_container_network != mariadb_container_network and forgejo_database_type == 'mysql' else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and forgejo_database_postgres_hostname == postgres_connection_hostname and forgejo_container_network != postgres_container_network and forgejo_database_type == 'postgres' else [])
  }}

forgejo_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
forgejo_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"
forgejo_container_labels_traefik_compression_middleware_enabled: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_enabled }}"
forgejo_container_labels_traefik_compression_middleware_name: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_name if mash_playbook_reverse_proxy_traefik_middleware_compession_enabled else '' }}"

forgejo_database_type: "{{ 'postgres' if postgres_enabled | default(false) else 'sqlite' }}"

# role-specific:exim_relay
forgejo_config_mailer_enabled: "{{ exim_relay_enabled }}"
forgejo_config_mailer_smtp_addr: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
forgejo_config_mailer_smtp_port: 8025
forgejo_config_mailer_from: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
forgejo_config_mailer_protocol: "{{ 'smtp' if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:mariadb
forgejo_database_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
forgejo_database_mysql_port: "{{ mariadb_connection_port if mariadb_enabled else '3306' }}"
forgejo_database_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.forgejo', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
forgejo_database_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
forgejo_database_postgres_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
forgejo_database_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.forgejo', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
forgejo_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
forgejo_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /forgejo                                                             #
#                                                                      #
########################################################################
# /role-specific:forgejo



# role-specific:forgejo_runner
########################################################################
#                                                                      #
# forgejo_runner                                                       #
#                                                                      #
########################################################################

forgejo_runner_enabled: false

forgejo_runner_identifier: "{{ mash_playbook_service_identifier_prefix }}forgejo-runner"

forgejo_runner_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}forgejo-runner"

forgejo_runner_uid: "0"
forgejo_runner_gid: "0"

forgejo_runner_systemd_required_systemd_services_list: |
  {{
    ([devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [])
  }}

forgejo_runner_docker_endpoint_is_unix_socket: "{{ false if forgejo_runner_docker_endpoint.startswith('tcp://') else true }}"

forgejo_runner_runner_name: "forgejo-runner-by-mash-playbook"

forgejo_runner_capacity: 1

########################################################################
#                                                                      #
# /forgejo_runner                                                      #
#                                                                      #
########################################################################
# /role-specific:forgejo_runner



# role-specific:freescout
########################################################################
#                                                                      #
# freescout                                                            #
#                                                                      #
########################################################################

freescout_enabled: false

freescout_identifier: "{{ mash_playbook_service_identifier_prefix }}freescout"

freescout_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}freescout"

freescout_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and freescout_database_hostname == postgres_connection_hostname else [])
  }}

freescout_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and freescout_database_hostname == postgres_connection_hostname and freescout_container_network != postgres_container_network else [])
  }}

freescout_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
freescout_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:postgres
freescout_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
freescout_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
freescout_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'freescout.db', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
freescout_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
freescout_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /freescout                                                           #
#                                                                      #
########################################################################
# /role-specific:freescout



# role-specific:freshrss
########################################################################
#                                                                      #
# freshrss                                                             #
#                                                                      #
########################################################################

freshrss_enabled: false

freshrss_identifier: "{{ mash_playbook_service_identifier_prefix }}freshrss"

freshrss_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}freshrss"

# freshrss_uid and freshrss_gid are intentionally not being set here.
# FreshRSS can only work with a specific user and group, as hardcoded in the role defaults.
freshrss_uid: "0"
freshrss_gid: "33"

freshrss_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and freshrss_database_mysql_hostname == mariadb_connection_hostname and freshrss_database_type == 'mysql' else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and freshrss_database_hostname == postgres_connection_hostname and freshrss_database_type == 'postgres' else [])
  }}

freshrss_container_additional_networks_auto: |
  {{
    ([mariadb_container_network] if mariadb_enabled | default(false) and freshrss_database_mysql_hostname == mariadb_connection_hostname and freshrss_container_network != mariadb_container_network and freshrss_database_type == 'mysql' else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and freshrss_database_hostname == postgres_connection_hostname and freshrss_container_network != postgres_container_network and freshrss_database_type == 'postgres' else [])
  }}

freshrss_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
freshrss_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:mariadb
freshrss_database_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
freshrss_database_mysql_port: "{{ mariadb_connection_port if mariadb_enabled else '3306' }}"
freshrss_database_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'm.freshrss', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
freshrss_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
freshrss_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
freshrss_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'p.freshrss', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
freshrss_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
freshrss_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /freshrss                                                            #
#                                                                      #
########################################################################
# /role-specific:freshrss



# role-specific:funkwhale
########################################################################
#                                                                      #
# funkwhale                                                            #
#                                                                      #
########################################################################

funkwhale_enabled: false

funkwhale_identifier: "{{ mash_playbook_service_identifier_prefix }}funkwhale"

funkwhale_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}funkwhale"

funkwhale_uid: "{{ mash_playbook_uid }}"
funkwhale_gid: "{{ mash_playbook_gid }}"

funkwhale_api_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and funkwhale_database_hostname == postgres_connection_hostname else [])
  }}

funkwhale_frontend_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and funkwhale_database_hostname == postgres_connection_hostname else [])
  }}

funkwhale_api_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and funkwhale_database_hostname == postgres_connection_hostname and funkwhale_api_container_network != postgres_container_network else [])
  }}

funkwhale_frontend_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and funkwhale_database_hostname == postgres_connection_hostname and funkwhale_frontend_container_network != postgres_container_network else [])
  }}

funkwhale_api_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
funkwhale_api_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"
funkwhale_frontend_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
funkwhale_frontend_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:postgres
funkwhale_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
funkwhale_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
funkwhale_database_username: "{{ funkwhale_identifier }}"
funkwhale_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.funkwhale', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
funkwhale_api_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
funkwhale_api_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
funkwhale_frontend_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
funkwhale_frontend_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /funkwhale                                                           #
#                                                                      #
########################################################################
# /role-specific:funkwhale



# role-specific:ghostfolio
########################################################################
#                                                                      #
# ghostfolio                                                           #
#                                                                      #
########################################################################

ghostfolio_enabled: false

ghostfolio_identifier: "{{ mash_playbook_service_identifier_prefix }}ghostfolio"

ghostfolio_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}ghostfolio"

# The role is based on Node.js docker image, and is expected to run with uid 1000.
#
# See: https://github.com/nodejs/docker-node/blob/main/docs/BestPractices.md#non-root-user
# and https://github.com/ghostfolio/ghostfolio/blob/main/Dockerfile
ghostfolio_uid: 1000
ghostfolio_gid: 1000

ghostfolio_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and ghostfolio_database_hostname == postgres_connection_hostname else [])
  }}

ghostfolio_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and ghostfolio_database_hostname == postgres_connection_hostname and ghostfolio_container_network != postgres_container_network else [])
  }}

ghostfolio_environment_variable_access_token_salt: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'at.ghostfolio', rounds=655555) | to_uuid }}"
ghostfolio_environment_variable_jwt_secret_key: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'jsk.ghostfolio', rounds=655555) | to_uuid }}"

ghostfolio_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
ghostfolio_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:postgres
ghostfolio_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
ghostfolio_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
ghostfolio_database_username: ghostfolio
ghostfolio_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.ghostfolio', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
ghostfolio_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
ghostfolio_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /ghostfolio                                                          #
#                                                                      #
########################################################################
# /role-specific:ghostfolio



# role-specific:gitea
########################################################################
#                                                                      #
# gitea                                                                #
#                                                                      #
########################################################################

gitea_enabled: false

gitea_identifier: "{{ mash_playbook_service_identifier_prefix }}gitea"

gitea_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}gitea"

gitea_uid: "{{ mash_playbook_uid }}"
gitea_gid: "{{ mash_playbook_gid }}"

gitea_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and gitea_database_hostname == postgres_connection_hostname else [])
  }}

gitea_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and gitea_config_mailer_smtp_addr == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

gitea_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and gitea_config_mailer_smtp_addr == exim_relay_identifier | default('mash-exim-relay') and gitea_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and gitea_database_hostname == postgres_connection_hostname and gitea_container_network != postgres_container_network else [])
  }}

gitea_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
gitea_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"
gitea_container_labels_traefik_compression_middleware_enabled: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_enabled }}"
gitea_container_labels_traefik_compression_middleware_name: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_name if mash_playbook_reverse_proxy_traefik_middleware_compession_enabled else '' }}"

# role-specific:exim_relay
gitea_config_mailer_enabled: "{{ exim_relay_enabled }}"
gitea_config_mailer_smtp_addr: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
gitea_config_mailer_smtp_port: 8025
gitea_config_mailer_from: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
gitea_config_mailer_protocol: "{{ 'smtp' if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:postgres
gitea_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
gitea_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
gitea_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.gitea', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
gitea_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
gitea_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /gitea                                                               #
#                                                                      #
########################################################################
# /role-specific:gitea



# role-specific:gothub
########################################################################
#                                                                      #
# gothub                                                               #
#                                                                      #
########################################################################

gothub_enabled: false

gothub_identifier: "{{ mash_playbook_service_identifier_prefix }}gothub"

gothub_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}gothub"

gothub_uid: "{{ mash_playbook_uid }}"
gothub_gid: "{{ mash_playbook_gid }}"

gothub_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

gothub_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
gothub_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
gothub_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
gothub_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /gothub                                                              #
#                                                                      #
########################################################################
# /role-specific:gothub



# role-specific:gotify
########################################################################
#                                                                      #
# gotify                                                               #
#                                                                      #
########################################################################

gotify_enabled: false

gotify_identifier: "{{ mash_playbook_service_identifier_prefix }}gotify"

gotify_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}gotify"

gotify_uid: "{{ mash_playbook_uid }}"
gotify_gid: "{{ mash_playbook_gid }}"

gotify_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and gotify_database_mysql_hostname == mariadb_connection_hostname and gotify_database_type == 'mysql' else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and gotify_database_postgres_hostname == postgres_connection_hostname and gotify_database_type == 'postgres' else [])
  }}

gotify_container_additional_networks_auto: |
  {{
    ([mariadb_container_network] if mariadb_enabled | default(false) and gotify_database_mysql_hostname == mariadb_connection_hostname and gotify_container_network != mariadb_container_network and gotify_database_type == 'mysql' else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and gotify_database_postgres_hostname == postgres_connection_hostname and gotify_container_network != postgres_container_network and gotify_database_type == 'postgres' else [])
  }}

gotify_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
gotify_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:mariadb
gotify_database_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
gotify_database_mysql_port: "{{ mariadb_connection_port if mariadb_enabled else '3306' }}"
gotify_database_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'm.gotify', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
gotify_database_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
gotify_database_postgres_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
gotify_database_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'p.gotify', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
gotify_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
gotify_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /gotify                                                              #
#                                                                      #
########################################################################
# /role-specific:gotify



# role-specific:gotosocial
########################################################################
#                                                                      #
# gotosocial                                                           #
#                                                                      #
########################################################################

gotosocial_enabled: false

gotosocial_identifier: "{{ mash_playbook_service_identifier_prefix }}gotosocial"

gotosocial_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}gotosocial"

gotosocial_uid: "{{ mash_playbook_uid }}"
gotosocial_gid: "{{ mash_playbook_gid }}"

gotosocial_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and gotosocial_database_hostname == postgres_connection_hostname and gotosocial_database_type == 'postgres' else [])
  }}

gotosocial_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and gotosocial_smtp_host == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

gotosocial_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and gotosocial_smtp_host == exim_relay_identifier | default('mash-exim-relay') and gotosocial_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and gotosocial_database_hostname == postgres_connection_hostname and gotosocial_container_network != postgres_container_network and gotosocial_database_type == 'postgres' else [])
  }}

gotosocial_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
gotosocial_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

gotosocial_container_labels_metrics_enabled: "{{ gotosocial_metrics_enabled and mash_playbook_metrics_exposure_enabled }}"
gotosocial_container_labels_metrics_hostname: "{{ mash_playbook_metrics_exposure_hostname }}"
gotosocial_container_labels_metrics_path_prefix: "{{ mash_playbook_metrics_exposure_path_prefix }}/{{ gotosocial_identifier }}"
gotosocial_container_labels_metrics_middleware_basic_auth_enabled: "{{ mash_playbook_metrics_exposure_http_basic_auth_enabled }}"
gotosocial_container_labels_metrics_middleware_basic_auth_users: "{{ mash_playbook_metrics_exposure_http_basic_auth_users }}"

gotosocial_metrics_enabled: "{{ prometheus_enabled | default(false) or mash_playbook_metrics_exposure_enabled }}"

gotosocial_database_type: "{{ 'postgres' if postgres_enabled | default(false) else 'sqlite' }}"

# role-specific:exim_relay
gotosocial_smtp_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
gotosocial_smtp_port: 8025
gotosocial_smtp_from: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:postgres
gotosocial_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
gotosocial_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
gotosocial_database_username: "{{ gotosocial_identifier }}"
gotosocial_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.gotosocial', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
gotosocial_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
gotosocial_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /gotosocial                                                          #
#                                                                      #
########################################################################
# /role-specific:gotosocial



# role-specific:grafana
########################################################################
#                                                                      #
# grafana                                                              #
#                                                                      #
########################################################################

grafana_enabled: false

grafana_identifier: "{{ mash_playbook_service_identifier_prefix }}grafana"

grafana_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}grafana"

grafana_uid: "{{ mash_playbook_uid }}"
grafana_gid: "{{ mash_playbook_gid }}"

grafana_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and grafana_smtp_host == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

grafana_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and grafana_smtp_host == exim_relay_identifier | default('mash-exim-relay') and grafana_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if (grafana_container_labels_traefik_enabled and mash_playbook_reverse_proxyable_services_additional_network) else [])
  }}

grafana_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
grafana_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:exim_relay
grafana_smtp_enabled: "{{ exim_relay_enabled | default(false) }}"
grafana_smtp_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
grafana_smtp_port: 8025
grafana_smtp_from_address: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:traefik
grafana_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
grafana_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /grafana                                                             #
#                                                                      #
########################################################################
# /role-specific:grafana



# role-specific:headplane
########################################################################
#                                                                      #
# headplane                                                            #
#                                                                      #
########################################################################

headplane_enabled: false

headplane_identifier: "{{ mash_playbook_service_identifier_prefix }}headplane"

headplane_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}headplane"

headplane_uid: "{{ mash_playbook_uid }}"
headplane_gid: "{{ mash_playbook_gid }}"

headplane_systemd_required_services_list_auto: |
  {{
    ([headscale_identifier ~ '.service'] if headscale_enabled | default(false) and headplane_headscale_hostname == headscale_identifier and headplane_container_network != headscale_container_network else [])
  }}

headplane_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([headscale_container_network] if headscale_enabled | default(false) and headplane_headscale_hostname == headscale_identifier and headplane_container_network != headscale_container_network else [])
  }}

headplane_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
headplane_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:headscale
headplane_headscale_hostname: "{{ headscale_identifier if headscale_enabled | default(false) else '' }}"
headplane_headscale_port: "{{ headscale_container_http_api_port if headscale_enabled | default(false) else '' }}"
headplane_headscale_config_path: "{{ headscale_config_path if headscale_enabled | default(false) else '' }}"
headplane_headscale_container_name: "{{ headscale_identifier if headscale_enabled | default(false) else '' }}"
headplane_headscale_extra_records_enabled: "{{ true if headscale_enabled | default(false) and headscale_extra_records_path_enabled else false }}"
headplane_headscale_public_url: "{{ 'https://' if headscale_container_labels_api_tls else 'http://' }}{{ headscale_hostname }}"
# /role-specific:headscale

# role-specific:traefik
headplane_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
headplane_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /headplane                                                           #
#                                                                      #
########################################################################
# /role-specific:headplane



# role-specific:headscale
########################################################################
#                                                                      #
# headscale                                                            #
#                                                                      #
########################################################################

headscale_enabled: false

headscale_identifier: "{{ mash_playbook_service_identifier_prefix }}headscale"

headscale_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}headscale"

headscale_uid: "{{ mash_playbook_uid }}"
headscale_gid: "{{ mash_playbook_gid }}"

headscale_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

headscale_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
headscale_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
headscale_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
headscale_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /headscale                                                           #
#                                                                      #
########################################################################
# /role-specific:headscale



# role-specific:healthchecks
########################################################################
#                                                                      #
# healthchecks                                                         #
#                                                                      #
########################################################################

healthchecks_enabled: false

healthchecks_identifier: "{{ mash_playbook_service_identifier_prefix }}healthchecks"

healthchecks_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}healthchecks"

healthchecks_uid: "{{ mash_playbook_uid }}"
healthchecks_gid: "{{ mash_playbook_gid }}"

healthchecks_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and healthchecks_database_mysql_hostname == mariadb_connection_hostname and healthchecks_database_type == 'mysql' else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and healthchecks_database_hostname == postgres_connection_hostname and healthchecks_database_type == 'postgres' else [])
  }}

healthchecks_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and healthchecks_environment_variable_email_host == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

healthchecks_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and healthchecks_environment_variable_email_host == exim_relay_identifier | default('mash-exim-relay') and healthchecks_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([mariadb_container_network] if mariadb_enabled | default(false) and healthchecks_database_mysql_hostname == mariadb_connection_hostname and healthchecks_container_network != mariadb_container_network and healthchecks_database_type == 'mysql' else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and healthchecks_database_hostname == postgres_connection_hostname and healthchecks_container_network != postgres_container_network and healthchecks_database_type == 'postgres' else [])
  }}

healthchecks_environment_variable_secret_key: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'healthchecks', rounds=655555) | to_uuid }}"

healthchecks_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
healthchecks_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

healthchecks_database_type: "{{ 'postgres' if postgres_enabled | default(false) else 'sqlite' }}"

# role-specific:exim_relay
healthchecks_environment_variable_email_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
healthchecks_environment_variable_email_port: "{{ 8025 if exim_relay_enabled else '587' }}"
healthchecks_environment_variable_default_from_email: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
healthchecks_environment_variable_email_use_tls: "{{ false if exim_relay_enabled else true }}"
healthchecks_environment_variable_email_use_verification: "{{ false if exim_relay_enabled else true }}"
# /role-specific:exim_relay

# role-specific:mariadb
healthchecks_database_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
healthchecks_database_mysql_port: "{{ mariadb_connection_port if mariadb_enabled else '3306' }}"
healthchecks_database_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'healthchecks.db', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
healthchecks_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
healthchecks_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
healthchecks_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'healthchecks.db', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
healthchecks_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
healthchecks_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /healthchecks                                                        #
#                                                                      #
########################################################################
# /role-specific:healthchecks



# role-specific:homarr
########################################################################
#                                                                      #
# homarr                                                               #
#                                                                      #
########################################################################

homarr_enabled: false

homarr_identifier: "{{ mash_playbook_service_identifier_prefix }}homarr"

homarr_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}homarr"

homarr_uid: "{{ mash_playbook_uid }}"
homarr_gid: "{{ mash_playbook_gid }}"

homarr_systemd_required_services_list_auto: |
  {{
    ([container_socket_proxy_identifier + '.service'] if container_socket_proxy_enabled | default(false) else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and homarr_database_postgres_hostname == postgres_connection_hostname and homarr_database_type == 'node-postgres' else [])
  }}

homarr_container_additional_networks_auto: |
  {{
    ([container_socket_proxy_container_network] if container_socket_proxy_enabled | default(false) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and homarr_database_postgres_hostname == postgres_connection_hostname and homarr_container_network != postgres_container_network and homarr_database_type == 'node-postgres' else [])
  }}

homarr_database_type: "{{ 'node-postgres' if postgres_enabled | default(false) else 'better-sqlite3' }}"

homarr_environment_variables_auth_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'homarr', rounds=655555) | to_uuid }}"

homarr_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
homarr_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:container_socket_proxy
homarr_docker_endpoint_is_unix_socket: "{{ false if homarr_docker_endpoint.startswith('tcp://') else true }}"
homarr_docker_endpoint: "{{ container_socket_proxy_endpoint if container_socket_proxy_enabled else 'unix:///var/run/docker.sock' }}"
homarr_environment_variables_docker_hostnames: "{{ container_socket_proxy_identifier }}"
# /role-specific:container_socket_proxy

# role-specific:postgres
homarr_database_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
homarr_database_postgres_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
homarr_database_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.homarr', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
homarr_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
homarr_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /homarr                                                              #
#                                                                      #
########################################################################
# /role-specific:homarr



# role-specific:hubsite
########################################################################
#                                                                      #
# hubsite                                                              #
#                                                                      #
########################################################################

hubsite_enabled: false

hubsite_identifier: "{{ mash_playbook_service_identifier_prefix }}hubsite"

hubsite_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}hubsite"

hubsite_uid: "{{ mash_playbook_uid }}"
hubsite_gid: "{{ mash_playbook_gid }}"

hubsite_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

hubsite_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
hubsite_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
hubsite_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
hubsite_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

# Services
##########

# role-specific:adguard_home
# Adguard home
hubsite_service_adguard_home_enabled: "{{ adguard_home_enabled }}"
hubsite_service_adguard_home_name: Adguard Home
hubsite_service_adguard_home_url: "https://{{ adguard_home_hostname }}{{ adguard_home_path_prefix }}"
hubsite_service_adguard_home_logo_location: "{{ role_path }}/assets/shield.png"
hubsite_service_adguard_home_description: "A network-wide DNS software for blocking ads & tracking"
hubsite_service_adguard_home_priority: 1000
# /role-specific:adguard_home

# role-specific:anonymousoverflow
# AnonymousOverflow
hubsite_service_anonymousoverflow_enabled: "{{ anonymousoverflow_enabled }}"
hubsite_service_anonymousoverflow_name: AnonymousOverflow
hubsite_service_anonymousoverflow_url: "{{ anonymousoverflow_scheme }}://{{ anonymousoverflow_hostname }}{{ anonymousoverflow_path_prefix }}"
hubsite_service_anonymousoverflow_logo_location: ""
hubsite_service_anonymousoverflow_description: "View StackOverflow threads without exposing your IP address, browsing habits, and other browser fingerprinting data to the website."
hubsite_service_anonymousoverflow_priority: 1000
# /role-specific:anonymousoverflow

# role-specific:appsmith
# Appsmith
hubsite_service_appsmith_enabled: "{{ appsmith_enabled }}"
hubsite_service_appsmith_name: Appsmith
hubsite_service_appsmith_url: "{{ appsmith_scheme }}://{{ appsmith_hostname }}{{ appsmith_path_prefix }}"
hubsite_service_appsmith_logo_location: "{{ role_path }}/assets/appsmith.png"
hubsite_service_appsmith_description: "Platform for building and deploying custom internal tools and applications without writing code"
hubsite_service_appsmith_priority: 1000
# /role-specific:appsmith

# role-specific:authentik
# authentik
hubsite_service_authentik_enabled: "{{ authentik_enabled }}"
hubsite_service_authentik_name: authentik
hubsite_service_authentik_url: "https://{{ authentik_hostname }}"
hubsite_service_authentik_logo_location: "{{ role_path }}/assets/authentik.png"
hubsite_service_authentik_description: "An open source identity provider"
hubsite_service_authentik_priority: 1000
# /role-specific:authentik

# role-specific:docker_registry_browser
# Docker Registry Browser
hubsite_service_docker_registry_browser_enabled: "{{ docker_registry_browser_enabled }}"
hubsite_service_docker_registry_browser_name: Docker Registry Browser
hubsite_service_docker_registry_browser_url: "https://{{ docker_registry_browser_hostname }}{{ docker_registry_browser_path_prefix }}"
hubsite_service_docker_registry_browser_logo_location: "{{ role_path }}/assets/docker.png"
hubsite_service_docker_registry_browser_description: "Browse docker images"
hubsite_service_docker_registry_browser_priority: 1000
# /role-specific:docker_registry_browser

# role-specific:docmost
# Docmost
hubsite_service_docmost_enabled: "{{ docmost_enabled }}"
hubsite_service_docmost_name: "Docmost"
hubsite_service_docmost_url: "{{ docmost_scheme }}://{{ docmost_hostname }}{{ docmost_path_prefix }}"
hubsite_service_docmost_logo_location: ""
hubsite_service_docmost_description: "Open-source collaborative wiki and documentation software"
hubsite_service_docmost_priority: 1000
# /role-specific:docmost

# role-specific:etherpad
# etherpad
hubsite_service_etherpad_enabled: "{{ etherpad_enabled }}"
hubsite_service_etherpad_name: Etherpad
hubsite_service_etherpad_url: "{{ etherpad_scheme }}://{{ etherpad_hostname }}{{ etherpad_path_prefix }}"
hubsite_service_etherpad_logo_location: "{{ role_path }}/assets/etherpad.png"
hubsite_service_etherpad_description: "Open source collaborative text editor"
hubsite_service_etherpad_priority: 1000
# /role-specific:etherpad

# role-specific:excalidraw
# Excalidraw
hubsite_service_excalidraw_enabled: "{{ excalidraw_enabled }}"
hubsite_service_excalidraw_name: "Excalidraw"
hubsite_service_excalidraw_url: "{{ excalidraw_scheme }}://{{ excalidraw_hostname }}{{ excalidraw_path_prefix }}"
hubsite_service_excalidraw_logo_location: ""
hubsite_service_excalidraw_description: "Virtual whiteboard for sketching hand-drawn like diagrams"
hubsite_service_excalidraw_priority: 1000
# /role-specific:excalidraw

# role-specific:firezone
# Firezone
hubsite_service_firezone_enabled: "{{ firezone_enabled }}"
hubsite_service_firezone_name: Firezone
hubsite_service_firezone_url: "https://{{ firezone_hostname }}"
hubsite_service_firezone_logo_location: "{{ role_path }}/assets/firezone.png"
hubsite_service_firezone_description: "A self-hosted VPN server, based on Wireguard"
hubsite_service_firezone_priority: 1000
# /role-specific:firezone

# role-specific:fmd_server
# FMD Server
hubsite_service_fmd_server_enabled: "{{ fmd_server_enabled }}"
hubsite_service_fmd_server_name: FMD Server
hubsite_service_fmd_server_url: "{{ fmd_server_scheme }}://{{ fmd_server_hostname }}{{ fmd_server_path_prefix }}"
hubsite_service_fmd_server_logo_location: ""
hubsite_service_fmd_server_description: "Official server for FMD (FindMyDevice)"
hubsite_service_fmd_server_priority: 1000
# /role-specific:fmd_server

# role-specific:focalboard
# Focalboard
hubsite_service_focalboard_enabled: "{{ focalboard_enabled }}"
hubsite_service_focalboard_name: Focalboard
hubsite_service_focalboard_url: "https://{{ focalboard_hostname }}{{ focalboard_path_prefix }}"
hubsite_service_focalboard_logo_location: "{{ role_path }}/assets/focalboard.png"
hubsite_service_focalboard_description: "An open source, self-hosted alternative to Trello, Notion, and Asana."
hubsite_service_focalboard_priority: 1000
# /role-specific:focalboard

# role-specific:forgejo
# Forgejo
hubsite_service_forgejo_enabled: "{{ forgejo_enabled }}"
hubsite_service_forgejo_name: Forgejo
hubsite_service_forgejo_url: "{{ forgejo_scheme }}://{{ forgejo_hostname }}{{ forgejo_path_prefix }}"
hubsite_service_forgejo_logo_location: "{{ role_path }}/assets/forgejo.png"
hubsite_service_forgejo_description: "Another git service"
hubsite_service_forgejo_priority: 1000
# /role-specific:forgejo

# role-specific:freshrss
# FreshRSS
hubsite_service_freshrss_enabled: "{{ freshrss_enabled }}"
hubsite_service_freshrss_name: FreshRSS
hubsite_service_freshrss_url: "{{ freshrss_scheme }}://{{ freshrss_hostname }}{{ freshrss_path_prefix }}"
hubsite_service_freshrss_logo_location: "{{ role_path }}/assets/freshrss.png"
hubsite_service_freshrss_description: "RSS and Atom feed aggregator."
hubsite_service_freshrss_priority: 1000
# /role-specific:freshrss

# role-specific:funkwhale
# Funkwhale
hubsite_service_funkwhale_enabled: "{{ funkwhale_enabled }}"
hubsite_service_funkwhale_name: Funkwhale
hubsite_service_funkwhale_url: "https://{{ funkwhale_hostname }}"
hubsite_service_funkwhale_logo_location: "{{ role_path }}/assets/funkwhale.png"
hubsite_service_funkwhale_description: "Listen and share music with a selfhosted streaming server"
hubsite_service_funkwhale_priority: 1000
# /role-specific:funkwhale

# role-specific:gitea
# Gitea
hubsite_service_gitea_enabled: "{{ gitea_enabled }}"
hubsite_service_gitea_name: Gitea
hubsite_service_gitea_url: "{{ gitea_scheme }}://{{ gitea_hostname }}{{ gitea_path_prefix }}"
hubsite_service_gitea_logo_location: "{{ role_path }}/assets/gitea.png"
hubsite_service_gitea_description: "A git service"
hubsite_service_gitea_priority: 1000
# /role-specific:gitea

# role-specific:gotosocial
# GoToSocial
hubsite_service_gotosocial_enabled: "{{ gotosocial_enabled }}"
hubsite_service_gotosocial_name: GoToSocial
hubsite_service_gotosocial_url: "https://{{ gotosocial_hostname }}"
hubsite_service_gotosocial_logo_location: "{{ role_path }}/assets/gotosocial.png"
hubsite_service_gotosocial_description: "A fediverse server"
hubsite_service_gotosocial_priority: 1000
# /role-specific:gotosocial

# role-specific:grafana
# Grafana
hubsite_service_grafana_enabled: "{{ grafana_enabled }}"
hubsite_service_grafana_name: Grafana
hubsite_service_grafana_url: "https://{{ grafana_hostname }}{{ grafana_path_prefix }}"
hubsite_service_grafana_logo_location: "{{ role_path }}/assets/grafana.png"
hubsite_service_grafana_description: "Check how your server is doing"
hubsite_service_grafana_priority: 1000
# /role-specific:grafana

# role-specific:healthchecks
# Healthchecks
hubsite_service_healthchecks_enabled: "{{ healthchecks_enabled }}"
hubsite_service_healthchecks_name: Healthchecks
hubsite_service_healthchecks_url: "https://{{ healthchecks_hostname }}{{ healthchecks_path_prefix }}"
hubsite_service_healthchecks_logo_location: "{{ role_path }}/assets/healthchecks.png"
hubsite_service_healthchecks_description: "A simple and Effective Cron Job Monitoring solution"
hubsite_service_healthchecks_priority: 1000
# /role-specific:healthchecks

# role-specific:ihatemoney
# ihatemoney
hubsite_service_ihatemoney_enabled: "{{ ihatemoney_enabled }}"
hubsite_service_ihatemoney_name: ihatemoney
hubsite_service_ihatemoney_url: "https://{{ ihatemoney_hostname }}{{ ihatemoney_path_prefix }}"
hubsite_service_ihatemoney_logo_location: "{{ role_path }}/assets/ihatemoney.png"
hubsite_service_ihatemoney_description: "Manage your shared expenses, easily"
hubsite_service_ihatemoney_priority: 1000
# /role-specific:ihatemoney

# role-specific:joplin_server
# Joplin Server
hubsite_service_joplin_server_enabled: "{{ joplin_server_enabled }}"
hubsite_service_joplin_server_name: Joplin Server
hubsite_service_joplin_server_url: "{{ joplin_server_scheme }}://{{ joplin_server_hostname }}{{ joplin_server_path_prefix }}"
hubsite_service_joplin_server_logo_location: ""  # Note official logos are non-free. See: https://github.com/laurent22/joplin/blob/dev/Assets/LICENSE
hubsite_service_joplin_server_description: "Self-hosted server component for Joplin"
hubsite_service_joplin_server_priority: 1000
# /role-specific:joplin_server

# role-specific:keycloak
# Keycloak
hubsite_service_keycloak_enabled: "{{ keycloak_enabled }}"
hubsite_service_keycloak_name: Keycloak
hubsite_service_keycloak_url: "{{ keycloak_scheme }}://{{ keycloak_hostname }}{{ keycloak_path_prefix }}"
hubsite_service_keycloak_logo_location: "{{ role_path }}/assets/keycloak.png"
hubsite_service_keycloak_description: "An open source identity and access management solution."
hubsite_service_keycloak_priority: 1000
# /role-specific:keycloak

# role-specific:labelstudio
# Label Studio
hubsite_service_labelstudio_enabled: "{{ labelstudio_enabled }}"
hubsite_service_labelstudio_name: "Label Studio"
hubsite_service_labelstudio_url: "https://{{ labelstudio_hostname }}{{ labelstudio_path_prefix }}"
hubsite_service_labelstudio_logo_location: "{{ role_path }}/assets/labelstudio.png"
hubsite_service_labelstudio_description: "The most flexible data labeling platform to fine-tune LLMs, prepare training data or validate AI models"
hubsite_service_labelstudio_priority: 1000
# /role-specific:labelstudio

# role-specific:languagetool
# LanguageTool
hubsite_service_languagetool_enabled: "{{ languagetool_enabled }}"
hubsite_service_languagetool_name: LanguageTool
hubsite_service_languagetool_url: "https://{{ languagetool_hostname }}{{ languagetool_path_prefix }}"
hubsite_service_languagetool_logo_location: "{{ role_path }}/assets/languagetool.png"
hubsite_service_languagetool_description: "An open source online grammar, style and spell checker"
hubsite_service_languagetool_priority: 1000
# /role-specific:languagetool

# role-specific:linkding
# linkding
hubsite_service_linkding_enabled: "{{ linkding_enabled }}"
hubsite_service_linkding_name: linkding
hubsite_service_linkding_url: "{{ linkding_scheme }}://{{ linkding_hostname }}{{ linkding_path_prefix }}"
hubsite_service_linkding_logo_location: "{{ role_path }}/assets/linkding.png"
hubsite_service_linkding_description: "Bookmark manager that is designed be to be minimal and fast."
hubsite_service_linkding_priority: 1000
# /role-specific:linkding

# role-specific:miniflux
# Miniflux
hubsite_service_miniflux_enabled: "{{ miniflux_enabled }}"
hubsite_service_miniflux_name: Miniflux
hubsite_service_miniflux_url: "{{ miniflux_scheme }}://{{ miniflux_hostname }}{{ miniflux_path_prefix }}"
hubsite_service_miniflux_logo_location: "{{ role_path }}/assets/miniflux.png"
hubsite_service_miniflux_description: "An opinionated feed reader"
hubsite_service_miniflux_priority: 1000
# /role-specific:miniflux

# role-specific:n8n
# n8n
hubsite_service_n8n_enabled: "{{ n8n_enabled }}"
hubsite_service_n8n_name: n8n
hubsite_service_n8n_url: "{{ n8n_scheme }}://{{ n8n_hostname }}{{ n8n_path_prefix }}"
hubsite_service_n8n_logo_location: "{{ role_path }}/assets/n8n.png"
hubsite_service_n8n_description: "Workflow automation for technical people."
hubsite_service_n8n_priority: 1000
# /role-specific:n8n

# role-specific:navidrome
# Navidrome
hubsite_service_navidrome_enabled: "{{ navidrome_enabled }}"
hubsite_service_navidrome_name: Navidrome
hubsite_service_navidrome_url: "{{ navidrome_scheme }}://{{ navidrome_hostname }}{{ navidrome_path_prefix }}"
hubsite_service_navidrome_logo_location: "{{ role_path }}/assets/navidrome.png"
hubsite_service_navidrome_description: "A Subsonic-API compatible music server"
hubsite_service_navidrome_priority: 1000
# /role-specific:navidrome

# role-specific:nextcloud
# Nextcloud
hubsite_service_nextcloud_enabled: "{{ nextcloud_enabled }}"
hubsite_service_nextcloud_name: Nextcloud
hubsite_service_nextcloud_url: "{{ nextcloud_scheme }}://{{ nextcloud_hostname }}{{ nextcloud_path_prefix }}"
hubsite_service_nextcloud_logo_location: "{{ role_path }}/assets/nextcloud.png"
hubsite_service_nextcloud_description: "Sync your files & much more"
hubsite_service_nextcloud_priority: 1000
# /role-specific:nextcloud

# role-specific:ntfy
# ntfy
hubsite_service_ntfy_enabled: "{{ ntfy_enabled }}"
hubsite_service_ntfy_name: ntfy
hubsite_service_ntfy_url: "https://{{ ntfy_hostname }}{{ ntfy_path_prefix }}"
hubsite_service_ntfy_logo_location: "{{ role_path }}/assets/ntfy.png"
hubsite_service_ntfy_description: "Send push notifications from any computer"
hubsite_service_ntfy_priority: 1000
# /role-specific:ntfy

# role-specific:owncast
# Owncast
hubsite_service_owncast_enabled: "{{ owncast_enabled }}"
hubsite_service_owncast_name: Owncast
hubsite_service_owncast_url: "https://{{ owncast_hostname }}"
hubsite_service_owncast_logo_location: "{{ role_path }}/assets/owncast.png"
hubsite_service_owncast_description: "Livestream & Chat"
hubsite_service_owncast_priority: 1000
# /role-specific:owncast

# role-specific:peertube
# Peertube
hubsite_service_peertube_enabled: "{{ peertube_enabled }}"
hubsite_service_peertube_name: Peertube
hubsite_service_peertube_url: "https://{{ peertube_hostname }}{{ peertube_path_prefix }}"
hubsite_service_peertube_logo_location: "{{ role_path }}/assets/peertube.png"
hubsite_service_peertube_description: "Watch and upload videos"
hubsite_service_peertube_priority: 1000
# /role-specific:peertube

# role-specific:privatebin
# PrivateBin
hubsite_service_privatebin_enabled: "{{ privatebin_enabled }}"
hubsite_service_privatebin_name: PrivateBin
hubsite_service_privatebin_url: "{{ privatebin_scheme }}://{{ privatebin_hostname }}{{ privatebin_path_prefix }}"
hubsite_service_privatebin_logo_location: ""
hubsite_service_privatebin_description: "Minimalist, open source online pastebin where the server has zero knowledge of pasted data."
hubsite_service_privatebin_priority: 1000
# /role-specific:privatebin

# role-specific:radicale
# Radicale
hubsite_service_radicale_enabled: "{{ radicale_enabled }}"
hubsite_service_radicale_name: Radicale
hubsite_service_radicale_url: "https://{{ radicale_hostname }}{{ radicale_path_prefix }}"
hubsite_service_radicale_logo_location: "{{ role_path }}/assets/radicale.png"
hubsite_service_radicale_description: "Sync contacts and calendars"
hubsite_service_radicale_priority: 1000
# /role-specific:radicale

# role-specific:redlib
# Redlib
hubsite_service_redlib_enabled: "{{ redlib_enabled }}"
hubsite_service_redlib_name: Redlib
hubsite_service_redlib_url: "{{ redlib_scheme }}://{{ redlib_hostname }}{{ redlib_path_prefix }}"
hubsite_service_redlib_logo_location: ""
hubsite_service_redlib_description: "Browse Reddit without exposing your IP address, browsing habits, and other browser fingerprinting data to the website."
hubsite_service_redlib_priority: 1000
# /role-specific:redlib

# role-specific:send
# Send
hubsite_service_send_enabled: "{{ send_enabled }}"
hubsite_service_send_name: Send
hubsite_service_send_url: "https://{{ send_hostname }}{{ send_path_prefix }}"
hubsite_service_send_logo_location: ""
hubsite_service_send_description: "Send end-to-end encrypted files to others with a link."
hubsite_service_send_priority: 1000
# /role-specific:send

# role-specific:syncthing
# Syncthing
hubsite_service_syncthing_enabled: "{{ syncthing_enabled }}"
hubsite_service_syncthing_name: Syncthing
hubsite_service_syncthing_url: "https://{{ syncthing_hostname }}{{ syncthing_path_prefix }}"
hubsite_service_syncthing_logo_location: "{{ role_path }}/assets/syncthing.png"
hubsite_service_syncthing_description: "Sync your files"
hubsite_service_syncthing_priority: 1000
# /role-specific:syncthing

# role-specific:tandoor
# tandoor
hubsite_service_tandoor_enabled: "{{ tandoor_enabled }}"
hubsite_service_tandoor_name: tandoor
hubsite_service_tandoor_url: "{{ tandoor_scheme }}://{{ tandoor_hostname }}{{ tandoor_path_prefix }}"
hubsite_service_tandoor_logo_location: "{{ role_path }}/assets/tandoor.png"
hubsite_service_tandoor_description: "The recipe manager that allows you to manage your ever growing collection of digital recipes."
hubsite_service_tandoor_priority: 1000
# /role-specific:tandoor

# role-specific:uptime_kuma
# Uptime Kuma
hubsite_service_uptime_kuma_enabled: "{{ uptime_kuma_enabled }}"
hubsite_service_uptime_kuma_name: Uptime Kuma
hubsite_service_uptime_kuma_url: "https://{{ uptime_kuma_hostname }}{{ uptime_kuma_path_prefix }}"
hubsite_service_uptime_kuma_logo_location: "{{ role_path }}/assets/uptime-kuma.png"
hubsite_service_uptime_kuma_description: "Check the status of the services"
hubsite_service_uptime_kuma_priority: 1000
# /role-specific:uptime_kuma

# role-specific:vaultwarden
# Vaultwarden
# The vaultwarden service link is deactivated by default for security reasons, see: https://github.com/dani-garcia/vaultwarden/wiki/Hardening-Guide#hiding-under-a-subdir
hubsite_service_vaultwarden_enabled: false
hubsite_service_vaultwarden_name: Vaultwarden
hubsite_service_vaultwarden_url: "https://{{ vaultwarden_hostname }}{{ vaultwarden_path_prefix }}"
hubsite_service_vaultwarden_logo_location: "{{ role_path }}/assets/vaultwarden.png"
hubsite_service_vaultwarden_description: "Securely access your passwords"
hubsite_service_vaultwarden_priority: 1000
# /role-specific:vaultwarden

# role-specific:woodpecker_ci_server
# Woodpecker CI
hubsite_service_woodpecker_ci_enabled: "{{ woodpecker_ci_server_enabled }}"
hubsite_service_woodpecker_ci_name: Woodpecker CI
hubsite_service_woodpecker_ci_url: "{{ woodpecker_ci_server_scheme }}://{{ woodpecker_ci_server_hostname }}"
hubsite_service_woodpecker_ci_logo_location: "{{ role_path }}/assets/woodpecker.png"
hubsite_service_woodpecker_ci_description: "Check you CI"
hubsite_service_woodpecker_ci_priority: 1000
# /role-specific:woodpecker_ci_server

# role-specific:writefreely
# writefreely
hubsite_service_writefreely_enabled: "{{ writefreely_enabled }}"
hubsite_service_writefreely_name: writefreely
hubsite_service_writefreely_url: "https://{{ writefreely_hostname }}"
hubsite_service_writefreely_logo_location: "{{ role_path }}/assets/writefreely.png"
hubsite_service_writefreely_description: "A minimalist web blog"
hubsite_service_writefreely_priority: 1000
# /role-specific:writefreely

# role-specific:yourls
# yourls
hubsite_service_yourls_enabled: "{{ yourls_enabled }}"
hubsite_service_yourls_name: YOURLS
hubsite_service_yourls_url: "{{ yourls_scheme }}://{{ yourls_hostname }}/admin/"  # accessing to the hostname directly returns 403 error
hubsite_service_yourls_logo_location: ""
hubsite_service_yourls_description: "Your Own URL Shortener, on your server"
hubsite_service_yourls_priority: 1000
# /role-specific:yourls

mash_playbook_hubsite_service_list_auto_itemized:
  # Dummy entry, which is not role-specific.
  # Ensures there's at least one entry defined in the list.
  - "{{ omit }}"

  # role-specific:adguard_home
  - |-
    {{
      ({
        'name': hubsite_service_adguard_home_name,
        'url': hubsite_service_adguard_home_url,
        'logo_location': hubsite_service_adguard_home_logo_location,
        'description': hubsite_service_adguard_home_description,
        'priority': hubsite_service_adguard_home_priority,
      } if hubsite_service_adguard_home_enabled else omit)
    }}
  # /role-specific:adguard_home

  # role-specific:anonymousoverflow
  - |-
    {{
      ({
        'name': hubsite_service_anonymousoverflow_name,
        'url': hubsite_service_anonymousoverflow_url,
        'logo_location': hubsite_service_anonymousoverflow_logo_location,
        'description': hubsite_service_anonymousoverflow_description,
        'priority': hubsite_service_anonymousoverflow_priority,
      } if hubsite_service_anonymousoverflow_enabled else omit)
    }}
  # /role-specific:anonymousoverflow

  # role-specific:appsmith
  - |-
    {{
      ({
        'name': hubsite_service_appsmith_name,
        'url': hubsite_service_appsmith_url,
        'logo_location': hubsite_service_appsmith_logo_location,
        'description': hubsite_service_appsmith_description,
        'priority': hubsite_service_appsmith_priority,
      } if hubsite_service_appsmith_enabled else omit)
    }}
  # /role-specific:appsmith

  # role-specific:authentik
  - |-
    {{
      ({
        'name': hubsite_service_authentik_name,
        'url': hubsite_service_authentik_url,
        'logo_location': hubsite_service_authentik_logo_location,
        'description': hubsite_service_authentik_description,
        'priority': hubsite_service_adguard_home_priority,
      } if hubsite_service_authentik_enabled else omit)
    }}
  # /role-specific:authentik

  # role-specific:docker_registry_browser
  - |-
    {{
      ({
        'name': hubsite_service_docker_registry_browser_name,
        'url': hubsite_service_docker_registry_browser_url,
        'logo_location': hubsite_service_docker_registry_browser_logo_location,
        'description': hubsite_service_docker_registry_browser_description,
        'priority': hubsite_service_docker_registry_browser_priority,
      } if hubsite_service_docker_registry_browser_enabled else omit)
    }}
  # /role-specific:docker_registry_browser

  # role-specific:docmost
  - |-
    {{
      ({
        'name': hubsite_service_docmost_name,
        'url': hubsite_service_docmost_url,
        'logo_location': hubsite_service_docmost_logo_location,
        'description': hubsite_service_docmost_description,
        'priority': hubsite_service_docmost_priority,
      } if hubsite_service_docmost_enabled else omit)
    }}
  # /role-specific:docmost

  # role-specific:etherpad
  - |-
    {{
      ({
        'name': hubsite_service_etherpad_name,
        'url': hubsite_service_etherpad_url,
        'logo_location': hubsite_service_etherpad_logo_location,
        'description': hubsite_service_etherpad_description,
        'priority': hubsite_service_etherpad_priority,
      } if hubsite_service_etherpad_enabled else omit)
    }}
  # /role-specific:etherpad

  # role-specific:excalidraw
  - |-
    {{
      ({
        'name': hubsite_service_excalidraw_name,
        'url': hubsite_service_excalidraw_url,
        'logo_location': hubsite_service_excalidraw_logo_location,
        'description': hubsite_service_excalidraw_description,
        'priority': hubsite_service_excalidraw_priority,
      } if hubsite_service_excalidraw_enabled else omit)
    }}
  # /role-specific:excalidraw

  # role-specific:firezone
  - |-
    {{
      ({
        'name': hubsite_service_firezone_name,
        'url': hubsite_service_firezone_url,
        'logo_location': hubsite_service_firezone_logo_location,
        'description': hubsite_service_firezone_description,
        'priority': hubsite_service_firezone_priority,
      } if hubsite_service_firezone_enabled else omit)
    }}
  # /role-specific:firezone

  # role-specific:fmd_server
  - |-
    {{
      ({
        'name': hubsite_service_fmd_server_name,
        'url': hubsite_service_fmd_server_url,
        'logo_location': hubsite_service_fmd_server_logo_location,
        'description': hubsite_service_fmd_server_description,
        'priority': hubsite_service_fmd_server_priority,
      } if hubsite_service_fmd_server_enabled else omit)
    }}
  # /role-specific:fmd_server

  # role-specific:focalboard
  - |-
    {{
      ({
        'name': hubsite_service_focalboard_name,
        'url': hubsite_service_focalboard_url,
        'logo_location': hubsite_service_focalboard_logo_location,
        'description': hubsite_service_focalboard_description,
        'priority': hubsite_service_focalboard_priority,
      } if hubsite_service_focalboard_enabled else omit)
    }}
  # /role-specific:focalboard

  # role-specific:forgejo
  - |-
    {{
      ({
        'name': hubsite_service_forgejo_name,
        'url': hubsite_service_forgejo_url,
        'logo_location': hubsite_service_forgejo_logo_location,
        'description': hubsite_service_forgejo_description,
        'priority': hubsite_service_forgejo_priority,
      } if hubsite_service_forgejo_enabled else omit)
    }}
  # /role-specific:forgejo

  # role-specific:freshrss
  - |-
    {{
      ({
        'name': hubsite_service_freshrss_name,
        'url': hubsite_service_freshrss_url,
        'logo_location': hubsite_service_freshrss_logo_location,
        'description': hubsite_service_freshrss_description,
        'priority': hubsite_service_freshrss_priority,
      } if hubsite_service_freshrss_enabled else omit)
    }}
  # /role-specific:freshrss

  # role-specific:funkwhale
  - |-
    {{
      ({
        'name': hubsite_service_funkwhale_name,
        'url': hubsite_service_funkwhale_url,
        'logo_location': hubsite_service_funkwhale_logo_location,
        'description': hubsite_service_funkwhale_description,
        'priority': hubsite_service_funkwhale_priority,
      } if hubsite_service_funkwhale_enabled else omit)
    }}
  # /role-specific:funkwhale

  # role-specific:gitea
  - |-
    {{
      ({
        'name': hubsite_service_gitea_name,
        'url': hubsite_service_gitea_url,
        'logo_location': hubsite_service_gitea_logo_location,
        'description': hubsite_service_gitea_description,
        'priority': hubsite_service_gitea_priority,
      } if hubsite_service_gitea_enabled else omit)
    }}
  # /role-specific:gitea

  # role-specific:gotosocial
  - |-
    {{
      ({
        'name': hubsite_service_gotosocial_name,
        'url': hubsite_service_gotosocial_url,
        'logo_location': hubsite_service_gotosocial_logo_location,
        'description': hubsite_service_gotosocial_description,
        'priority': hubsite_service_gotosocial_priority,
      } if hubsite_service_gotosocial_enabled else omit)
    }}
  # /role-specific:gotosocial

  # role-specific:grafana
  - |-
    {{
      ({
        'name': hubsite_service_grafana_name,
        'url': hubsite_service_grafana_url,
        'logo_location': hubsite_service_grafana_logo_location,
        'description': hubsite_service_grafana_description,
        'priority': hubsite_service_grafana_priority,
      } if hubsite_service_grafana_enabled else omit)
    }}
  # /role-specific:grafana

  # role-specific:healthchecks
  - |-
    {{
      ({
        'name': hubsite_service_healthchecks_name,
        'url': hubsite_service_healthchecks_url,
        'logo_location': hubsite_service_healthchecks_logo_location,
        'description': hubsite_service_healthchecks_description,
        'priority': hubsite_service_healthchecks_priority,
      } if hubsite_service_healthchecks_enabled else omit)
    }}
  # /role-specific:healthchecks

  # role-specific:ihatemoney
  - |-
    {{
      ({
        'name': hubsite_service_ihatemoney_name,
        'url': hubsite_service_ihatemoney_url,
        'logo_location': hubsite_service_ihatemoney_logo_location,
        'description': hubsite_service_ihatemoney_description,
        'priority': hubsite_service_ihatemoney_priority,
      } if hubsite_service_ihatemoney_enabled else omit)
    }}
  # /role-specific:ihatemoney

  # role-specific:joplin_server
  - |-
    {{
      ({
        'name': hubsite_service_joplin_server_name,
        'url': hubsite_service_joplin_server_url,
        'logo_location': hubsite_service_joplin_server_logo_location,
        'description': hubsite_service_joplin_server_description,
        'priority': hubsite_service_joplin_server_priority,
      } if hubsite_service_joplin_server_enabled else omit)
    }}
  # /role-specific:joplin_server

  # role-specific:keycloak
  - |-
    {{
      ({
        'name': hubsite_service_keycloak_name,
        'url': hubsite_service_keycloak_url,
        'logo_location': hubsite_service_keycloak_logo_location,
        'description': hubsite_service_keycloak_description,
        'priority': hubsite_service_keycloak_priority,
      } if hubsite_service_keycloak_enabled else omit)
    }}
  # /role-specific:keycloak

  # role-specific:labelstudio
  - |-
    {{
      ({
        'name': hubsite_service_labelstudio_name,
        'url': hubsite_service_labelstudio_url,
        'logo_location': hubsite_service_labelstudio_logo_location,
        'description': hubsite_service_labelstudio_description,
        'priority': hubsite_service_labelstudio_priority,
      } if hubsite_service_labelstudio_enabled else omit)
    }}
  # /role-specific:labelstudio

 # role-specific:languagetool
  - |-
    {{
      ({
        'name': hubsite_service_languagetool_name,
        'url': hubsite_service_languagetool_url,
        'logo_location': hubsite_service_languagetool_logo_location,
        'description': hubsite_service_languagetool_description,
        'priority': hubsite_service_languagetool_priority,
      } if hubsite_service_languagetool_enabled else omit)
    }}
  # /role-specific:languagetool

  # role-specific:linkding
  - |-
    {{
      ({
        'name': hubsite_service_linkding_name,
        'url': hubsite_service_linkding_url,
        'logo_location': hubsite_service_linkding_logo_location,
        'description': hubsite_service_linkding_description,
        'priority': hubsite_service_linkding_priority,
      } if hubsite_service_linkding_enabled else omit)
    }}
  # /role-specific:linkding

  # role-specific:miniflux
  - |-
    {{
      ({
        'name': hubsite_service_miniflux_name,
        'url': hubsite_service_miniflux_url,
        'logo_location': hubsite_service_miniflux_logo_location,
        'description': hubsite_service_miniflux_description,
        'priority': hubsite_service_miniflux_priority,
      } if hubsite_service_miniflux_enabled else omit)
    }}
  # /role-specific:miniflux

  # role-specific:n8n
  - |-
    {{
      ({
        'name': hubsite_service_n8n_name,
        'url': hubsite_service_n8n_url,
        'logo_location': hubsite_service_n8n_logo_location,
        'description': hubsite_service_n8n_description,
        'priority': hubsite_service_n8n_priority,
      } if hubsite_service_n8n_enabled else omit)
    }}
  # /role-specific:n8n

  # role-specific:navidrome
  - |-
    {{
      ({
        'name': hubsite_service_navidrome_name,
        'url': hubsite_service_navidrome_url,
        'logo_location': hubsite_service_navidrome_logo_location,
        'description': hubsite_service_navidrome_description,
        'priority': hubsite_service_navidrome_priority,
      } if hubsite_service_navidrome_enabled else omit)
    }}
  # /role-specific:navidrome

  # role-specific:nextcloud
  - |-
    {{
      ({
        'name': hubsite_service_nextcloud_name,
        'url': hubsite_service_nextcloud_url,
        'logo_location': hubsite_service_nextcloud_logo_location,
        'description': hubsite_service_nextcloud_description,
        'priority': hubsite_service_nextcloud_priority,
      } if hubsite_service_nextcloud_enabled else omit)
    }}
  # /role-specific:nextcloud

  # role-specific:ntfy
  - |-
    {{
      ({
        'name': hubsite_service_ntfy_name,
        'url': hubsite_service_ntfy_url,
        'logo_location': hubsite_service_ntfy_logo_location,
        'description': hubsite_service_ntfy_description,
        'priority': hubsite_service_ntfy_priority,
      } if hubsite_service_ntfy_enabled else omit)
    }}
  # /role-specific:ntfy

  # role-specific:owncast
  - |-
    {{
      ({
        'name': hubsite_service_owncast_name,
        'url': hubsite_service_owncast_url,
        'logo_location': hubsite_service_owncast_logo_location,
        'description': hubsite_service_owncast_description,
        'priority': hubsite_service_owncast_priority,
      } if hubsite_service_owncast_enabled else omit)
    }}
  # /role-specific:owncast

  # role-specific:peertube
  - |-
    {{
      ({
        'name': hubsite_service_peertube_name,
        'url': hubsite_service_peertube_url,
        'logo_location': hubsite_service_peertube_logo_location,
        'description': hubsite_service_peertube_description,
        'priority': hubsite_service_peertube_priority,
      } if hubsite_service_peertube_enabled else omit)
    }}
  # /role-specific:peertube

  # role-specific:privatebin
  - |-
    {{
      ({
        'name': hubsite_service_privatebin_name,
        'url': hubsite_service_privatebin_url,
        'logo_location': hubsite_service_privatebin_logo_location,
        'description': hubsite_service_privatebin_description,
        'priority': hubsite_service_privatebin_priority,
      } if hubsite_service_privatebin_enabled else omit)
    }}
  # /role-specific:privatebin

  # role-specific:radicale
  - |-
    {{
      ({
        'name': hubsite_service_radicale_name,
        'url': hubsite_service_radicale_url,
        'logo_location': hubsite_service_radicale_logo_location,
        'description': hubsite_service_radicale_description,
        'priority': hubsite_service_radicale_priority,
      } if hubsite_service_radicale_enabled else omit)
    }}
  # /role-specific:radicale

  # role-specific:redlib
  - |-
    {{
      ({
        'name': hubsite_service_redlib_name,
        'url': hubsite_service_redlib_url,
        'logo_location': hubsite_service_redlib_logo_location,
        'description': hubsite_service_redlib_description,
        'priority': hubsite_service_redlib_priority,
      } if hubsite_service_redlib_enabled else omit)
    }}
  # /role-specific:redlib

  # role-specific:send
  - |-
    {{
      ({
        'name': hubsite_service_send_name,
        'url': hubsite_service_send_url,
        'logo_location': hubsite_service_send_logo_location,
        'description': hubsite_service_send_description,
        'priority': hubsite_service_send_priority,
      } if hubsite_service_send_enabled else omit)
    }}
  # /role-specific:send

  # role-specific:syncthing
  - |-
    {{
      ({
        'name': hubsite_service_syncthing_name,
        'url': hubsite_service_syncthing_url,
        'logo_location': hubsite_service_syncthing_logo_location,
        'description': hubsite_service_syncthing_description,
        'priority': hubsite_service_syncthing_priority
      } if hubsite_service_syncthing_enabled else omit)
    }}
  # /role-specific:syncthing

  # role-specific:tandoor
  - |-
    {{
      ({
        'name': hubsite_service_tandoor_name,
        'url': hubsite_service_tandoor_url,
        'logo_location': hubsite_service_tandoor_logo_location,
        'description': hubsite_service_tandoor_description,
        'priority': hubsite_service_tandoor_priority,
      } if hubsite_service_tandoor_enabled else omit)
    }}
  # /role-specific:tandoor

  # role-specific:uptime_kuma
  - |-
    {{
      ({
        'name': hubsite_service_uptime_kuma_name,
        'url': hubsite_service_uptime_kuma_url,
        'logo_location': hubsite_service_uptime_kuma_logo_location,
        'description': hubsite_service_uptime_kuma_description,
        'priority': hubsite_service_uptime_kuma_priority,
      } if hubsite_service_uptime_kuma_enabled else omit)
    }}
  # /role-specific:uptime_kuma

  # role-specific:vaultwarden
  - |-
    {{
      ({
        'name': hubsite_service_vaultwarden_name,
        'url': hubsite_service_vaultwarden_url,
        'logo_location': hubsite_service_vaultwarden_logo_location,
        'description': hubsite_service_vaultwarden_description,
        'priority': hubsite_service_vaultwarden_priority
      } if hubsite_service_vaultwarden_enabled else omit)
    }}
  # /role-specific:vaultwarden

  # role-specific:woodpecker_ci_server
  - |-
    {{
      ({
        'name': hubsite_service_woodpecker_ci_name,
        'url': hubsite_service_woodpecker_ci_url,
        'logo_location': hubsite_service_woodpecker_ci_logo_location,
        'description': hubsite_service_woodpecker_ci_description,
        'priority': hubsite_service_woodpecker_ci_priority
      } if hubsite_service_woodpecker_ci_enabled else omit)
    }}
  # /role-specific:woodpecker_ci_server

  # role-specific:writefreely
  - |-
    {{
      ({
        'name': hubsite_service_writefreely_name,
        'url': hubsite_service_writefreely_url,
        'logo_location': hubsite_service_writefreely_logo_location,
        'description': hubsite_service_writefreely_description,
        'priority': hubsite_service_writefreely_priority,
      } if hubsite_service_writefreely_enabled else omit)
    }}
  # /role-specific:writefreely

  # role-specific:yourls
  - |-
    {{
      ({
        'name': hubsite_service_yourls_name,
        'url': hubsite_service_yourls_url,
        'logo_location': hubsite_service_yourls_logo_location,
        'description': hubsite_service_yourls_description,
        'priority': hubsite_service_yourls_priority,
      } if hubsite_service_yourls_enabled else omit)
    }}
  # /role-specific:yourls

hubsite_service_list_auto: "{{ mash_playbook_hubsite_service_list_auto_itemized | reject('equalto', omit) }}"

########################################################################
#                                                                      #
# /hubsite                                                             #
#                                                                      #
########################################################################
# /role-specific:hubsite



# role-specific:ihatemoney
########################################################################
#                                                                      #
# ihatemoney                                                           #
#                                                                      #
########################################################################

ihatemoney_enabled: false

ihatemoney_identifier: "{{ mash_playbook_service_identifier_prefix }}ihatemoney"

ihatemoney_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}ihatemoney"

ihatemoney_uid: "{{ mash_playbook_uid }}"
ihatemoney_gid: "{{ mash_playbook_gid }}"

ihatemoney_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and ihatemoney_database_hostname == postgres_connection_hostname else [])
  }}

ihatemoney_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and ihatemoney_email_host == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

ihatemoney_container_additional_networks_auto: |
  {{
    (
      ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and ihatemoney_email_host == exim_relay_identifier | default('mash-exim-relay') and ihatemoney_container_network != exim_relay_container_network) else [])
      +
      ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
      +
      ([postgres_container_network] if postgres_enabled and ihatemoney_database_hostname == postgres_connection_hostname and ihatemoney_container_network != postgres_container_network else [])
    ) | unique
  }}

ihatemoney_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
ihatemoney_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

ihatemoney_environment_variable_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'secret.imoney', rounds=655555) | to_uuid }}"

# role-specific:exim_relay
ihatemoney_email_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
ihatemoney_email_port: "{{ 8025 if exim_relay_enabled else '' }}"
ihatemoney_default_from_email: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:postgres
ihatemoney_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
ihatemoney_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
ihatemoney_database_username: "ihatemoney"
ihatemoney_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.ihatemoney', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
ihatemoney_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
ihatemoney_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /ihatemoney                                                          #
#                                                                      #
########################################################################
# /role-specific:ihatemoney



# role-specific:ilmo
########################################################################
#                                                                      #
# ilmo                                                                 #
#                                                                      #
########################################################################

ilmo_enabled: false

ilmo_identifier: "{{ mash_playbook_service_identifier_prefix }}ilmo"

ilmo_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}ilmo"

ilmo_uid: "{{ mash_playbook_uid }}"
ilmo_gid: "{{ mash_playbook_gid }}"

ilmo_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'secret.ilmo', rounds=655555) | to_uuid }}"

ilmo_systemd_required_services_list: |
  {{
    ([devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled and ilmo_database_host == postgres_connection_hostname else [])
  }}

ilmo_container_additional_networks: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and ilmo_database_host == postgres_connection_hostname and ilmo_container_network != postgres_container_network else [])
  }}

ilmo_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
ilmo_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:postgres
ilmo_database_host: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
ilmo_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
ilmo_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.ilmo', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
ilmo_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
ilmo_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /ilmo                                                                #
#                                                                      #
########################################################################
# /role-specific:ilmo


# role-specific:immich
########################################################################
#                                                                      #
# immich                                                               #
#                                                                      #
########################################################################

immich_enabled: false

immich_identifier: "{{ mash_playbook_service_identifier_prefix }}immich"

immich_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}immich"

immich_uid: "{{ mash_playbook_uid }}"
immich_gid: "{{ mash_playbook_gid }}"

immich_server_systemd_required_services_list_auto: |
 {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and immich_database_hostname == postgres_connection_hostname | default('mash-postgres') else [])
  }}

immich_server_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and immich_smtp_host == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

immich_server_container_additional_networks_auto: |
  {{
    (
      ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
      +
      ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and immich_smtp_host == exim_relay_identifier | default('mash-exim-relay') and immich_server_container_network != exim_relay_container_network | default('mash-exim-relay')) else [])
      +
      ([postgres_container_network] if postgres_enabled and immich_database_hostname == postgres_connection_hostname | default('mash-postgres') and immich_server_container_network != postgres_container_network | default('mash-postgres') else [])
    ) | unique
  }}

immich_server_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
immich_server_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"
immich_server_container_labels_traefik_compression_middleware_enabled: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_enabled }}"
immich_server_container_labels_traefik_compression_middleware_name: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_name if mash_playbook_reverse_proxy_traefik_middleware_compession_enabled else '' }}"

# role-specific:traefik
immich_server_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
immich_server_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

# role-specific:exim_relay
immich_smtp_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:postgres
immich_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
immich_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
immich_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.immich', rounds=655555) | to_uuid }}"
immich_database_sslmode: "{{ 'disable' if (immich_database_hostname == postgres_connection_hostname | default('mash-postgres')) else 'require' }}"
# /role-specific:postgres

########################################################################
#                                                                      #
# /immich                                                              #
#                                                                      #
########################################################################
# /role-specific:immich



# role-specific:immich_kiosk
########################################################################
#                                                                      #
# immich_kiosk                                                         #
#                                                                      #
########################################################################

immich_kiosk_enabled: false

immich_kiosk_identifier: "{{ mash_playbook_service_identifier_prefix }}immich-kiosk"

immich_kiosk_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}immich-kiosk"

immich_kiosk_uid: "{{ mash_playbook_uid }}"
immich_kiosk_gid: "{{ mash_playbook_gid }}"

immich_kiosk_systemd_wanted_services_list_auto: |
  {{
    ([immich_identifier ~ '.service'] if immich_enabled | default(false) else [])
  }}

immich_kiosk_container_additional_networks_auto: |
  {{
    ([immich_server_container_network] if immich_enabled | default(false) and immich_kiosk_container_network != immich_server_container_network else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

# Only enable Traefik labels if a hostname is set (indicating that this will be exposed publicly)
immich_kiosk_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled and immich_kiosk_hostname }}"
immich_kiosk_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:immich
immich_kiosk_environment_variables_kiosk_immich_url: "http://{{ immich_server_identifier }}:{{ immich_server_http_port }}"
immich_kiosk_environment_variables_kiosk_immich_external_url: "{{ immich_scheme }}://{{ immich_hostname }}"
# /role-specific:immich

# role-specific:traefik
immich_kiosk_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
immich_kiosk_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /immich_kiosk                                                        #
#                                                                      #
########################################################################
# /role-specific:immich_kiosk



# role-specific:infisical
########################################################################
#                                                                      #
# infisical                                                            #
#                                                                      #
########################################################################

infisical_enabled: false

infisical_identifier: "{{ mash_playbook_service_identifier_prefix }}infisical"

infisical_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}infisical"

infisical_uid: "{{ mash_playbook_uid }}"
infisical_gid: "{{ mash_playbook_gid }}"

infisical_backend_systemd_required_services_list: |
  {{
    ([devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [])
    +
    ([mongodb_identifier ~ '.service'] if mongodb_enabled and infisical_mongodb_hostname == mongodb_identifier else [])
  }}

infisical_backend_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([mongodb_container_network] if mongodb_enabled and infisical_mongodb_hostname == mongodb_identifier and infisical_backend_container_network != mongodb_container_network else [])
  }}

infisical_backend_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
infisical_backend_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"
infisical_frontend_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
infisical_frontend_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# Intentionally not auto-generating infisical_backend_environment_variable_encryption_key here.
# We prefer it to be explicit as it seems important that it remains stable.

infisical_backend_environment_variable_jwt_signup_secret: "{{ ('%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'inf.jwt.signup', rounds=655555) | to_uuid | replace('-', ''))[0:32] }}"
infisical_backend_environment_variable_jwt_refresh_secret: "{{ ('%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'inf.jwt.r', rounds=655555) | to_uuid | replace('-', ''))[0:32] }}"
infisical_backend_environment_variable_jwt_auth_secret: "{{ ('%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'inf.jwt.a', rounds=655555) | to_uuid | replace('-', ''))[0:32] }}"
infisical_backend_environment_variable_jwt_service_secret: "{{ ('%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'inf.jwt.svc', rounds=655555) | to_uuid | replace('-', ''))[0:32] }}"

infisical_frontend_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

# role-specific:mongodb
infisical_mongodb_hostname: "{{ mongodb_identifier if mongodb_enabled else '' }}"
infisical_mongodb_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'infisical.db', rounds=655555) | to_uuid }}"
infisical_mongodb_auth_source: "{{ infisical_mongodb_db_name }}"
# /role-specific:mongodb

# role-specific:traefik
infisical_backend_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
infisical_backend_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
infisical_frontend_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
infisical_frontend_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /infisical                                                           #
#                                                                      #
########################################################################
# /role-specific:infisical



# role-specific:influxdb
########################################################################
#                                                                      #
# influxdb                                                             #
#                                                                      #
########################################################################

influxdb_enabled: false

influxdb_identifier: "{{ mash_playbook_service_identifier_prefix }}influxdb"

influxdb_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}influxdb"

influxdb_uid: "{{ mash_playbook_uid }}"
influxdb_gid: "{{ mash_playbook_gid }}"

influxdb_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if (influxdb_container_labels_traefik_enabled and mash_playbook_reverse_proxyable_services_additional_network) else [])
  }}

influxdb_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
influxdb_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
influxdb_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
influxdb_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /influxdb                                                            #
#                                                                      #
########################################################################
# /role-specific:influxdb



# role-specific:jackett
########################################################################
#                                                                      #
# jackett                                                              #
#                                                                      #
########################################################################

jackett_enabled: false

jackett_identifier: "{{ mash_playbook_service_identifier_prefix }}jackett"

jackett_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}jackett"

jackett_uid: "{{ mash_playbook_uid }}"
jackett_gid: "{{ mash_playbook_gid }}"

jackett_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

jackett_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
jackett_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
jackett_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
jackett_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /jackett                                                             #
#                                                                      #
########################################################################
# /role-specific:jackett



# role-specific:jellyfin
########################################################################
#                                                                      #
# jellyfin                                                             #
#                                                                      #
########################################################################

jellyfin_enabled: false

jellyfin_identifier: "{{ mash_playbook_service_identifier_prefix }}jellyfin"

jellyfin_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}jellyfin"

jellyfin_uid: "0"
jellyfin_gid: "0"

jellyfin_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

jellyfin_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
jellyfin_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
jellyfin_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
jellyfin_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /jellyfin                                                            #
#                                                                      #
########################################################################
# /role-specific:jellyfin



# role-specific:jellyseerr
########################################################################
#                                                                      #
# jellyseerr                                                           #
#                                                                      #
########################################################################

jellyseerr_enabled: false

jellyseerr_identifier: "{{ mash_playbook_service_identifier_prefix }}jellyseerr"

jellyseerr_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}jellyseerr"

jellyseerr_uid: "{{ mash_playbook_uid }}"
jellyseerr_gid: "{{ mash_playbook_gid }}"


jellyseerr_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

jellyseerr_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
jellyseerr_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
jellyseerr_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
jellyseerr_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /jellyseerr                                                          #
#                                                                      #
########################################################################
# /role-specific:jellyseerr



# role-specific:jitsi
########################################################################
#                                                                      #
# jitsi                                                                #
#                                                                      #
########################################################################

jitsi_enabled: false

jitsi_architecture: "{{ mash_playbook_architecture }}"

jitsi_identifier: "{{ mash_playbook_service_identifier_prefix }}jitsi"

jitsi_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}jitsi"

jitsi_uid: "{{ mash_playbook_uid }}"
jitsi_gid: "{{ mash_playbook_gid }}"

jitsi_user_username: "{{ mash_playbook_user_name }}"

jitsi_web_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

jitsi_prosody_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

jitsi_jvb_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

jitsi_jibri_xmpp_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'jibri', rounds=655555) | to_uuid }}"
jitsi_jicofo_auth_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'jicofo', rounds=655555) | to_uuid }}"
jitsi_jvb_auth_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'jvb', rounds=655555) | to_uuid }}"

jitsi_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
jitsi_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
jitsi_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
jitsi_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /jitsi                                                               #
#                                                                      #
########################################################################
# /role-specific:jitsi



# role-specific:joplin_server
########################################################################
#                                                                      #
# joplin_server                                                        #
#                                                                      #
########################################################################

joplin_server_enabled: false

joplin_server_identifier: "{{ mash_playbook_service_identifier_prefix }}joplin-server"

joplin_server_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}joplin-server"

joplin_server_uid: "{{ mash_playbook_uid }}"
joplin_server_gid: "{{ mash_playbook_gid }}"

joplin_server_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and joplin_server_environment_variable_mailer_host == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

joplin_server_systemd_required_services_list_auto: |
 {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and joplin_server_database_hostname == postgres_connection_hostname else [])
  }}

joplin_server_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and joplin_server_environment_variable_mailer_host == exim_relay_identifier | default('mash-exim-relay') and joplin_server_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and joplin_server_database_hostname == postgres_connection_hostname and joplin_server_container_network != postgres_container_network else [])
  }}

joplin_server_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
joplin_server_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:exim_relay
joplin_server_environment_variable_mailer_enabled: "{{ exim_relay_enabled }}"
joplin_server_environment_variable_mailer_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
joplin_server_environment_variable_mailer_port: 8025
joplin_server_environment_variable_mailer_from: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
joplin_server_environment_variable_mailer_security: MailerSecurity.None
# /role-specific:exim_relay

# role-specific:postgres
joplin_server_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
joplin_server_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
joplin_server_database_username: "{{ joplin_server_identifier }}"
joplin_server_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.joplinserver', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
joplin_server_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
joplin_server_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /joplin_server                                                       #
#                                                                      #
########################################################################
# /role-specific:joplin_server



# role-specific:karakeep
########################################################################
#                                                                      #
# karakeep                                                             #
#                                                                      #
########################################################################

karakeep_enabled: false

karakeep_identifier: "{{ mash_playbook_service_identifier_prefix }}karakeep"

karakeep_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}karakeep"

# Currently root access without read-only option is necessary for Karakeep to work properly.
# See: https://github.com/karakeep-app/karakeep/issues/865
karakeep_uid: "0"
karakeep_gid: "0"

karakeep_systemd_wanted_services_list_auto: |
  {{
    ([browserless_identifier ~ '.service'] if browserless_enabled else [])
    +
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and karakeep_environment_variables_smtp_host == exim_relay_identifier | default('mash-exim-relay')) else [])
    +
    ([meilisearch_identifier ~ '.service'] if meilisearch_enabled | default(false) else [])
  }}

karakeep_container_additional_networks_auto: |
  {{
    ([browserless_container_network] if browserless_enabled | default(false) and karakeep_container_network != browserless_container_network else [])
    +
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and karakeep_environment_variables_smtp_host == exim_relay_identifier | default('mash-exim-relay') and karakeep_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([meilisearch_container_network] if meilisearch_enabled | default(false) and karakeep_container_network != meilisearch_container_network else [])
  }}

karakeep_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
karakeep_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

karakeep_environment_variables_nextauth_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'karakeep.ns', rounds=655555) | to_uuid }}"

# role-specific:browserless
karakeep_environment_variables_browser_websocket_url: "ws://{{ browserless_identifier }}:{{ browserless_container_http_port }}/chromium/playwright"
# /role-specific:browserless

# role-specific:exim_relay
karakeep_mailer_enabled: "{{ exim_relay_enabled }}"
karakeep_environment_variables_smtp_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
karakeep_environment_variables_smtp_port: 8025
karakeep_environment_variables_smtp_from: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:meilisearch
karakeep_environment_variables_meili_addr: "http://{{ meilisearch_identifier }}:{{ meilisearch_container_http_port }}"
karakeep_environment_variables_meili_key: "{{ meilisearch_default_admin_api_key }}"
# /role-specific:meilisearch

# role-specific:traefik
karakeep_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
karakeep_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /karakeep                                                            #
#                                                                      #
########################################################################
# /role-specific:karakeep



# role-specific:keycloak
########################################################################
#                                                                      #
# keycloak                                                             #
#                                                                      #
########################################################################

keycloak_enabled: false

keycloak_identifier: "{{ mash_playbook_service_identifier_prefix }}keycloak"

keycloak_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}keycloak"

keycloak_uid: "{{ mash_playbook_uid }}"
keycloak_gid: "{{ mash_playbook_gid }}"

keycloak_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and keycloak_database_hostname == postgres_connection_hostname else [])
  }}

keycloak_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and keycloak_database_hostname == postgres_connection_hostname and keycloak_container_network != postgres_container_network else [])
  }}

keycloak_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
keycloak_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

keycloak_container_labels_metrics_hostname: "{{ mash_playbook_metrics_exposure_hostname }}"
keycloak_container_labels_metrics_path_prefix: "{{ mash_playbook_metrics_exposure_path_prefix }}/{{ keycloak_identifier }}"
keycloak_container_labels_metrics_middleware_basic_auth_enabled: "{{ mash_playbook_metrics_exposure_http_basic_auth_enabled }}"
keycloak_container_labels_metrics_middleware_basic_auth_users: "{{ mash_playbook_metrics_exposure_http_basic_auth_users }}"

keycloak_environment_variable_kc_metrics_enabled: "{{ prometheus_enabled | default(false) or mash_playbook_metrics_exposure_enabled }}"

# role-specific:postgres
keycloak_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
keycloak_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
keycloak_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.keycloak', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
keycloak_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
keycloak_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /keycloak                                                            #
#                                                                      #
########################################################################
# /role-specific:keycloak



# role-specific:keydb
########################################################################
#                                                                      #
# keydb                                                                #
#                                                                      #
########################################################################

keydb_enabled: false

keydb_identifier: "{{ mash_playbook_service_identifier_prefix }}keydb"

keydb_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}keydb"

keydb_uid: "{{ mash_playbook_uid }}"
keydb_gid: "{{ mash_playbook_gid }}"

keydb_arch: |-
  {{
    ({
      'amd64': 'x86_64',
      'arm32': 'arm32',
      'arm64': 'arm64',
    })[mash_playbook_architecture]
  }}

########################################################################
#                                                                      #
# /keydb                                                               #
#                                                                      #
########################################################################
# /role-specific:keydb


# role-specific:kutt
########################################################################
#                                                                      #
# kutt                                                                 #
#                                                                      #
########################################################################

kutt_enabled: false

kutt_identifier: "{{ mash_playbook_service_identifier_prefix }}kutt"

kutt_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}kutt"

kutt_uid: "{{ mash_playbook_uid }}"
kutt_gid: "{{ mash_playbook_gid }}"

kutt_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and kutt_database_mysql_hostname == mariadb_connection_hostname and kutt_database_type == 'mysql2' else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and kutt_database_postgres_hostname == postgres_connection_hostname and kutt_database_type == 'pg' else [])
  }}

kutt_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and kutt_environment_variables_smtp_host == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

kutt_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and kutt_environment_variables_smtp_host == exim_relay_identifier | default('mash-exim-relay') and kutt_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([mariadb_container_network] if mariadb_enabled | default(false) and kutt_database_mysql_hostname == mariadb_connection_hostname and kutt_container_network != mariadb_container_network and kutt_database_type == 'mysql2' else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and kutt_database_postgres_hostname == postgres_connection_hostname and kutt_container_network != postgres_container_network and kutt_database_type == 'pg' else [])
  }}

kutt_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
kutt_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

kutt_database_type: "{{ 'pg' if postgres_enabled | default(false) else 'better-sqlite3' }}"

kutt_environment_variables_jwt_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'kutt', rounds=655555) | to_uuid }}"

# role-specific:exim_relay
kutt_environment_variables_smtp_enabled: "{{ exim_relay_enabled }}"
kutt_environment_variables_smtp_from: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
kutt_environment_variables_smtp_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
kutt_environment_variables_smtp_port: "{{ 8025 if exim_relay_enabled else '587' }}"
# /role-specific:exim_relay

# role-specific:mariadb
kutt_database_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
kutt_database_mysql_port: "{{ mariadb_connection_port if mariadb_enabled else '3306' }}"
kutt_database_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'kutt.db', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
kutt_database_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
kutt_database_postgres_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
kutt_database_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'kutt.db', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
kutt_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
kutt_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /kutt                                                                #
#                                                                      #
########################################################################
# /role-specific:kutt



# role-specific:labelstudio
########################################################################
#                                                                      #
# labelstudio                                                          #
#                                                                      #
########################################################################

labelstudio_enabled: false

labelstudio_identifier: "{{ mash_playbook_service_identifier_prefix }}labelstudio"

labelstudio_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}labelstudio"

labelstudio_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and labelstudio_database_hostname == postgres_identifier else [])
  }}

labelstudio_uid: "{{ mash_playbook_uid }}"
labelstudio_gid: "{{ mash_playbook_gid }}"

labelstudio_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and labelstudio_database_hostname == postgres_connection_hostname and labelstudio_container_network != postgres_container_network else [])
  }}

labelstudio_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
labelstudio_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"
labelstudio_container_labels_traefik_compression_middleware_enabled: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_enabled }}"
labelstudio_container_labels_traefik_compression_middleware_name: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_name if mash_playbook_reverse_proxy_traefik_middleware_compession_enabled else '' }}"

labelstudio_postgres_backend_enabled: "{{ postgres_enabled }}"

# role-specific:postgres
labelstudio_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
labelstudio_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
labelstudio_database_username: "labelstudio"
labelstudio_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.labelstudio', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
labelstudio_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
labelstudio_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /labelstudio                                                         #
#                                                                      #
########################################################################
# /role-specific:labelstudio



# role-specific:lago
########################################################################
#                                                                      #
# lago                                                                 #
#                                                                      #
########################################################################

lago_enabled: false

lago_architecture: "{{ mash_playbook_architecture }}"

lago_identifier: "{{ mash_playbook_service_identifier_prefix }}lago"

lago_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}lago"

lago_uid: "{{ mash_playbook_uid }}"
lago_gid: "{{ mash_playbook_gid }}"

lago_api_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and lago_database_hostname == postgres_connection_hostname and lago_api_container_network != postgres_container_network else [])
  }}

lago_front_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

lago_api_environment_variable_secret_key_base: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'lago.sec.key', rounds=655555) | to_uuid }}"
lago_api_environment_variable_encryption_primary_key: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'lago.enc.primary', rounds=655555) | to_uuid }}"
lago_api_environment_variable_encryption_deterministic_key: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'lago.deter.key', rounds=655555) | to_uuid }}"
lago_api_environment_variable_encryption_key_derivation_salt: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'lago.deriv.salt', rounds=655555) | to_uuid }}"

lago_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
lago_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:postgres
lago_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
lago_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
lago_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'lago.db', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
lago_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
lago_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /lago                                                                #
#                                                                      #
########################################################################
# /role-specific:lago



# role-specific:languagetool
########################################################################
#                                                                      #
# languagetool                                                         #
#                                                                      #
########################################################################

languagetool_enabled: false

languagetool_identifier: "{{ mash_playbook_service_identifier_prefix }}languagetool"

languagetool_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}languagetool"

languagetool_uid: "{{ mash_playbook_uid }}"
languagetool_gid: "{{ mash_playbook_gid }}"

languagetool_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

languagetool_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
languagetool_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
languagetool_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
languagetool_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /languagetool                                                        #
#                                                                      #
########################################################################
# /role-specific:languagetool



# role-specific:limesurvey
########################################################################
#                                                                      #
# limesurvey                                                           #
#                                                                      #
########################################################################

limesurvey_enabled: false

limesurvey_identifier: "{{ mash_playbook_service_identifier_prefix }}limesurvey"

limesurvey_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}limesurvey"

limesurvey_uid: "{{ mash_playbook_uid }}"
limesurvey_gid: "{{ mash_playbook_gid }}"

limesurvey_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled and limesurvey_database_hostname == mariadb_connection_hostname else [])
  }}

limesurvey_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if exim_relay_enabled | default(false) else [])
  }}

limesurvey_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and limesurvey_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([mariadb_container_network] if mariadb_enabled and limesurvey_database_hostname == mariadb_connection_hostname and limesurvey_container_network != mariadb_container_network else [])
  }}

limesurvey_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
limesurvey_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:mariadb
limesurvey_database_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
limesurvey_database_port: "{{ mariadb_connection_port if mariadb_enabled else '3306' }}"
limesurvey_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'limesurvey.db', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:traefik
limesurvey_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
limesurvey_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /limesurvey                                                          #
#                                                                      #
########################################################################
# /role-specific:limesurvey



# role-specific:linkding
########################################################################
#                                                                      #
# linkding                                                             #
#                                                                      #
########################################################################

linkding_enabled: false

linkding_identifier: "{{ mash_playbook_service_identifier_prefix }}linkding"

linkding_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}linkding"

linkding_uid: "{{ mash_playbook_uid }}"
linkding_gid: "{{ mash_playbook_gid }}"

linkding_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and linkding_database_hostname == postgres_connection_hostname else [])
  }}

linkding_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and linkding_database_hostname == postgres_connection_hostname and linkding_container_network != postgres_container_network else [])
  }}

linkding_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
linkding_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

linkding_database_type: "{{ 'postgres' if postgres_enabled else 'sqlite' }}"

# role-specific:postgres
linkding_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
linkding_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
linkding_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'linkding.db', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
linkding_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
linkding_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /linkding                                                            #
#                                                                      #
########################################################################
# /role-specific:linkding



# role-specific:linkwarden
########################################################################
#                                                                      #
# linkwarden                                                           #
#                                                                      #
########################################################################

linkwarden_enabled: false

linkwarden_identifier: "{{ mash_playbook_service_identifier_prefix }}linkwarden"

linkwarden_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}linkwarden"

# Currently root access without read-only option is necessary for Linkwarden to work properly.
# See: https://github.com/linkwarden/linkwarden/issues/799
linkwarden_uid: "0"
linkwarden_gid: "0"

linkwarden_systemd_required_services_list_auto: |
  {{
    ([meilisearch_identifier ~ '.service'] if meilisearch_enabled | default(false) else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled and linkwarden_database_hostname == postgres_connection_hostname else [])
  }}

linkwarden_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([meilisearch_container_network] if meilisearch_enabled | default(false) and linkwarden_container_network != meilisearch_container_network else [])
    +
    ([postgres_container_network] if postgres_enabled and linkwarden_database_hostname == postgres_connection_hostname and linkwarden_container_network != postgres_container_network else [])
  }}

linkwarden_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
linkwarden_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

linkwarden_environment_variables_nextauth_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'linkwarden.na', rounds=655555) | to_uuid }}"

# role-specific:meilisearch
linkwarden_environment_variables_meili_host: "http://{{ meilisearch_identifier }}:{{ meilisearch_container_http_port }}"
linkwarden_environment_variables_meili_key: "{{ meilisearch_default_admin_api_key }}"
# /role-specific:meilisearch

# role-specific:postgres
linkwarden_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
linkwarden_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
linkwarden_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'linkwarden.db', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
linkwarden_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
linkwarden_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /linkwarden                                                          #
#                                                                      #
########################################################################
# /role-specific:linkwarden



# role-specific:listmonk
########################################################################
#                                                                      #
# listmonk                                                             #
#                                                                      #
########################################################################

listmonk_enabled: false

listmonk_identifier: "{{ mash_playbook_service_identifier_prefix }}listmonk"

listmonk_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}listmonk"

listmonk_uid: "{{ mash_playbook_uid }}"
listmonk_gid: "{{ mash_playbook_gid }}"

listmonk_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and listmonk_database_hostname == postgres_connection_hostname else [])
  }}

listmonk_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and listmonk_database_hostname == postgres_connection_hostname and listmonk_container_network != postgres_container_network else [])
  }}

listmonk_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
listmonk_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:postgres
listmonk_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
listmonk_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
listmonk_database_username: "{{ listmonk_identifier }}"
listmonk_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.listmonk', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
listmonk_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
listmonk_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /listmonk                                                            #
#                                                                      #
########################################################################
# /role-specific:listmonk



# role-specific:lldap
########################################################################
#                                                                      #
# lldap                                                                #
#                                                                      #
########################################################################

lldap_enabled: false

lldap_identifier: "{{ mash_playbook_service_identifier_prefix }}lldap"

lldap_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}lldap"

lldap_uid: "{{ mash_playbook_uid }}"
lldap_gid: "{{ mash_playbook_gid }}"

lldap_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and lldap_database_mysql_hostname == mariadb_connection_hostname and lldap_database_type == 'mysql' else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and lldap_database_postgres_hostname == postgres_connection_hostname and lldap_database_type == 'postgres' else [])
  }}

lldap_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and lldap_environment_variables_smtp_host == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

lldap_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and lldap_environment_variables_smtp_host == exim_relay_identifier | default('mash-exim-relay') and lldap_container_network != exim_relay_container_network) else [])
    +
    ([mariadb_container_network] if mariadb_enabled | default(false) and lldap_database_mysql_hostname == mariadb_connection_hostname and lldap_container_network != mariadb_container_network and lldap_database_type == 'mysql' else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and lldap_database_postgres_hostname == postgres_connection_hostname and lldap_container_network != postgres_container_network and lldap_database_type == 'postgres' else [])
  }}

lldap_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
lldap_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

lldap_database_type: "{{ 'postgres' if postgres_enabled | default(false) else 'sqlite' }}"

lldap_environment_variables_lldap_jwt_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'lldap.jwt', rounds=655555) | to_uuid }}"
lldap_environment_variables_lldap_key_seed: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'lldap.key', rounds=655555) | to_uuid }}"

# role-specific:exim_relay
lldap_environment_variables_smtp_enabled: "{{ exim_relay_enabled }}"
lldap_environment_variables_smtp_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
lldap_environment_variables_smtp_port: "{{ 8025 if exim_relay_enabled else '587' }}"
lldap_environment_variables_smtp_from: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:mariadb
lldap_database_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
lldap_database_mysql_port: "{{ mariadb_connection_port if mariadb_enabled else '3306' }}"
lldap_database_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'lldap.db', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
lldap_database_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
lldap_database_postgres_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
lldap_database_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'lldap.db', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
lldap_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
lldap_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /lldap                                                               #
#                                                                      #
########################################################################
# /role-specific:lldap



# role-specific:loki
########################################################################
#                                                                      #
# loki                                                                 #
#                                                                      #
########################################################################

loki_enabled: false

loki_identifier: "{{ mash_playbook_service_identifier_prefix }}loki"

loki_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}loki"

loki_uid: "{{ mash_playbook_uid }}"
loki_gid: "{{ mash_playbook_gid }}"

loki_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

# Only enable Traefik labels if a hostname is set (indicating that this will be exposed publicly)
loki_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled and loki_hostname | length > 0 }}"
loki_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
loki_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
loki_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /loki                                                                #
#                                                                      #
########################################################################
# /role-specific:loki



# role-specific:mariadb
########################################################################
#                                                                      #
# mariadb                                                              #
#                                                                      #
########################################################################

mariadb_enabled: false

mariadb_identifier: "{{ mash_playbook_service_identifier_prefix }}mariadb"

mariadb_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}mariadb"

mariadb_uid: "{{ mash_playbook_uid }}"
mariadb_gid: "{{ mash_playbook_gid }}"

mash_playbook_mariadb_managed_databases_auto_itemized:
  # Dummy entry, which is not role-specific.
  # Ensures there's at least one entry defined in the list.
  - "{{ omit }}"

  # role-specific:authelia
  - |-
    {{
      ({
        'name': authelia_config_storage_mysql_database,
        'username': authelia_config_storage_mysql_username,
        'password': authelia_config_storage_mysql_password,
      } if authelia_enabled and authelia_config_storage_mysql_hostname == mariadb_connection_hostname else omit)
    }}
  # /role-specific:authelia

  # role-specific:etherpad
  - |-
    {{
      ({
        'name': etherpad_database_name,
        'username': etherpad_database_mysql_username,
        'password': etherpad_database_mysql_password,
      } if etherpad_enabled and etherpad_database_mysql_hostname == mariadb_connection_hostname and etherpad_database_type == 'mysql' else omit)
    }}
  # /role-specific:etherpad

  # role-specific:forgejo
  - |-
    {{
      ({
        'name': forgejo_database_name,
        'username': forgejo_database_mysql_username,
        'password': forgejo_database_mysql_password,
      } if forgejo_enabled and forgejo_database_mysql_hostname == mariadb_connection_hostname and forgejo_database_type == 'mysql' else omit)
    }}
  # /role-specific:forgejo

  # role-specific:freshrss
  - |-
    {{
      ({
        'name': freshrss_database_name,
        'username': freshrss_database_mysql_username,
        'password': freshrss_database_mysql_password,
      } if freshrss_enabled and freshrss_database_mysql_hostname == mariadb_connection_hostname and freshrss_database_type == 'mysql' else omit)
    }}
  # /role-specific:freshrss

  # role-specific:gotify
  - |-
    {{
      ({
        'name': gotify_database_name,
        'username': gotify_database_mysql_username,
        'password': gotify_database_mysql_password,
      } if gotify_enabled and gotify_database_mysql_hostname == mariadb_connection_hostname and gotify_database_type == 'mysql' else omit)
    }}
  # /role-specific:gotify

  # role-specific:healthchecks
  - |-
    {{
      ({
        'name': healthchecks_database_name,
        'username': healthchecks_database_mysql_username,
        'password': healthchecks_database_mysql_password,
      } if healthchecks_enabled and healthchecks_database_mysql_hostname == mariadb_connection_hostname and healthchecks_database_type == 'mysql' else omit)
    }}
  # /role-specific:healthchecks

  # role-specific:kutt
  - |-
    {{
      ({
        'name': kutt_database_name,
        'username': kutt_database_mysql_username,
        'password': kutt_database_mysql_password,
      } if kutt_enabled and kutt_database_mysql_hostname == mariadb_connection_hostname and kutt_database_type == 'mysql2' else omit)
    }}
  # /role-specific:kutt

  # role-specific:limesurvey
  - |-
    {{
      ({
        'name': limesurvey_database_name,
        'username': limesurvey_database_username,
        'password': limesurvey_database_password,
      } if limesurvey_enabled and limesurvey_database_hostname == mariadb_connection_hostname else omit)
    }}
  # /role-specific:limesurvey

  # role-specific:lldap
  - |-
    {{
      ({
        'name': lldap_database_name,
        'username': lldap_database_mysql_username,
        'password': lldap_database_mysql_password,
      } if lldap_enabled and lldap_database_mysql_hostname == mariadb_connection_hostname and lldap_database_type == 'mysql' else omit)
    }}
  # /role-specific:lldap

  # role-specific:matomo
  - |-
    {{
      ({
        'name': matomo_config_database_name,
        'username': matomo_config_database_username,
        'password': matomo_config_database_password,
      } if matomo_enabled and matomo_config_database_hostname == mariadb_connection_hostname else omit)
    }}
  # /role-specific:matomo

  # role-specific:mediawiki
  - |-
    {{
      ({
        'name': mediawiki_database_name,
        'username': mediawiki_database_mysql_username,
        'password': mediawiki_database_mysql_password,
      } if mediawiki_enabled and mediawiki_database_mysql_hostname == mariadb_connection_hostname and mediawiki_database_type == 'mysql' else omit)
    }}
  # /role-specific:mediawiki

  # role-specific:nextcloud
  - |-
    {{
      ({
        'name': nextcloud_database_name,
        'username': nextcloud_database_mysql_username,
        'password': nextcloud_database_mysql_password,
      } if nextcloud_enabled and nextcloud_database_mysql_hostname == mariadb_connection_hostname and nextcloud_database_type == 'mysql' else omit)
    }}
  # /role-specific:nextcloud

  # role-specific:onlyoffice_docs
  - |-
    {{
      ({
        'name': onlyoffice_docs_database_name,
        'username': onlyoffice_docs_database_mariadb_username,
        'password': onlyoffice_docs_database_mariadb_password,
      } if onlyoffice_docs_enabled and onlyoffice_docs_database_mariadb_hostname == mariadb_connection_hostname and onlyoffice_docs_database_type == 'mariadb' else omit)
    }}
  # /role-specific:onlyoffice_docs

  # role-specific:opengist
  - |-
    {{
      ({
        'name': opengist_database_name,
        'username': opengist_database_mysql_username,
        'password': opengist_database_mysql_password,
      } if opengist_enabled and opengist_database_mysql_hostname == mariadb_connection_hostname and opengist_database_type == 'mysql' else omit)
    }}
  # /role-specific:opengist

  # role-specific:paperless
  - |-
    {{
      ({
        'name': paperless_database_name,
        'username': paperless_database_mariadb_username,
        'password': paperless_database_mariadb_password,
      } if paperless_enabled and paperless_database_mariadb_hostname == mariadb_connection_hostname and paperless_database_type == 'mariadb' else omit)
    }}
  # /role-specific:paperless

  # role-specific:privatebin
  - |-
    {{
      ({
        'name': privatebin_database_name,
        'username': privatebin_database_mysql_username,
        'password': privatebin_database_mysql_password,
      } if privatebin_enabled and privatebin_database_mysql_hostname == mariadb_connection_hostname and privatebin_config_model == 'MySQL' else omit)
    }}
  # /role-specific:privatebin

  # role-specific:semaphore
  - |-
    {{
      ({
        'name': semaphore_database_name,
        'username': semaphore_database_mysql_username,
        'password': semaphore_database_mysql_password,
      } if semaphore_enabled and semaphore_database_mysql_hostname == mariadb_connection_hostname and semaphore_database_type == 'mysql' else omit)
    }}
  # /role-specific:semaphore

  # role-specific:sftpgo
  - |-
    {{
      ({
        'name': sftpgo_database_mysql_name,
        'username': sftpgo_database_mysql_username,
        'password': sftpgo_database_mysql_password,
      } if sftpgo_enabled and sftpgo_database_mysql_hostname == mariadb_connection_hostname and sftpgo_environment_variables_data_provider_driver == 'mysql' else omit)
    }}
  # /role-specific:sftpgo

  # role-specific:syncstorage_rs_docker
  - |-
    {{
      ({
        'name': syncstorage_rs_docker_database_name_syncstorage,
        'username': syncstorage_rs_docker_database_mysql_username,
        'password': syncstorage_rs_docker_database_mysql_password,
      } if syncstorage_rs_docker_enabled and syncstorage_rs_docker_database_mysql_hostname == mariadb_connection_hostname else omit)
    }}

  - |-
    {{
      ({
        'name': syncstorage_rs_docker_database_name_tokenserver,
        'username': syncstorage_rs_docker_database_mysql_username,
        'password': syncstorage_rs_docker_database_mysql_password,
      } if syncstorage_rs_docker_enabled and syncstorage_rs_docker_database_mysql_hostname == mariadb_connection_hostname else omit)
    }}
  # /role-specific:syncstorage_rs_docker

  # role-specific:vaultwarden
  - |-
    {{
      ({
        'name': vaultwarden_database_name,
        'username': vaultwarden_database_mysql_username,
        'password': vaultwarden_database_mysql_password,
      } if vaultwarden_enabled and vaultwarden_database_mysql_hostname == mariadb_connection_hostname and vaultwarden_database_type == 'mysql' else omit)
    }}
  # /role-specific:vaultwarden

  # role-specific:vikunja
  - |-
    {{
      ({
        'name': vikunja_database_name,
        'username': vikunja_database_mysql_username,
        'password': vikunja_database_mysql_password,
      } if vikunja_enabled and vikunja_database_mysql_hostname == mariadb_connection_hostname and vikunja_database_type == 'mysql' else omit)
    }}
  # /role-specific:vikunja

  # role-specific:woodpecker_ci_server
  - |-
    {{
      ({
        'name': woodpecker_ci_server_database_name,
        'username': woodpecker_ci_server_database_mysql_username,
        'password': woodpecker_ci_server_database_mysql_password,
      } if woodpecker_ci_server_enabled and woodpecker_ci_server_database_mysql_hostname == mariadb_connection_hostname and woodpecker_ci_server_database_type == 'mysql' else omit)
    }}
  # /role-specific:woodpecker_ci_server

  # role-specific:wordpress
  - |-
    {{
      ({
        'name': wordpress_database_name,
        'username': wordpress_database_username,
        'password': wordpress_database_password,
      } if wordpress_enabled and wordpress_database_hostname == mariadb_connection_hostname else omit)
    }}
  # /role-specific:wordpress

  # role-specific:yourls
  - |-
    {{
      ({
        'name': yourls_database_name,
        'username': yourls_database_username,
        'password': yourls_database_password,
      } if yourls_enabled and yourls_database_hostname == mariadb_connection_hostname else omit)
    }}
  # /role-specific:yourls

mariadb_managed_databases_auto: "{{ mash_playbook_mariadb_managed_databases_auto_itemized | reject('equalto', omit) }}"

########################################################################
#                                                                      #
# /mariadb                                                             #
#                                                                      #
########################################################################
# /role-specific:mariadb



# role-specific:matomo
########################################################################
#                                                                      #
# matomo                                                               #
#                                                                      #
########################################################################

matomo_enabled: false

matomo_identifier: "{{ mash_playbook_service_identifier_prefix }}matomo"

matomo_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}matomo"

matomo_uid: "{{ mash_playbook_uid }}"
matomo_gid: "{{ mash_playbook_gid }}"

matomo_systemd_required_systemd_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled and matomo_config_database_hostname == mariadb_connection_hostname else [])
  }}

matomo_container_additional_networks_auto: |
  {{
    ([mariadb_container_network] if mariadb_enabled and matomo_config_database_hostname == mariadb_connection_hostname and matomo_container_network != mariadb_container_network else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

matomo_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
matomo_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"
matomo_container_labels_traefik_compression_middleware_enabled: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_enabled }}"
matomo_container_labels_traefik_compression_middleware_name: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_name if mash_playbook_reverse_proxy_traefik_middleware_compession_enabled else '' }}"

# role-specific:mariadb
matomo_config_database_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
matomo_config_database_port: "{{ mariadb_connection_port if mariadb_enabled | default(false) else '3306' }}"
matomo_config_database_username: "matomo"
matomo_config_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.matomo', rounds=655555) | to_uuid }}"
matomo_config_database_adapter: "mysql"
matomo_config_database_tables_prefix: "matomo_"
# /role-specific:mariadb

# role-specific:traefik
matomo_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
matomo_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /matomo                                                              #
#                                                                      #
########################################################################
# /role-specific:matomo



# role-specific:matterbridge
########################################################################
#                                                                      #
# matterbridge                                                         #
#                                                                      #
########################################################################

matterbridge_enabled: false

matterbridge_identifier: "{{ mash_playbook_service_identifier_prefix }}matterbridge"

matterbridge_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}matterbridge"

matterbridge_uid: "{{ mash_playbook_uid }}"
matterbridge_gid: "{{ mash_playbook_gid }}"

########################################################################
#                                                                      #
# /matterbridge                                                        #
#                                                                      #
########################################################################
# /role-specific:matterbridge



# role-specific:mediawiki
########################################################################
#                                                                      #
# mediawiki                                                            #
#                                                                      #
########################################################################

mediawiki_enabled: false

mediawiki_identifier: "{{ mash_playbook_service_identifier_prefix }}mediawiki"

mediawiki_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}mediawiki"

mediawiki_uid: "{{ mash_playbook_uid }}"
mediawiki_gid: "{{ mash_playbook_gid }}"

mediawiki_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and mediawiki_database_mysql_hostname == mariadb_connection_hostname and mediawiki_database_type == 'mysql' else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and mediawiki_database_postgres_hostname == postgres_connection_hostname and mediawiki_database_type == 'postgres' else [])
  }}

mediawiki_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if exim_relay_enabled | default(false) else [])
  }}

mediawiki_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and mediawiki_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([mariadb_container_network] if mariadb_enabled | default(false) and mediawiki_database_mysql_hostname == mariadb_connection_hostname and mediawiki_container_network != mariadb_container_network and mediawiki_database_type == 'mysql' else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and mediawiki_database_postgres_hostname == postgres_connection_hostname and mediawiki_container_network != postgres_container_network and mediawiki_database_type == 'postgres' else [])
  }}

mediawiki_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
mediawiki_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:mariadb
mediawiki_database_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
mediawiki_database_mysql_port: "{{ mariadb_connection_port if mariadb_enabled else '3306' }}"
mediawiki_database_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.mediawiki', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
mediawiki_database_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
mediawiki_database_postgres_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
mediawiki_database_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.mediawiki', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
mediawiki_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
mediawiki_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /mediawiki                                                           #
#                                                                      #
########################################################################
# /role-specific:mediawiki



# role-specific:meilisearch
########################################################################
#                                                                      #
# meilisearch                                                          #
#                                                                      #
########################################################################

meilisearch_enabled: false

meilisearch_identifier: "{{ mash_playbook_service_identifier_prefix }}meilisearch"

meilisearch_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}meilisearch"

meilisearch_uid: "{{ mash_playbook_uid }}"
meilisearch_gid: "{{ mash_playbook_gid }}"

meilisearch_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

# Only enable Traefik labels if a hostname is set (indicating that this will be exposed publicly)
meilisearch_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled and meilisearch_hostname | length > 0 }}"
meilisearch_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

meilisearch_environment_variables_master_key: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'meilisearch.k', rounds=655555) | to_uuid }}"

# role-specific:traefik
meilisearch_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
meilisearch_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /meilisearch                                                         #
#                                                                      #
########################################################################
# /role-specific:meilisearch



# role-specific:minecraft
########################################################################
#                                                                      #
# minecraft                                                            #
#                                                                      #
########################################################################

minecraft_enabled: false

minecraft_identifier: "{{ mash_playbook_service_identifier_prefix }}minecraft"

minecraft_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}minecraft"

minecraft_uid: "{{ mash_playbook_uid }}"
minecraft_gid: "{{ mash_playbook_gid }}"

########################################################################
#                                                                      #
# /minecraft                                                           #
#                                                                      #
########################################################################
# /role-specific:minecraft



# role-specific:miniflux
########################################################################
#                                                                      #
# miniflux                                                             #
#                                                                      #
########################################################################

miniflux_enabled: false

miniflux_identifier: "{{ mash_playbook_service_identifier_prefix }}miniflux"

miniflux_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}miniflux"

miniflux_uid: "{{ mash_playbook_uid }}"
miniflux_gid: "{{ mash_playbook_gid }}"

miniflux_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and miniflux_database_hostname == postgres_connection_hostname else [])
  }}

miniflux_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and miniflux_database_hostname == postgres_connection_hostname and miniflux_container_network != postgres_container_network else [])
  }}

miniflux_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
miniflux_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"
miniflux_container_labels_traefik_compression_middleware_enabled: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_enabled }}"
miniflux_container_labels_traefik_compression_middleware_name: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_name if mash_playbook_reverse_proxy_traefik_middleware_compession_enabled else '' }}"

# role-specific:postgres
miniflux_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
miniflux_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
miniflux_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'miniflux.db', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
miniflux_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
miniflux_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /miniflux                                                            #
#                                                                      #
########################################################################
# /role-specific:miniflux



# role-specific:misskey
########################################################################
#                                                                      #
# misskey                                                              #
#                                                                      #
########################################################################

misskey_enabled: false

misskey_identifier: "{{ mash_playbook_service_identifier_prefix }}misskey"

misskey_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}misskey"

misskey_uid: "{{ mash_playbook_uid }}"
misskey_gid: "{{ mash_playbook_gid }}"

misskey_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and misskey_database_hostname == postgres_connection_hostname else [])
  }}

misskey_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if exim_relay_enabled | default(false) else [])
  }}

misskey_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if exim_relay_enabled | default(false) and misskey_container_network != exim_relay_container_network else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and misskey_database_hostname == postgres_connection_hostname and misskey_container_network != postgres_container_network else [])
  }}

misskey_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
misskey_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:postgres
misskey_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
misskey_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
misskey_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'misskey.db', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
misskey_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
misskey_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /misskey                                                             #
#                                                                      #
########################################################################
# /role-specific:misskey



# role-specific:mobilizon
########################################################################
#                                                                      #
# mobilizon                                                            #
#                                                                      #
########################################################################

mobilizon_enabled: false

mobilizon_identifier: "{{ mash_playbook_service_identifier_prefix }}mobilizon"

mobilizon_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}mobilizon"

mobilizon_uid: "{{ mash_playbook_uid }}"
mobilizon_gid: "{{ mash_playbook_gid }}"

mobilizon_secret_key: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'sk.mobilizon', rounds=655555) | to_uuid }}"
mobilizon_secret_key_base: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'skb.mobilizon', rounds=655555) | to_uuid }}"

mobilizon_systemd_required_services_list: |
  {{
    ([devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [])
    +
    ([postgis_identifier ~ '.service'] if postgis_enabled and mobilizon_database_hostname == postgis_identifier else [])
  }}

mobilizon_container_additional_networks: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgis_container_network] if postgis_enabled and mobilizon_database_hostname == postgis_identifier and mobilizon_container_network != postgis_container_network else [])
  }}

mobilizon_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
mobilizon_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:postgis
mobilizon_database_hostname: "{{ postgis_identifier if postgis_enabled else '' }}"
mobilizon_database_port: "{{ '5432' if postgis_enabled else '' }}"
mobilizon_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.mobilizon', rounds=655555) | to_uuid }}"
# /role-specific:postgis

# role-specific:traefik
mobilizon_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
mobilizon_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /mobilizon                                                           #
#                                                                      #
########################################################################
# /role-specific:mobilizon



# role-specific:mongodb
########################################################################
#                                                                      #
# mongodb                                                              #
#                                                                      #
########################################################################

mongodb_enabled: false

mongodb_identifier: "{{ mash_playbook_service_identifier_prefix }}mongodb"

mongodb_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}mongodb"

mongodb_uid: "{{ mash_playbook_uid }}"
mongodb_gid: "{{ mash_playbook_gid }}"

mash_playbook_mongodb_managed_databases_auto_itemized:
  # Dummy entry, which is not role-specific.
  # Ensures there's at least one entry defined in the list.
  - "{{ omit }}"

  # role-specific:infisical
  - |-
    {{
      ({
        'name': infisical_mongodb_db_name,
        'username': infisical_mongodb_username,
        'password': infisical_mongodb_password,
      } if infisical_enabled and infisical_mongodb_hostname == mongodb_identifier else omit)
    }}
  # /role-specific:infisical

mongodb_managed_databases_auto: "{{ mash_playbook_mongodb_managed_databases_auto_itemized | reject('equalto', omit) }}"

########################################################################
#                                                                      #
# /mongodb                                                             #
#                                                                      #
########################################################################
# /role-specific:mongodb



# role-specific:mosquitto
########################################################################
#                                                                      #
# mosquitto                                                            #
#                                                                      #
########################################################################

mosquitto_enabled: false

mosquitto_identifier: "{{ mash_playbook_service_identifier_prefix }}mosquitto"

mosquitto_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}mosquitto"

mosquitto_uid: "{{ mash_playbook_uid }}"
mosquitto_gid: "{{ mash_playbook_gid }}"

########################################################################
#                                                                      #
# /mosquitto                                                           #
#                                                                      #
########################################################################
# /role-specific:mosquitto



# role-specific:mozhi
########################################################################
#                                                                      #
# mozhi                                                                #
#                                                                      #
########################################################################

mozhi_enabled: false

mozhi_identifier: "{{ mash_playbook_service_identifier_prefix }}mozhi"

mozhi_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}mozhi"

mozhi_uid: "{{ mash_playbook_uid }}"
mozhi_gid: "{{ mash_playbook_gid }}"

mozhi_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

mozhi_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
mozhi_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
mozhi_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
mozhi_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /mozhi                                                               #
#                                                                      #
########################################################################
# /role-specific:mozhi



# role-specific:mrs
########################################################################
#                                                                      #
# mrs                                                                  #
#                                                                      #
########################################################################

mrs_enabled: false

mrs_identifier: "{{ mash_playbook_service_identifier_prefix }}mrs"

mrs_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}mrs"

mrs_uid: "{{ mash_playbook_uid }}"
mrs_gid: "{{ mash_playbook_gid }}"

mrs_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

mrs_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
mrs_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
mrs_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
mrs_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /mrs                                                                 #
#                                                                      #
########################################################################
# /role-specific:mrs



# role-specific:n8n
########################################################################
#                                                                      #
# n8n                                                                  #
#                                                                      #
########################################################################

n8n_enabled: false

n8n_identifier: "{{ mash_playbook_service_identifier_prefix }}n8n"

n8n_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}n8n"

# Please see the note attached to this comment on why we can't use mash's playbook uid and gid
# https://github.com/kinduff/ansible-docker-n8n/blob/v1.4.2/defaults/main.yml
n8n_uid: "1000"
n8n_gid: "1000"

n8n_systemd_required_services_list: |
  {{
    ([devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled and n8n_database_hostname == postgres_connection_hostname else [])
  }}

n8n_container_additional_networks: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and n8n_database_hostname == postgres_connection_hostname and n8n_container_network != postgres_container_network else [])
  }}

n8n_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
n8n_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:postgres
n8n_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
n8n_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
n8n_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'n8n.db', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
n8n_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
n8n_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /n8n                                                                 #
#                                                                      #
########################################################################
# /role-specific:n8n



# role-specific:navidrome
########################################################################
#                                                                      #
# navidrome                                                            #
#                                                                      #
########################################################################

navidrome_enabled: false

navidrome_identifier: "{{ mash_playbook_service_identifier_prefix }}navidrome"

navidrome_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}navidrome"

navidrome_uid: "{{ mash_playbook_uid }}"
navidrome_gid: "{{ mash_playbook_gid }}"

navidrome_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

navidrome_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
navidrome_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"
navidrome_container_labels_traefik_compression_middleware_enabled: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_enabled }}"
navidrome_container_labels_traefik_compression_middleware_name: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_name if mash_playbook_reverse_proxy_traefik_middleware_compession_enabled else '' }}"

# role-specific:traefik
navidrome_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
navidrome_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /navidrome                                                           #
#                                                                      #
########################################################################
# /role-specific:navidrome



# role-specific:neko
########################################################################
#                                                                      #
# neko                                                                 #
#                                                                      #
########################################################################

neko_enabled: false

neko_identifier: "{{ mash_playbook_service_identifier_prefix }}neko"

neko_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}neko"

neko_uid: "{{ mash_playbook_uid }}"
neko_gid: "{{ mash_playbook_gid }}"

neko_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

neko_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
neko_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
neko_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
neko_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /neko                                                                #
#                                                                      #
########################################################################
# /role-specific:neko



# role-specific:netbox
########################################################################
#                                                                      #
# netbox                                                               #
#                                                                      #
########################################################################

netbox_enabled: false

netbox_identifier: "{{ mash_playbook_service_identifier_prefix }}netbox"

netbox_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}netbox"

netbox_uid: "{{ mash_playbook_uid }}"
netbox_gid: "{{ mash_playbook_gid }}"

netbox_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and netbox_database_hostname == postgres_connection_hostname else [])
  }}

netbox_container_additional_networks_auto: |
  {{
    (
      ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
      +
      ([postgres_container_network] if postgres_enabled and netbox_database_hostname == postgres_connection_hostname and netbox_container_network != postgres_container_network else [])
    ) | unique
  }}

netbox_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
netbox_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:postgres
netbox_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
netbox_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
netbox_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.netbox', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
netbox_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
netbox_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /netbox                                                              #
#                                                                      #
########################################################################
# /role-specific:netbox



# role-specific:nextcloud
########################################################################
#                                                                      #
# nextcloud                                                            #
#                                                                      #
########################################################################

nextcloud_enabled: false

nextcloud_identifier: "{{ mash_playbook_service_identifier_prefix }}nextcloud"

nextcloud_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}nextcloud"

nextcloud_uid: "{{ mash_playbook_uid }}"
nextcloud_gid: "{{ mash_playbook_gid }}"

nextcloud_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and nextcloud_database_mysql_hostname == mariadb_connection_hostname and nextcloud_database_type == 'mysql' else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and nextcloud_database_postgres_hostname == postgres_connection_hostname and nextcloud_database_type == 'postgres' else [])
  }}

nextcloud_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and nextcloud_environment_variables_smtp_host == exim_relay_identifier | default('mash-exim-relay')) else [])
    +
    ([lldap_identifier ~ '.service'] if lldap_enabled | default(false) and nextcloud_lldap_enabled else [])
  }}

nextcloud_container_additional_networks_auto: |
  {{
    (
      ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and nextcloud_environment_variables_smtp_host == exim_relay_identifier | default('mash-exim-relay') and nextcloud_container_network != exim_relay_container_network) else [])
      +
      ([lldap_container_network] if lldap_enabled | default(false) and nextcloud_container_network != lldap_container_network and nextcloud_lldap_enabled else [])
      +
      ([mariadb_container_network] if mariadb_enabled | default(false) and nextcloud_database_mysql_hostname == mariadb_connection_hostname and nextcloud_container_network != mariadb_container_network and nextcloud_database_type == 'mysql' else [])
      +
      ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
      +
      ([postgres_container_network] if postgres_enabled | default(false) and nextcloud_database_postgres_hostname == postgres_connection_hostname and nextcloud_container_network != postgres_container_network and nextcloud_database_type == 'postgres' else [])
    ) | unique
  }}

nextcloud_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
nextcloud_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"
nextcloud_container_labels_traefik_compression_middleware_enabled: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_enabled }}"
nextcloud_container_labels_traefik_compression_middleware_name: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_name if mash_playbook_reverse_proxy_traefik_middleware_compession_enabled else '' }}"

nextcloud_database_type: "{{ 'postgres' if postgres_enabled | default(false) else 'sqlite' }}"

# role-specific:collabora_online
#
# Because a CODE instance requires a backend which works as File Sync
# and Share (FSS) tool and the playbook currently integrates only one
# FSS, which is Nextcloud, the Nextcloud and CODE instances are
# connected by default, if both of them are enabled.
#
nextcloud_app_collabora_wopi_url: "{{ collabora_online_url if collabora_online_enabled }}"
# /role-specific:collabora_online

# role-specific:exim_relay
nextcloud_environment_variables_smtp_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
nextcloud_environment_variables_smtp_port: "{{ 8025 if exim_relay_enabled else '' }}"
nextcloud_environment_variables_mail_from_address: "{{ (exim_relay_sender_address | split('@'))[0] if exim_relay_enabled else '' }}"
nextcloud_environment_variables_mail_domain: "{{ (exim_relay_sender_address | split('@'))[1] if exim_relay_enabled else '' }}"
nextcloud_environment_variables_smtp_authtype: PLAIN
# /role-specific:exim_relay

# role-specific:lldap
#
# These values are based on documentation at Nextcloud All-in-One repository
# available at https://github.com/nextcloud/all-in-one/tree/main/community-containers/lldap
# and https://github.com/lldap/lldap/blob/main/README.md#general-configuration-guide
#
nextcloud_lldap_enabled: "{{ lldap_enabled }}"
nextcloud_ldap_admin_group: lldap_admin
nextcloud_ldap_agent_name_uid: "{{ lldap_environment_variables_lldap_ldap_user_dn }}"
nextcloud_ldap_agent_name: uid={{ nextcloud_ldap_agent_name_uid }},ou=people,{{ nextcloud_ldap_base }}
nextcloud_ldap_base: "{{ lldap_environment_variables_lldap_ldap_base_dn }}"
nextcloud_ldap_host: ldap://{{ lldap_identifier }}
nextcloud_ldap_base_users: "ou=people,{{ nextcloud_ldap_base }}"
nextcloud_ldap_base_groups: "ou=groups,{{ nextcloud_ldap_base }}"
# /role-specific:lldap

# role-specific:mariadb
nextcloud_database_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
nextcloud_database_mysql_port: "{{ mariadb_connection_port if mariadb_enabled | default(false) else '3306' }}"
nextcloud_database_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.nextcloud', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
nextcloud_database_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
nextcloud_database_postgres_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
nextcloud_database_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.nextcloud', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
nextcloud_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
nextcloud_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /nextcloud                                                           #
#                                                                      #
########################################################################
# /role-specific:nextcloud



# role-specific:nocdnbs
########################################################################
#                                                                      #
# nocdnbs                                                              #
#                                                                      #
########################################################################

nocdnbs_enabled: false

nocdnbs_identifier: "{{ mash_playbook_service_identifier_prefix }}nocdnbs"

nocdnbs_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}nocdnbs"

nocdnbs_uid: "{{ mash_playbook_uid }}"
nocdnbs_gid: "{{ mash_playbook_gid }}"

nocdnbs_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

nocdnbs_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
nocdnbs_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
nocdnbs_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
nocdnbs_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /nocdnbs                                                             #
#                                                                      #
########################################################################
# /role-specific:nocdnbs



# role-specific:nodebb
########################################################################
#                                                                      #
# nodebb                                                               #
#                                                                      #
########################################################################

nodebb_enabled: false

nodebb_identifier: "{{ mash_playbook_service_identifier_prefix }}nodebb"

nodebb_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}nodebb"

# Currently NodeBB can only run as root user
nodebb_uid: "0"
nodebb_gid: "0"

nodebb_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

nodebb_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
nodebb_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
nodebb_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
nodebb_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /nodebb                                                              #
#                                                                      #
########################################################################
# /role-specific:nodebb



# role-specific:notfellchen
########################################################################
#                                                                      #
# notfellchen                                                          #
#                                                                      #
########################################################################

notfellchen_enabled: false

notfellchen_identifier: "{{ mash_playbook_service_identifier_prefix }}notfellchen"

notfellchen_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}notfellchen"

notfellchen_uid: "{{ mash_playbook_uid }}"
notfellchen_gid: "{{ mash_playbook_gid }}"

notfellchen_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'secret.nf', rounds=655555) | to_uuid }}"

notfellchen_systemd_required_services_list: |
  {{
    ([devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled and notfellchen_database_host == postgres_connection_hostname else [])
  }}

notfellchen_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and notfellchen_database_host == postgres_connection_hostname and notfellchen_container_network != postgres_container_network else [])
  }}

notfellchen_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
notfellchen_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"
notfellchen_sws_container_labels_traefik_enabled: "{{ notfellchen_container_labels_traefik_enabled }}"
notfellchen_sws_container_labels_traefik_docker_network: "{{ notfellchen_container_labels_traefik_docker_network }}"
notfellchen_sws_container_labels_traefik_entrypoints: "{{ notfellchen_container_labels_traefik_entrypoints }}"
notfellchen_sws_container_labels_traefik_tls_certResolver: "{{ notfellchen_container_labels_traefik_tls_certResolver }}"

# role-specific:postgres
notfellchen_database_host: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
notfellchen_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
notfellchen_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.nf', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
notfellchen_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
notfellchen_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /notfellchen                                                         #
#                                                                      #
########################################################################
# /role-specific:notfellchen



# role-specific:ntfy
########################################################################
#                                                                      #
# ntfy                                                                 #
#                                                                      #
########################################################################

ntfy_enabled: false

ntfy_identifier: "{{ mash_playbook_service_identifier_prefix }}ntfy"

ntfy_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}ntfy"

ntfy_uid: "{{ mash_playbook_uid }}"
ntfy_gid: "{{ mash_playbook_gid }}"

ntfy_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and ntfy_smtp_sender_addr_host == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

ntfy_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and ntfy_smtp_sender_addr_host == exim_relay_identifier | default('mash-exim-relay') and ntfy_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

ntfy_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
ntfy_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

ntfy_visitor_request_limit_exempt_hosts_hostnames_auto: |
  {{
    [ntfy_hostname]
  }}

# role-specific:exim_relay
ntfy_smtp_sender_enabled: "{{ exim_relay_enabled }}"
ntfy_smtp_sender_addr_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
ntfy_smtp_sender_addr_port: 8025
ntfy_smtp_sender_from: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:traefik
ntfy_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
ntfy_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /ntfy                                                                #
#                                                                      #
########################################################################
# /role-specific:ntfy



# role-specific:oauth2_proxy
########################################################################
#                                                                      #
# oauth2_proxy                                                         #
#                                                                      #
########################################################################

oauth2_proxy_enabled: false

oauth2_proxy_identifier: "{{ mash_playbook_service_identifier_prefix }}oauth2-proxy"

oauth2_proxy_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}oauth2-proxy"

oauth2_proxy_uid: "{{ mash_playbook_uid }}"
oauth2_proxy_gid: "{{ mash_playbook_gid }}"

oauth2_proxy_container_network: "{{ (mash_playbook_reverse_proxyable_services_additional_network if mash_playbook_traefik_labels_enabled else '') | default(oauth2_proxy_identifier) }}"

oauth2_proxy_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
oauth2_proxy_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
oauth2_proxy_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
oauth2_proxy_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /oauth2_proxy                                                        #
#                                                                      #
########################################################################
# /role-specific:oauth2_proxy



# role-specific:onlyoffice_docs
########################################################################
#                                                                      #
# onlyoffice_docs                                                      #
#                                                                      #
########################################################################

onlyoffice_docs_enabled: false

onlyoffice_docs_identifier: "{{ mash_playbook_service_identifier_prefix }}onlyoffice-docs"

onlyoffice_docs_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}onlyoffice-docs"

# ONLYOFFICE Docs can only work with a root user
onlyoffice_docs_uid: "0"
onlyoffice_docs_gid: "0"

onlyoffice_docs_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and onlyoffice_docs_database_mariadb_hostname == mariadb_connection_hostname and onlyoffice_docs_database_type == 'mariadb' else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and onlyoffice_docs_database_postgres_hostname == postgres_connection_hostname and onlyoffice_docs_database_type == 'postgres' else [])
  }}

onlyoffice_docs_container_additional_networks_auto: |
  {{
    ([mariadb_container_network] if mariadb_enabled | default(false) and onlyoffice_docs_database_mariadb_hostname == mariadb_connection_hostname and onlyoffice_docs_container_network != mariadb_container_network and onlyoffice_docs_database_type == 'mariadb' else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and onlyoffice_docs_database_postgres_hostname == postgres_connection_hostname and onlyoffice_docs_container_network != postgres_container_network and onlyoffice_docs_database_type == 'postgres' else [])
  }}

onlyoffice_docs_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
onlyoffice_docs_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

onlyoffice_docs_environment_variables_secure_link_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'onlyoffice.s', rounds=655555) | to_uuid }}"
onlyoffice_docs_environment_variables_jwt_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'onlyoffice.dj', rounds=655555) | to_uuid }}"

# role-specific:mariadb
onlyoffice_docs_database_mariadb_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
onlyoffice_docs_database_mariadb_port: "{{ mariadb_connection_port if mariadb_enabled else '3306' }}"
onlyoffice_docs_database_mariadb_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'onlyoffice.d', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
onlyoffice_docs_database_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
onlyoffice_docs_database_postgres_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
onlyoffice_docs_database_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'onlyoffice.d', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
onlyoffice_docs_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
onlyoffice_docs_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /onlyoffice_docs                                                     #
#                                                                      #
########################################################################
# /role-specific:onlyoffice_docs



# role-specific:opengist
########################################################################
#                                                                      #
# opengist                                                             #
#                                                                      #
########################################################################

opengist_enabled: false

opengist_identifier: "{{ mash_playbook_service_identifier_prefix }}opengist"

opengist_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}opengist"

opengist_uid: "{{ mash_playbook_uid }}"
opengist_gid: "{{ mash_playbook_gid }}"

opengist_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and opengist_database_mysql_hostname == mariadb_connection_hostname and opengist_database_type == 'mysql' else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and opengist_database_postgres_hostname == postgres_connection_hostname and opengist_database_type == 'postgres' else [])
  }}

opengist_container_additional_networks_auto: |
  {{
    ([mariadb_container_network] if mariadb_enabled | default(false) and opengist_database_mysql_hostname == mariadb_connection_hostname and opengist_container_network != mariadb_container_network and opengist_database_type == 'mysql' else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and opengist_database_postgres_hostname == postgres_connection_hostname and opengist_container_network != postgres_container_network and opengist_database_type == 'postgres' else [])
  }}

opengist_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
opengist_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

opengist_database_type: "{{ 'postgres' if postgres_enabled | default(false) else 'sqlite' }}"

# role-specific:mariadb
opengist_database_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
opengist_database_mysql_port: "{{ mariadb_connection_port if mariadb_enabled else '3306' }}"
opengist_database_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'opengist.db', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
opengist_database_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
opengist_database_postgres_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
opengist_database_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'opengist.db', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
opengist_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
opengist_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /opengist                                                            #
#                                                                      #
########################################################################
# /role-specific:opengist



# role-specific:outline
########################################################################
#                                                                      #
# outline                                                              #
#                                                                      #
########################################################################

outline_enabled: false

outline_identifier: "{{ mash_playbook_service_identifier_prefix }}outline"

outline_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}outline"

outline_uid: "{{ mash_playbook_uid }}"
outline_gid: "{{ mash_playbook_gid }}"

outline_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and outline_database_hostname == postgres_connection_hostname else [])
  }}

outline_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and outline_database_hostname == postgres_connection_hostname and outline_container_network != postgres_container_network else [])
  }}

outline_environment_variable_utils_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'utils.out', rounds=655555) | to_uuid }}"

outline_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
outline_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:postgres
outline_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
outline_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
outline_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.out', rounds=655555) | to_uuid }}"
outline_database_sslmode: "{{ 'disable' if postgres_enabled and outline_database_hostname == postgres_connection_hostname else 'prefer' }}"
# /role-specific:postgres

# role-specific:traefik
outline_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
outline_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /outline                                                             #
#                                                                      #
########################################################################
# /role-specific:outline



# role-specific:overseerr
########################################################################
#                                                                      #
# overseerr                                                            #
#                                                                      #
########################################################################

overseerr_enabled: false

overseerr_identifier: "{{ mash_playbook_service_identifier_prefix }}overseerr"

overseerr_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}overseerr"

overseerr_uid: "{{ mash_playbook_uid }}"
overseerr_gid: "{{ mash_playbook_gid }}"

overseerr_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

overseerr_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
overseerr_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
overseerr_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
overseerr_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /overseerr                                                           #
#                                                                      #
########################################################################
# /role-specific:overseerr



# role-specific:owncast
########################################################################
#                                                                      #
# owncast                                                              #
#                                                                      #
########################################################################

owncast_enabled: false

owncast_identifier: "{{ mash_playbook_service_identifier_prefix }}owncast"

owncast_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}owncast"

owncast_uid: "{{ mash_playbook_uid }}"
owncast_gid: "{{ mash_playbook_gid }}"

owncast_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

owncast_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
owncast_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
owncast_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
owncast_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /owncast                                                             #
#                                                                      #
########################################################################
# /role-specific:owncast



# role-specific:oxitraffic
########################################################################
#                                                                      #
# oxitraffic                                                           #
#                                                                      #
########################################################################

oxitraffic_enabled: false

oxitraffic_identifier: "{{ mash_playbook_service_identifier_prefix }}oxitraffic"

oxitraffic_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}oxitraffic"

oxitraffic_uid: "{{ mash_playbook_uid }}"
oxitraffic_gid: "{{ mash_playbook_gid }}"

oxitraffic_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and oxitraffic_database_hostname == postgres_connection_hostname else [])
  }}

oxitraffic_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and oxitraffic_database_hostname == postgres_connection_hostname and oxitraffic_container_network != postgres_container_network else [])
  }}

oxitraffic_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
oxitraffic_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:postgres
oxitraffic_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
oxitraffic_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
oxitraffic_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.oxitraffic', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
oxitraffic_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
oxitraffic_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /oxitraffic                                                          #
#                                                                      #
########################################################################
# /role-specific:oxitraffic



# role-specific:paperless
########################################################################
#                                                                      #
# paperless                                                            #
#                                                                      #
########################################################################

paperless_enabled: false

paperless_identifier: "{{ mash_playbook_service_identifier_prefix }}paperless"

paperless_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}paperless"

paperless_uid: "{{ mash_playbook_uid }}"
paperless_gid: "{{ mash_playbook_gid }}"

paperless_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and paperless_database_mariadb_hostname == mariadb_connection_hostname and paperless_database_type == 'mariadb' else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and paperless_database_postgres_hostname == postgres_connection_hostname and paperless_database_type == 'postgres' else [])
  }}

paperless_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and paperless_email_host == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

paperless_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and paperless_email_host == exim_relay_identifier | default('mash-exim-relay') and paperless_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([mariadb_container_network] if mariadb_enabled | default(false) and paperless_database_mariadb_hostname == mariadb_connection_hostname and paperless_container_network != mariadb_container_network and paperless_database_type == 'mariadb' else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and paperless_database_postgres_hostname == postgres_connection_hostname and paperless_container_network != postgres_container_network and paperless_database_type == 'postgres' else [])
  }}

paperless_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
paperless_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

paperless_database_type: "{{ 'postgres' if postgres_enabled | default(false) else 'sqlite' }}"

paperless_secret_key: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'paperless.secret', rounds=655555) | to_uuid }}"

# role-specific:exim_relay
paperless_email_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
paperless_email_port: "{{ 8025 if exim_relay_enabled else '' }}"
paperless_email_from: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:mariadb
paperless_database_mariadb_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
paperless_database_mariadb_port: "{{ mariadb_connection_port if mariadb_enabled else '3306' }}"
paperless_database_mariadb_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.paperlesm', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
paperless_database_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
paperless_database_postgres_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
paperless_database_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.paperless', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
paperless_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
paperless_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /paperless                                                           #
#                                                                      #
########################################################################
# /role-specific:paperless



# role-specific:peertube
########################################################################
#                                                                      #
# peertube                                                             #
#                                                                      #
########################################################################

peertube_enabled: false

peertube_identifier: "{{ mash_playbook_service_identifier_prefix }}peertube"

peertube_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}peertube"

peertube_uid: "{{ mash_playbook_uid }}"
peertube_gid: "{{ mash_playbook_gid }}"

peertube_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and peertube_database_hostname == postgres_connection_hostname else [])
  }}

peertube_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and peertube_config_smtp_hostname == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

peertube_container_additional_networks_auto: |
  {{
    (
      ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and peertube_config_smtp_hostname == exim_relay_identifier | default('mash-exim-relay') and peertube_container_network != exim_relay_container_network) else [])
      +
      ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
      +
      ([postgres_container_network] if postgres_enabled and peertube_database_hostname == postgres_connection_hostname and peertube_container_network != postgres_container_network else [])
    ) | unique
  }}

peertube_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
peertube_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:exim_relay
peertube_config_smtp_hostname: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
peertube_config_smtp_port: "{{ 8025 if exim_relay_enabled else '' }}"
peertube_config_smtp_from: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:postgres
peertube_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
peertube_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
peertube_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.peertube', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
peertube_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
peertube_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /peertube                                                            #
#                                                                      #
########################################################################
# /role-specific:peertube



# role-specific:plausible
########################################################################
#                                                                      #
# plausible                                                            #
#                                                                      #
########################################################################

plausible_enabled: false

plausible_identifier: "{{ mash_playbook_service_identifier_prefix }}plausible"

plausible_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}plausible"

plausible_uid: "{{ mash_playbook_uid }}"
plausible_gid: "{{ mash_playbook_gid }}"

plausible_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and plausible_database_hostname == postgres_connection_hostname else [])
    +
    ([clickhouse_identifier ~ '.service'] if clickhouse_enabled and plausible_clickhouse_database_hostname == clickhouse_identifier| default('mash-clickhouse') else [])
  }}

plausible_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and plausible_environment_variable_smtp_host_addr == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

plausible_container_additional_networks_auto: |
  {{
    ([clickhouse_container_network | default('mash-clickhouse')] if (clickhouse_enabled and plausible_clickhouse_database_hostname == clickhouse_identifier | default('mash-clickhouse') and plausible_container_network != clickhouse_container_network | default('mash-clickhouse')) else [])
    +
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and plausible_environment_variable_smtp_host_addr == exim_relay_identifier | default('mash-exim-relay') and plausible_container_network != exim_relay_container_network) else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and plausible_database_hostname == postgres_connection_hostname and plausible_container_network != postgres_container_network else [])
  }}

plausible_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
plausible_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:clickhouse
plausible_clickhouse_database_hostname: "{{ clickhouse_identifier if clickhouse_enabled else '' }}"
plausible_clickhouse_database_password: "{{ ('%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'plaus.clk.db', rounds=655555) | to_uuid) if clickhouse_enabled else '' }}"
# /role-specific:clickhouse

# role-specific:exim_relay
# As of 2024-06-28, only `Bamboo.SMTPAdapter` behaves well when no SMTP username/password AUTH is required (as is the case for exim-relay).
# The Bamboo.Mua SMTP adapter is more modern, but always sends authentication, even when the SMTP user is empty.
plausible_environment_variable_mailer_adapter: "{{ 'Bamboo.SMTPAdapter' if exim_relay_enabled else 'Bamboo.LocalAdapter' }}"
plausible_environment_variable_smtp_host_addr: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
plausible_environment_variable_smtp_host_port: "{{ 8025 if exim_relay_enabled else '587' }}"
plausible_environment_variable_mailer_email: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
plausible_environment_variable_smtp_host_ssl_enabled: false
# /role-specific:exim_relay

# role-specific:postgres
plausible_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
plausible_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
plausible_database_password: "{{ ('%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'plausible.db', rounds=655555) | to_uuid) if postgres_enabled else '' }}"
# /role-specific:postgres

# role-specific:traefik
plausible_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
plausible_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /plausible                                                           #
#                                                                      #
########################################################################
# /role-specific:plausible



# role-specific:plex
########################################################################
#                                                                      #
# plex                                                                 #
#                                                                      #
########################################################################

plex_enabled: false

plex_identifier: "{{ mash_playbook_service_identifier_prefix }}plex"

plex_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}plex"

plex_uid: "{{ mash_playbook_uid }}"
plex_gid: "{{ mash_playbook_gid }}"

plex_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

plex_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
plex_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
plex_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
plex_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /plex                                                                #
#                                                                      #
########################################################################
# /role-specific:plex



# role-specific:pocket_id
########################################################################
#                                                                      #
# pocket_id                                                            #
#                                                                      #
########################################################################

pocket_id_enabled: false

pocket_id_identifier: "{{ mash_playbook_service_identifier_prefix }}pocket-id"

pocket_id_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}pocket-id"

pocket_id_uid: "{{ mash_playbook_uid }}"
pocket_id_gid: "{{ mash_playbook_gid }}"

pocket_id_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and pocket_id_database_hostname == postgres_connection_hostname and pocket_id_database_type == 'postgres' else [])
  }}

pocket_id_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and pocket_id_environment_variable_smtp_host == exim_relay_identifier | default('mash-exim-relay')) else [])
    +
    ([lldap_identifier ~ '.service'] if lldap_enabled | default(false) and pocket_id_ldap_enabled else [])
  }}

pocket_id_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and pocket_id_environment_variable_smtp_host == exim_relay_identifier | default('mash-exim-relay') and pocket_id_container_network != exim_relay_container_network) else [])
    +
    ([lldap_container_network] if lldap_enabled | default(false) and pocket_id_container_network != lldap_container_network and pocket_id_ldap_enabled else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and pocket_id_database_hostname == postgres_connection_hostname and pocket_id_container_network != postgres_container_network and pocket_id_database_type == 'postgres' else [])
  }}

pocket_id_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
pocket_id_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

pocket_id_database_type: "{{ 'postgres' if postgres_enabled | default(false) else 'sqlite' }}"

# Set `false` to enable telemetry for analytics
pocket_id_environment_variable_analytics_disabled: true

pocket_id_environment_variable_encryption_key: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'd.pocketid', rounds=655555) | to_uuid }}"

# Set `true` to disable additional configuration on Pocket ID's UI and allow it with environment variables only.
pocket_id_environment_variable_ui_config_disabled: false

# role-specific:exim_relay
pocket_id_mailer_enabled: "{{ exim_relay_enabled }}"
# Note these settings are automatically applied only if `pocket_id_environment_variable_ui_config_disabled` is set to `true`.
# Otherwise, it is still possible to configure SMTP mailer on the Pocket ID's UI.
pocket_id_environment_variable_smtp_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
pocket_id_environment_variable_smtp_port: 8025
pocket_id_environment_variable_smtp_from: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:lldap
pocket_id_ldap_enabled: "{{ lldap_enabled }}"
# Note these settings are automatically applied only if `pocket_id_environment_variable_ui_config_disabled` is set to `true`.
# Otherwise, it is still possible to configure SMTP mailer on the Pocket ID's UI.
pocket_id_environment_variable_ldap_url: ldap://{{ lldap_identifier }}:{{ lldap_container_ldap_port }}
pocket_id_environment_variable_ldap_skip_cert_verify: true
# /role-specific:lldap

# role-specific:postgres
pocket_id_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
pocket_id_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
pocket_id_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.pocketid', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
pocket_id_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
pocket_id_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# pocket_id                                                            #
#                                                                      #
########################################################################
# /role-specific:pocket_id



# role-specific:poodledonts
########################################################################
#                                                                      #
# poodledonts                                                          #
#                                                                      #
########################################################################

poodledonts_enabled: false

poodledonts_identifier: "{{ mash_playbook_service_identifier_prefix }}poodledonts"

poodledonts_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}poodledonts"

poodledonts_uid: "{{ mash_playbook_uid }}"
poodledonts_gid: "{{ mash_playbook_gid }}"

poodledonts_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

poodledonts_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
poodledonts_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
poodledonts_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
poodledonts_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /poodledonts                                                         #
#                                                                      #
########################################################################
# /role-specific:poodledonts



# role-specific:postgis
########################################################################
#                                                                      #
# postgis                                                              #
#                                                                      #
########################################################################

postgis_enabled: false

postgis_architecture: "{{ mash_playbook_architecture }}"

postgis_identifier: "{{ mash_playbook_service_identifier_prefix }}postgis"

postgis_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}postgis"

postgis_uid: "{{ mash_playbook_uid }}"
postgis_gid: "{{ mash_playbook_gid }}"

postgis_systemd_services_to_stop_for_maintenance_list: |
  {{
    ([(mobilizon_identifier + '.service')] if mobilizon_enabled else [])
  }}

postgis_managed_databases_auto: |
  {{
    ([{
      'name': mobilizon_database_name,
      'username': mobilizon_database_username,
      'password': mobilizon_database_password,
    }] if mobilizon_enabled and mobilizon_database_hostname == postgis_identifier and mobilizon_database_type == 'postgis' else [])
  }}

########################################################################
#                                                                      #
# /postgis                                                             #
#                                                                      #
########################################################################
# /role-specific:postgis



# role-specific:privatebin
########################################################################
#                                                                      #
# privatebin                                                           #
#                                                                      #
########################################################################

privatebin_enabled: false

privatebin_identifier: "{{ mash_playbook_service_identifier_prefix }}privatebin"

privatebin_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}privatebin"

privatebin_uid: "{{ mash_playbook_uid }}"
privatebin_gid: "{{ mash_playbook_gid }}"

privatebin_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and privatebin_database_mysql_hostname == mariadb_connection_hostname and privatebin_config_model == 'MySQL' else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and privatebin_database_postgres_hostname == postgres_connection_hostname and privatebin_config_model == 'PostgreSQL' else [])
  }}

privatebin_container_additional_networks_auto: |
  {{
    ([mariadb_container_network] if mariadb_enabled | default(false) and privatebin_database_mysql_hostname == mariadb_connection_hostname and privatebin_container_network != mariadb_container_network and privatebin_config_model == 'MySQL' else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and privatebin_database_postgres_hostname == postgres_connection_hostname and privatebin_container_network != postgres_container_network and privatebin_config_model == 'PostgreSQL' else [])
  }}

privatebin_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
privatebin_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# Note that valid values for "privatebin_config_model" are Filesystem, GoogleCloudStorage, MySQL, SQLite, PostgreSQL, and S3, meaning neither MySQL (MariaDB) nor Postgres would be a must.
privatebin_config_model: PostgreSQL

# role-specific:mariadb
# This is activated only if MariaDB is enabled and "privatebin_config_model" is set to "MySQL".
privatebin_database_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
privatebin_database_mysql_username: "{{ privatebin_identifier }}"
privatebin_database_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.privatebinm', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
# This is activated only if Postgres is enabled and "privatebin_config_model" is set to "PostgreSQL".
privatebin_database_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
privatebin_database_postgres_username: "{{ privatebin_identifier }}"
privatebin_database_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.privatebinp', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
privatebin_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
privatebin_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /privatebin                                                          #
#                                                                      #
########################################################################
# /role-specific:privatebin



# role-specific:prometheus
########################################################################
#                                                                      #
# prometheus                                                           #
#                                                                      #
########################################################################

prometheus_enabled: false

prometheus_identifier: "{{ mash_playbook_service_identifier_prefix }}prometheus"

prometheus_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}prometheus"

prometheus_uid: "{{ mash_playbook_uid }}"
prometheus_gid: "{{ mash_playbook_gid }}"

prometheus_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

# Only enable Traefik labels if a hostname is set (indicating that this will be exposed publicly)
prometheus_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled and prometheus_hostname | length > 0 }}"
prometheus_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
prometheus_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
prometheus_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /prometheus                                                          #
#                                                                      #
########################################################################
# /role-specific:prometheus



# role-specific:prometheus_blackbox_exporter
########################################################################
#                                                                      #
# prometheus_blackbox_exporter                                         #
#                                                                      #
########################################################################

prometheus_blackbox_exporter_enabled: false

prometheus_blackbox_exporter_identifier: "{{ mash_playbook_service_identifier_prefix }}prometheus-blackbox-exporter"

prometheus_blackbox_exporter_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}prometheus-blackbox-exporter"

prometheus_blackbox_exporter_uid: "{{ mash_playbook_uid }}"
prometheus_blackbox_exporter_gid: "{{ mash_playbook_gid }}"

prometheus_blackbox_exporter_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

prometheus_blackbox_exporter_hostname: "{{ mash_playbook_metrics_exposure_hostname }}"
prometheus_blackbox_exporter_path_prefix: "{{ mash_playbook_metrics_exposure_path_prefix }}/{{ prometheus_blackbox_exporter_identifier }}"

# Only enable Traefik labels if a hostname is set (indicating that this will be exposed publicly)
prometheus_blackbox_exporter_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled and prometheus_blackbox_exporter_hostname }}"
prometheus_blackbox_exporter_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

prometheus_blackbox_exporter_container_labels_metrics_middleware_basic_auth_enabled: "{{ mash_playbook_metrics_exposure_http_basic_auth_enabled }}"
prometheus_blackbox_exporter_container_labels_metrics_middleware_basic_auth_users: "{{ mash_playbook_metrics_exposure_http_basic_auth_users }}"

# role-specific:traefik
prometheus_blackbox_exporter_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
prometheus_blackbox_exporter_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /prometheus_blackbox_exporter                                        #
#                                                                      #
########################################################################
# /role-specific:prometheus_blackbox_exporter



# role-specific:prometheus_node_exporter
########################################################################
#                                                                      #
# prometheus_node_exporter                                             #
#                                                                      #
########################################################################

prometheus_node_exporter_enabled: false

prometheus_node_exporter_identifier: "{{ mash_playbook_service_identifier_prefix }}prometheus-node-exporter"

prometheus_node_exporter_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}prometheus-node-exporter"

prometheus_node_exporter_uid: "{{ mash_playbook_uid }}"
prometheus_node_exporter_gid: "{{ mash_playbook_gid }}"

prometheus_node_exporter_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

prometheus_node_exporter_hostname: "{{ mash_playbook_metrics_exposure_hostname }}"
prometheus_node_exporter_path_prefix: "{{ mash_playbook_metrics_exposure_path_prefix }}/{{ prometheus_node_exporter_identifier }}"

# Only enable Traefik labels if a hostname is set (indicating that this will be exposed publicly)
prometheus_node_exporter_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled and prometheus_node_exporter_hostname }}"
prometheus_node_exporter_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

prometheus_node_exporter_container_labels_metrics_middleware_basic_auth_enabled: "{{ mash_playbook_metrics_exposure_http_basic_auth_enabled }}"
prometheus_node_exporter_container_labels_metrics_middleware_basic_auth_users: "{{ mash_playbook_metrics_exposure_http_basic_auth_users }}"

prometheus_node_exporter_process_extra_arguments:
  - "--collector.disable-defaults"
  - "--collector.cpu"
  - "--collector.filesystem"
  - "--collector.meminfo"
  - "--collector.systemd"
  - "--collector.uname"

prometheus_node_exporter_container_extra_arguments:
  - "--security-opt apparmor=unconfined"
  - "--mount type=bind,src=/var/run/dbus/system_bus_socket,dst=/var/run/dbus/system_bus_socket,ro,bind-propagation=rslave"

# role-specific:traefik
prometheus_node_exporter_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
prometheus_node_exporter_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /prometheus_node_exporter                                            #
#                                                                      #
########################################################################
# /role-specific:prometheus_node_exporter



# role-specific:prometheus_postgres_exporter
########################################################################
#                                                                      #
# prometheus_postgres_exporter                                         #
#                                                                      #
########################################################################

prometheus_postgres_exporter_enabled: false

prometheus_postgres_exporter_identifier: "{{ mash_playbook_service_identifier_prefix }}prometheus-postgres-exporter"

prometheus_postgres_exporter_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}prometheus-postgres-exporter"

prometheus_postgres_exporter_uid: "{{ mash_playbook_uid }}"
prometheus_postgres_exporter_gid: "{{ mash_playbook_gid }}"

prometheus_postgres_exporter_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and prometheus_postgres_exporter_database_hostname == postgres_connection_hostname and prometheus_postgres_exporter_container_network != postgres_container_network else [])
  }}

prometheus_postgres_exporter_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled else [])
  }}

prometheus_postgres_exporter_hostname: "{{ mash_playbook_metrics_exposure_hostname }}"
prometheus_postgres_exporter_path_prefix: "{{ mash_playbook_metrics_exposure_path_prefix }}/{{ prometheus_postgres_exporter_identifier }}"

prometheus_postgres_exporter_container_labels_metrics_middleware_basic_auth_enabled: "{{ mash_playbook_metrics_exposure_http_basic_auth_enabled }}"
prometheus_postgres_exporter_container_labels_metrics_middleware_basic_auth_users: "{{ mash_playbook_metrics_exposure_http_basic_auth_users }}"

# Only enable Traefik labels if a hostname is set (indicating that this will be exposed publicly)
prometheus_postgres_exporter_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled and prometheus_postgres_exporter_hostname | length > 0 }}"
prometheus_postgres_exporter_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:postgres
prometheus_postgres_exporter_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
prometheus_postgres_exporter_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
prometheus_postgres_exporter_database_password: "{{ postgres_connection_password if postgres_enabled else '' }}"
prometheus_postgres_exporter_database_ssl: false
# /role-specific:postgres

# role-specific:traefik
prometheus_postgres_exporter_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
prometheus_postgres_exporter_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /prometheus_postgres_exporter                                        #
#                                                                      #
########################################################################
# /role-specific:prometheus_postgres_exporter



# role-specific:prometheus_ssh_exporter
########################################################################
#                                                                      #
# prometheus_ssh_exporter                                              #
#                                                                      #
########################################################################

prometheus_ssh_exporter_enabled: false

prometheus_ssh_exporter_identifier: "{{ mash_playbook_service_identifier_prefix }}prometheus-ssh-exporter"

prometheus_ssh_exporter_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}prometheus-ssh-exporter"

prometheus_ssh_exporter_uid: "{{ mash_playbook_uid }}"
prometheus_ssh_exporter_gid: "{{ mash_playbook_gid }}"

prometheus_ssh_exporter_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

prometheus_ssh_exporter_hostname: "{{ mash_playbook_metrics_exposure_hostname }}"
prometheus_ssh_exporter_path_prefix: "{{ mash_playbook_metrics_exposure_path_prefix }}/{{ prometheus_ssh_exporter_identifier }}"

prometheus_ssh_exporter_container_labels_metrics_middleware_basic_auth_enabled: "{{ mash_playbook_metrics_exposure_http_basic_auth_enabled }}"
prometheus_ssh_exporter_container_labels_metrics_middleware_basic_auth_users: "{{ mash_playbook_metrics_exposure_http_basic_auth_users }}"

# Only enable Traefik labels if a hostname is set (indicating that this will be exposed publicly)
prometheus_ssh_exporter_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled and prometheus_ssh_exporter_hostname }}"
prometheus_ssh_exporter_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
prometheus_ssh_exporter_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
prometheus_ssh_exporter_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /prometheus_ssh_exporter                                             #
#                                                                      #
########################################################################
# /role-specific:prometheus_ssh_exporter



# role-specific:promtail
########################################################################
#                                                                      #
# promtail                                                             #
#                                                                      #
########################################################################

promtail_enabled: false

promtail_identifier: "{{ mash_playbook_service_identifier_prefix }}promtail"

promtail_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}promtail"

promtail_uid: "{{ mash_playbook_uid }}"
promtail_gid: "{{ mash_playbook_gid }}"

promtail_container_additional_networks_auto: |
  {{
    (
      ([loki_container_network] if (loki_enabled | default(false) and loki_container_network | default('') != promtail_container_network) else [])
      +
      ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    ) | unique
  }}

promtail_container_labels_metrics_enabled: "{{ mash_playbook_metrics_exposure_enabled }}"
promtail_container_labels_metrics_hostname: "{{ mash_playbook_metrics_exposure_hostname }}"
promtail_container_labels_metrics_path_prefix: "{{ mash_playbook_metrics_exposure_path_prefix }}/{{ promtail_identifier }}"
promtail_container_labels_metrics_traefik_middleware_basic_auth_enabled: "{{ mash_playbook_metrics_exposure_http_basic_auth_enabled }}"
promtail_container_labels_metrics_traefik_middleware_basic_auth_users: "{{ mash_playbook_metrics_exposure_http_basic_auth_users }}"

# Only enable Traefik labels if a hostname is set (indicating that this will be exposed publicly)
promtail_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
promtail_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:loki
promtail_config_clients_auto: |
  {{
    ([{
      'url': (loki_scheme + '://' + loki_identifier + ':' + (loki_server_http_listen_port | string) + '/loki/api/v1/push'),
      'tenant_id': 'mash',
    }] if loki_enabled else [])
  }}
# /role-specific:loki

# role-specific:traefik
promtail_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
promtail_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /promtail                                                            #
#                                                                      #
########################################################################
# /role-specific:promtail



# role-specific:qbittorrent
########################################################################
#                                                                      #
# qbittorrent                                                          #
#                                                                      #
########################################################################

qbittorrent_enabled: false

qbittorrent_identifier: "{{ mash_playbook_service_identifier_prefix }}qbittorrent"

qbittorrent_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}qbittorrent"

qbittorrent_uid: "{{ mash_playbook_uid }}"
qbittorrent_gid: "{{ mash_playbook_gid }}"

qbittorrent_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

qbittorrent_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
qbittorrent_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
qbittorrent_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
qbittorrent_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /qbittorrent                                                         #
#                                                                      #
########################################################################
# /role-specific:qbittorrent



# role-specific:radarr
########################################################################
#                                                                      #
# radarr                                                               #
#                                                                      #
########################################################################

radarr_enabled: false

radarr_identifier: "{{ mash_playbook_service_identifier_prefix }}radarr"

radarr_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}radarr"

radarr_uid: "{{ mash_playbook_uid }}"
radarr_gid: "{{ mash_playbook_gid }}"

radarr_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

radarr_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
radarr_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
radarr_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
radarr_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /radarr                                                              #
#                                                                      #
########################################################################
# /role-specific:radarr



# role-specific:radicale
########################################################################
#                                                                      #
# radicale                                                             #
#                                                                      #
########################################################################

radicale_enabled: false

radicale_identifier: "{{ mash_playbook_service_identifier_prefix }}radicale"

radicale_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}radicale"

radicale_uid: "{{ mash_playbook_uid }}"
radicale_gid: "{{ mash_playbook_gid }}"

radicale_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

radicale_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
radicale_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
radicale_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
radicale_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /radicale                                                            #
#                                                                      #
########################################################################
# /role-specific:radicale



# role-specific:reactflux
########################################################################
#                                                                      #
# reactflux                                                            #
#                                                                      #
########################################################################

reactflux_enabled: false

reactflux_identifier: "{{ mash_playbook_service_identifier_prefix }}reactflux"

reactflux_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}reactflux"

reactflux_uid: "{{ mash_playbook_uid }}"
reactflux_gid: "{{ mash_playbook_gid }}"

reactflux_systemd_required_services_list_auto: |
  {{
    ([miniflux_identifier ~ '.service'] if miniflux_enabled else [])
  }}

reactflux_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

reactflux_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
reactflux_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
reactflux_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
reactflux_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /reactflux                                                           #
#                                                                      #
########################################################################
# /role-specific:reactflux



# role-specific:readeck
########################################################################
#                                                                      #
# readeck                                                              #
#                                                                      #
########################################################################

readeck_enabled: false

readeck_identifier: "{{ mash_playbook_service_identifier_prefix }}readeck"

readeck_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}readeck"

readeck_uid: "{{ mash_playbook_uid }}"
readeck_gid: "{{ mash_playbook_gid }}"

readeck_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

readeck_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
readeck_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
readeck_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
readeck_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /readeck                                                             #
#                                                                      #
########################################################################
# /role-specific:readeck



# role-specific:redis
########################################################################
#                                                                      #
# redis                                                                #
#                                                                      #
########################################################################

redis_enabled: false

redis_identifier: "{{ mash_playbook_service_identifier_prefix }}redis"

redis_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}redis"

redis_uid: "{{ mash_playbook_uid }}"
redis_gid: "{{ mash_playbook_gid }}"

########################################################################
#                                                                      #
# /redis                                                               #
#                                                                      #
########################################################################
# /role-specific:redis



# role-specific:redlib
########################################################################
#                                                                      #
# redlib                                                               #
#                                                                      #
########################################################################

redlib_enabled: false

redlib_identifier: "{{ mash_playbook_service_identifier_prefix }}redlib"

redlib_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}redlib"

redlib_uid: "{{ mash_playbook_uid }}"
redlib_gid: "{{ mash_playbook_gid }}"

redlib_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

redlib_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
redlib_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
redlib_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
redlib_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /redlib                                                              #
#                                                                      #
########################################################################
# /role-specific:redlib



# role-specific:redmine
########################################################################
#                                                                      #
# redmine                                                              #
#                                                                      #
########################################################################

redmine_enabled: false

redmine_identifier: "{{ mash_playbook_service_identifier_prefix }}redmine"

redmine_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}redmine"

redmine_uid: "{{ mash_playbook_uid }}"
redmine_gid: "{{ mash_playbook_gid }}"

redmine_secret_key_base: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'secret.base', rounds=655555) | to_uuid }}"
redmine_secret_token: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'secret.token', rounds=655555) | to_uuid }}"
redmine_database_cipher_key: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.cipherkey', rounds=655555) | to_uuid }}"

redmine_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and redmine_database_postgres_hostname == postgres_connection_hostname and redmine_database_type == 'postgresql' else [])
  }}

redmine_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and redmine_database_postgres_hostname == postgres_connection_hostname and redmine_container_network != postgres_container_network and redmine_database_type == 'postgresql' else [])
  }}

redmine_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
redmine_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

redmine_database_type: "{{ 'postgresql' if postgres_enabled else 'sqlite3' }}"

# role-specific:postgres
redmine_database_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
redmine_database_postgres_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
redmine_database_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'redmine.db', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
redmine_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
redmine_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /redmine                                                             #
#                                                                      #
########################################################################
# /role-specific:redmine



# role-specific:roundcube
########################################################################
#                                                                      #
# roundcube                                                            #
#                                                                      #
########################################################################

roundcube_enabled: false

roundcube_identifier: "{{ mash_playbook_service_identifier_prefix }}roundcube"

roundcube_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}roundcube"

roundcube_uid: "0"
roundcube_gid: "0"

roundcube_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and roundcube_database_hostname == postgres_connection_hostname else [])
  }}

roundcube_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled and roundcube_database_hostname == postgres_connection_hostname and roundcube_container_network != postgres_container_network else [])
  }}

roundcube_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
roundcube_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

roundcube_database_type: "{{ 'postgresql' if postgres_enabled else 'sqlite' }}"

# role-specific:postgres
roundcube_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
roundcube_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
roundcube_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.roundcube', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
roundcube_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
roundcube_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /roundcube                                                           #
#                                                                      #
########################################################################
# /role-specific:roundcube



# role-specific:rssbridge
########################################################################
#                                                                      #
# rssbridge                                                            #
#                                                                      #
########################################################################

rssbridge_enabled: false

rssbridge_identifier: "{{ mash_playbook_service_identifier_prefix }}rssbridge"

rssbridge_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}rssbridge"

# RSS-Brridge can only work with a root user
rssbridge_uid: "0"
rssbridge_gid: "33"

rssbridge_systemd_wanted_services_list_auto: |
  {{
    ([browserless_identifier ~ '.service'] if browserless_enabled else [])
  }}

rssbridge_container_additional_networks_auto: |
  {{
    ([browserless_container_network] if browserless_enabled | default(false) and rssbridge_container_network != browserless_container_network else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

rssbridge_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
rssbridge_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:browserless
rssbridge_config_webdriver_headless: true
rssbridge_config_webdriver_selenium_server_url: "http://{{ browserless_identifier }}:{{ browserless_container_http_port }}/chromium/playwright"
# /role-specific:browserless

# role-specific:traefik
rssbridge_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
rssbridge_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /rssbridge                                                           #
#                                                                      #
########################################################################
# /role-specific:rssbridge



# role-specific:rumqttd
########################################################################
#                                                                      #
# rumqttd                                                              #
#                                                                      #
########################################################################

rumqttd_enabled: false

rumqttd_identifier: "{{ mash_playbook_service_identifier_prefix }}rumqttd"

rumqttd_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}rumqttd"

rumqttd_uid: "{{ mash_playbook_uid }}"
rumqttd_gid: "{{ mash_playbook_gid }}"

########################################################################
#                                                                      #
# /rumqttd                                                             #
#                                                                      #
########################################################################
# /role-specific:rumqttd



# role-specific:searxng
########################################################################
#                                                                      #
# searxng                                                              #
#                                                                      #
########################################################################

searxng_enabled: false

searxng_identifier: "{{ mash_playbook_service_identifier_prefix }}searxng"

searxng_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}searxng"

searxng_uid: "{{ mash_playbook_uid }}"
searxng_gid: "{{ mash_playbook_gid }}"

searxng_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

searxng_config_server_secret_key: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'searxng.s', rounds=655555) | to_uuid }}"

searxng_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
searxng_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
searxng_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
searxng_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /searxng                                                             #
#                                                                      #
########################################################################
# /role-specific:searxng



# role-specific:semaphore
########################################################################
#                                                                      #
# semaphore                                                            #
#                                                                      #
########################################################################

semaphore_enabled: false

semaphore_identifier: "{{ mash_playbook_service_identifier_prefix }}semaphore"

semaphore_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}semaphore"

semaphore_uid: "{{ mash_playbook_uid }}"
semaphore_gid: "{{ mash_playbook_gid }}"

semaphore_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and semaphore_database_mysql_hostname == mariadb_connection_hostname and semaphore_database_type == 'mysql' else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and semaphore_database_postgres_hostname == postgres_connection_hostname and semaphore_database_type == 'postgres' else [])
  }}

semaphore_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and semaphore_environment_variables_email_host == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

semaphore_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and semaphore_environment_variables_email_host == exim_relay_identifier | default('mash-exim-relay') and semaphore_container_network != exim_relay_container_network) else [])
    +
    ([mariadb_container_network] if mariadb_enabled | default(false) and semaphore_database_mysql_hostname == mariadb_connection_hostname and semaphore_container_network != mariadb_container_network and semaphore_database_type == 'mysql' else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and semaphore_database_postgres_hostname == postgres_connection_hostname and semaphore_container_network != postgres_container_network and semaphore_database_type == 'postgres' else [])
  }}

semaphore_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
semaphore_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

semaphore_database_type: "{{ 'postgres' if postgres_enabled | default(false) else 'sqlite' }}"

# role-specific:exim_relay
semaphore_environment_variables_email_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
semaphore_environment_variables_email_port: 8025
semaphore_environment_variables_email_sender: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:mariadb
semaphore_database_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
semaphore_database_mysql_port: "{{ mariadb_connection_port if mariadb_enabled | default(false) else '3306' }}"
semaphore_database_mysql_username: "{{ semaphore_identifier }}"
semaphore_database_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'semaphore.m', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
semaphore_database_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
semaphore_database_postgres_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
semaphore_database_postgres_username: "{{ semaphore_identifier }}"
semaphore_database_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'semaphore.p', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
semaphore_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
semaphore_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /semaphore                                                           #
#                                                                      #
########################################################################
# /role-specific:semaphore



# role-specific:send
########################################################################
#                                                                      #
# send                                                                 #
#                                                                      #
########################################################################

send_enabled: false

send_identifier: "{{ mash_playbook_service_identifier_prefix }}send"

send_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}send"

send_uid: "{{ mash_playbook_uid }}"
send_gid: "{{ mash_playbook_gid }}"

send_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

# Required for a Redis / KeyDB / Valkey instance
send_environment_variable_redis_hostname: "{{ send_redis_hostname }}"

send_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
send_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
send_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
send_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /send                                                                #
#                                                                      #
########################################################################
# /role-specific:send



# role-specific:sftpgo
########################################################################
#                                                                      #
# sftpgo                                                               #
#                                                                      #
########################################################################

sftpgo_enabled: false

sftpgo_identifier: "{{ mash_playbook_service_identifier_prefix }}sftpgo"

sftpgo_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}sftpgo"

sftpgo_uid: "{{ mash_playbook_uid }}"
sftpgo_gid: "{{ mash_playbook_gid }}"

sftpgo_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and sftpgo_database_mysql_hostname == mariadb_connection_hostname and sftpgo_environment_variables_data_provider_driver == 'mysql else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and sftpgo_database_postgresql_hostname == postgres_connection_hostname and sftpgo_environment_variables_data_provider_driver == 'postgresql' else [])
  }}

sftpgo_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and sftpgo_environment_variables_smtp_host == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

sftpgo_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and sftpgo_environment_variables_smtp_host == exim_relay_identifier | default('mash-exim-relay') and sftpgo_container_network != exim_relay_container_network) else [])
    +
    ([mariadb_container_network] if mariadb_enabled | default(false) and sftpgo_database_mysql_hostname == mariadb_connection_hostname and sftpgo_container_network != mariadb_container_network and sftpgo_environment_variables_data_provider_driver == 'mysql' else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and sftpgo_database_postgresql_hostname == postgres_connection_hostname and sftpgo_container_network != postgres_container_network and sftpgo_environment_variables_data_provider_driver == 'postgresql' else [])
  }}

sftpgo_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
sftpgo_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

sftpgo_environment_variables_data_provider_driver: postgresql

# role-specific:exim_relay
sftpgo_environment_variables_smtp_enabled: "{{ exim_relay_enabled }}"
sftpgo_environment_variables_smtp_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
sftpgo_environment_variables_smtp_port: 8025
sftpgo_environment_variables_smtp_from: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:mariadb
sftpgo_database_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled | default(false) and sftpgo_environment_variables_data_provider_driver == 'mysql' else '' }}"
sftpgo_database_mysql_port: "{{ mariadb_connection_port if mariadb_enabled | default(false) and sftpgo_environment_variables_data_provider_driver == 'mysql' else '3306' }}"
sftpgo_database_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.sftpgo', rounds=655555) | to_uuid }}"
sftpgo_database_mysql_username: "{{ sftpgo_identifier }}"
# /role-specific:mariadb

# role-specific:postgres
sftpgo_database_postgresql_hostname: "{{ postgres_connection_hostname if postgres_enabled and sftpgo_environment_variables_data_provider_driver == 'postgresql' else '' }}"
sftpgo_database_postgresql_port: "{{ postgres_connection_port if postgres_enabled and sftpgo_environment_variables_data_provider_driver == 'postgresql' else '5432' }}"
sftpgo_database_postgresql_username: "{{ sftpgo_identifier }}"
sftpgo_database_postgresql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.sftpgo', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
sftpgo_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
sftpgo_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /sftpgo                                                              #
#                                                                      #
########################################################################
# /role-specific:sftpgo



# role-specific:soft_serve
########################################################################
#                                                                      #
# soft_serve                                                           #
#                                                                      #
########################################################################

soft_serve_enabled: false

soft_serve_identifier: "{{ mash_playbook_service_identifier_prefix }}soft-serve"

soft_serve_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}soft-serve"

soft_serve_uid: "{{ mash_playbook_uid }}"
soft_serve_gid: "{{ mash_playbook_gid }}"

########################################################################
#                                                                      #
# /soft_serve                                                          #
#                                                                      #
########################################################################
# /role-specific:soft_serve



# role-specific:sonarr
########################################################################
#                                                                      #
# sonarr                                                               #
#                                                                      #
########################################################################

sonarr_enabled: false

sonarr_identifier: "{{ mash_playbook_service_identifier_prefix }}sonarr"

sonarr_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}sonarr"

sonarr_uid: "{{ mash_playbook_uid }}"
sonarr_gid: "{{ mash_playbook_gid }}"

sonarr_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

sonarr_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
sonarr_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
sonarr_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
sonarr_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /sonarr                                                              #
#                                                                      #
########################################################################
# /role-specific:sonarr



# role-specific:stirling_pdf
########################################################################
#                                                                      #
# stirling-pdf                                                         #
#                                                                      #
########################################################################

stirling_pdf_enabled: false

stirling_pdf_identifier: "{{ mash_playbook_service_identifier_prefix }}stirling-pdf"

stirling_pdf_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}stirling-pdf"

stirling_pdf_uid: "{{ mash_playbook_uid }}"
stirling_pdf_gid: "{{ mash_playbook_gid }}"

stirling_pdf_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

stirling_pdf_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
stirling_pdf_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
stirling_pdf_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
stirling_pdf_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /stirling-pdf                                                        #
#                                                                      #
########################################################################
# /role-specific:stirling_pdf



# role-specific:syncstorage_rs_docker
########################################################################
#                                                                      #
# syncstorage_rs_docker                                                #
#                                                                      #
########################################################################

syncstorage_rs_docker_enabled: false

syncstorage_rs_docker_identifier: "{{ mash_playbook_service_identifier_prefix }}syncstorage-rs-docker"

syncstorage_rs_docker_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}syncstorage-rs-docker"

syncstorage_rs_docker_uid: "{{ mash_playbook_uid }}"
syncstorage_rs_docker_gid: "{{ mash_playbook_gid }}"

syncstorage_rs_docker_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled and syncstorage_rs_docker_database_mysql_hostname == mariadb_connection_hostname else [])
  }}

syncstorage_rs_docker_container_additional_networks_auto: |
  {{
    ([mariadb_container_network] if mariadb_enabled and syncstorage_rs_docker_database_mysql_hostname == mariadb_connection_hostname and syncstorage_rs_docker_container_network != mariadb_container_network else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

syncstorage_rs_docker_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
syncstorage_rs_docker_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

syncstorage_rs_docker_environment_variable_sync_master_secret: "{{ ('%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'syncmaster', rounds=655555)) | b64encode | truncate(length=64, killwords=True, end='', leeway=None) }}"
syncstorage_rs_docker_environment_variable_metrics_hash_secret: "{{ ('%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'synchash', rounds=655555)) | b64encode | truncate(length=64, killwords=True, end='', leeway=None) }}"

# role-specific:mariadb
syncstorage_rs_docker_database_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
syncstorage_rs_docker_database_mysql_port: "{{ mariadb_connection_port if mariadb_enabled | default(false) else '3306' }}"
syncstorage_rs_docker_database_mysql_username: "{{ syncstorage_rs_docker_identifier }}"
syncstorage_rs_docker_database_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.syncstorage', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:traefik
syncstorage_rs_docker_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
syncstorage_rs_docker_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /syncstorage_rs_docker                                               #
#                                                                      #
########################################################################
# /role-specific:syncstorage_rs_docker



# role-specific:syncthing
########################################################################
#                                                                      #
# syncthing                                                            #
#                                                                      #
########################################################################

syncthing_enabled: false

syncthing_identifier: "{{ mash_playbook_service_identifier_prefix }}syncthing"

syncthing_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}syncthing"

syncthing_uid: "{{ mash_playbook_uid }}"
syncthing_gid: "{{ mash_playbook_gid }}"

syncthing_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

syncthing_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
syncthing_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
syncthing_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
syncthing_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /syncthing                                                           #
#                                                                      #
########################################################################
# /role-specific:syncthing



# role-specific:tandoor
########################################################################
#                                                                      #
# tandoor                                                              #
#                                                                      #
########################################################################

tandoor_enabled: false

tandoor_identifier: "{{ mash_playbook_service_identifier_prefix }}tandoor"

tandoor_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}tandoor"

tandoor_uid: "{{ mash_playbook_uid }}"
tandoor_gid: "{{ mash_playbook_gid }}"

tandoor_systemd_required_services_list_auto: |
  {{
    ([postgres_identifier ~ '.service'] if postgres_enabled and tandoor_database_hostname == postgres_connection_hostname else [])
  }}

tandoor_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and tandoor_email_host == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

tandoor_container_additional_networks_auto: |
  {{
    (
      ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and tandoor_email_host == exim_relay_identifier | default('mash-exim-relay') and tandoor_container_network != exim_relay_container_network) else [])
      +
      ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
      +
      ([postgres_container_network] if postgres_enabled and tandoor_database_hostname == postgres_connection_hostname and tandoor_container_network != postgres_container_network else [])
    ) | unique
  }}

tandoor_environment_variable_secret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'secret.tandoor', rounds=655555) | to_uuid }}"

tandoor_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
tandoor_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:exim_relay
tandoor_email_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
tandoor_email_port: "{{ 8025 if exim_relay_enabled else '' }}"
tandoor_default_from_email: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
# /role-specific:exim_relay

# role-specific:postgres
tandoor_database_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
tandoor_database_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
tandoor_database_username: "tandoor"
tandoor_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.tandoor', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
tandoor_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
tandoor_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /tandoor                                                             #
#                                                                      #
########################################################################
# /role-specific:tandoor



# role-specific:telegraf
########################################################################
#                                                                      #
# telegraf                                                             #
#                                                                      #
########################################################################

telegraf_enabled: false

telegraf_identifier: "{{ mash_playbook_service_identifier_prefix }}telegraf"

telegraf_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}telegraf"

telegraf_uid: "{{ mash_playbook_uid }}"
telegraf_gid: "{{ mash_playbook_gid }}"

telegraf_systemd_required_services_list_auto: |
  {{
    ([(influxdb_identifier + '.service')] if influxdb_enabled else [])
  }}

########################################################################
#                                                                      #
# /telegraf                                                            #
#                                                                      #
########################################################################
# /role-specific:telegraf



# role-specific:thelounge
########################################################################
#                                                                      #
# thelounge                                                            #
#                                                                      #
########################################################################

thelounge_enabled: false

thelounge_identifier: "{{ mash_playbook_service_identifier_prefix }}thelounge"

thelounge_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}thelounge"

thelounge_uid: "{{ mash_playbook_uid }}"
thelounge_gid: "{{ mash_playbook_gid }}"

thelounge_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

thelounge_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
thelounge_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
thelounge_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
thelounge_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /thelounge                                                           #
#                                                                      #
########################################################################
# /role-specific:thelounge



# role-specific:tinyauth
########################################################################
#                                                                      #
# tinyauth                                                             #
#                                                                      #
########################################################################

tinyauth_enabled: false

tinyauth_identifier: "{{ mash_playbook_service_identifier_prefix }}tinyauth"

tinyauth_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}tinyauth"

tinyauth_uid: "{{ mash_playbook_uid }}"
tinyauth_gid: "{{ mash_playbook_gid }}"

tinyauth_systemd_wanted_services_list_auto: |
  {{
    ([lldap_identifier ~ '.service'] if lldap_enabled | default(false) and tinyauth_ldap_enabled else [])
  }}

tinyauth_container_additional_networks_auto: |
  {{
    ([lldap_container_network] if lldap_enabled | default(false) and tinyauth_container_network != lldap_container_network and tinyauth_ldap_enabled else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

tinyauth_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
tinyauth_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:lldap
tinyauth_ldap_enabled: "{{ lldap_enabled }}"
tinyauth_environment_variable_ldap_address: ldap://{{ lldap_identifier }}:{{ lldap_container_ldap_port }}
tinyauth_environment_variable_ldap_insecure: true
# /role-specific:lldap

# role-specific:traefik
tinyauth_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
tinyauth_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /tinyauth                                                            #
#                                                                      #
########################################################################
# /role-specific:tinyauth



# role-specific:tsdproxy
########################################################################
#                                                                      #
# tsdproxy                                                             #
#                                                                      #
########################################################################

tsdproxy_enabled: false

tsdproxy_identifier: "{{ mash_playbook_service_identifier_prefix }}tsdproxy"

tsdproxy_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}tsdproxy"

tsdproxy_uid: "{{ mash_playbook_uid }}"
tsdproxy_gid: "{{ mash_playbook_gid }}"

tsdproxy_systemd_required_services_list: |
  {{
    ([devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [])
    +
    ([container_socket_proxy_identifier + '.service'] if container_socket_proxy_enabled | default(false) else [])
  }}

tsdproxy_container_additional_networks_auto: |
  {{
    ([container_socket_proxy_container_network] if container_socket_proxy_enabled | default(false) else [])
  }}

# role-specific:container_socket_proxy
tsdproxy_docker_endpoint_is_unix_socket: "{{ false if container_socket_proxy_enabled else true }}"
tsdproxy_docker_endpoint: "{{ container_socket_proxy_endpoint if container_socket_proxy_enabled == true and tsdproxy_enabled == true else 'unix:///var/run/docker.sock' }}"
# TSDProxy needs access to the Docker Networks and images to work
container_socket_proxy_api_network_enabled: "{{ true if tsdproxy_docker_endpoint == container_socket_proxy_endpoint else false }}"
container_socket_proxy_api_images_enabled: "{{ true if tsdproxy_docker_endpoint == container_socket_proxy_endpoint else false }}"
# /role-specific:container_socket_proxy

########################################################################
#                                                                      #
# /tsdproxy                                                            #
#                                                                      #
########################################################################
# /role-specific:tsdproxy



# role-specific:typesense
########################################################################
#                                                                      #
# typesense                                                            #
#                                                                      #
########################################################################

typesense_enabled: false

typesense_identifier: "{{ mash_playbook_service_identifier_prefix }}typesense"

typesense_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}typesense"

typesense_uid: "{{ mash_playbook_uid }}"
typesense_gid: "{{ mash_playbook_gid }}"

typesense_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

# Only enable Traefik labels if a hostname is set (indicating that this will be exposed publicly)
typesense_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled and typesense_hostname | length > 0 }}"
typesense_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

typesense_environment_variables_api_key: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'a.typesense', rounds=655555) | to_uuid }}"

# role-specific:traefik
typesense_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
typesense_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /typesense                                                           #
#                                                                      #
########################################################################
# /role-specific:typesense



# role-specific:uptime_kuma
########################################################################
#                                                                      #
# uptime_kuma                                                          #
#                                                                      #
########################################################################

uptime_kuma_enabled: false

uptime_kuma_identifier: "{{ mash_playbook_service_identifier_prefix }}uptime-kuma"

uptime_kuma_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}uptime-kuma"

uptime_kuma_uid: "{{ mash_playbook_uid }}"
uptime_kuma_gid: "{{ mash_playbook_gid }}"

uptime_kuma_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([ntfy_container_network] if ntfy_enabled | default(false) and uptime_kuma_container_network != ntfy_container_network else [])
    +
    ([gotify_container_network] if gotify_enabled | default(false) and uptime_kuma_container_network != gotify_container_network else [])
  }}

uptime_kuma_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
uptime_kuma_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
uptime_kuma_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
uptime_kuma_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /uptime_kuma                                                         #
#                                                                      #
########################################################################
# /role-specific:uptime_kuma



# role-specific:valkey
########################################################################
#                                                                      #
# valkey                                                               #
#                                                                      #
########################################################################

valkey_enabled: false

valkey_identifier: "{{ mash_playbook_service_identifier_prefix }}valkey"

valkey_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}valkey"

valkey_uid: "{{ mash_playbook_uid }}"
valkey_gid: "{{ mash_playbook_gid }}"

valkey_arch: "{{ mash_playbook_architecture }}"

########################################################################
#                                                                      #
# /valkey                                                              #
#                                                                      #
########################################################################
# /role-specific:valkey



# role-specific:vaultwarden
########################################################################
#                                                                      #
# vaultwarden                                                          #
#                                                                      #
########################################################################

vaultwarden_enabled: false

vaultwarden_identifier: "{{ mash_playbook_service_identifier_prefix }}vaultwarden"

vaultwarden_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}vaultwarden"

vaultwarden_uid: "{{ mash_playbook_uid }}"
vaultwarden_gid: "{{ mash_playbook_gid }}"

vaultwarden_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and vaultwarden_database_mysql_hostname == mariadb_connection_hostname and vaultwarden_database_type == 'mysql' else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and vaultwarden_database_postgres_hostname == postgres_connection_hostname and vaultwarden_database_type == 'postgres' else [])
  }}

vaultwarden_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and vaultwarden_config_smtp_host == exim_relay_identifier | default('mash-exim-relay')) else [])
  }}

vaultwarden_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and vaultwarden_config_smtp_host == exim_relay_identifier | default('mash-exim-relay') and vaultwarden_container_network != exim_relay_container_network) else [])
    +
    ([mariadb_container_network] if mariadb_enabled | default(false) and vaultwarden_database_mysql_hostname == mariadb_connection_hostname and vaultwarden_container_network != mariadb_container_network and vaultwarden_database_type == 'mysql' else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and vaultwarden_database_postgres_hostname == postgres_connection_hostname and vaultwarden_container_network != postgres_container_network and vaultwarden_database_type == 'postgres' else [])
  }}

vaultwarden_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
vaultwarden_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"
vaultwarden_container_labels_traefik_compression_middleware_enabled: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_enabled }}"
vaultwarden_container_labels_traefik_compression_middleware_name: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_name if mash_playbook_reverse_proxy_traefik_middleware_compession_enabled else '' }}"

# role-specific:exim_relay
vaultwarden_config_smtp_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
vaultwarden_config_smtp_port: "{{ 8025 if exim_relay_enabled else '587' }}"
vaultwarden_config_smtp_from: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
vaultwarden_config_smtp_security: "{{ 'off' if exim_relay_enabled else 'starttls' }}"
# /role-specific:exim_relay

# role-specific:mariadb
vaultwarden_database_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled | default(false) else '' }}"
vaultwarden_database_mysql_port: "{{ mariadb_connection_port if mariadb_enabled | default(false) else '3306' }}"
vaultwarden_database_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.vaultwarden', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
vaultwarden_database_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
vaultwarden_database_postgres_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
vaultwarden_database_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.vaultwarden', rounds=655555) | to_uuid }}"
# /role-specific:postgres

# role-specific:traefik
vaultwarden_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
vaultwarden_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /vaultwarden                                                         #
#                                                                      #
########################################################################
# /role-specific:vaultwarden



# role-specific:versatiles
########################################################################
#                                                                      #
# versatiles                                                           #
#                                                                      #
########################################################################

versatiles_enabled: false

versatiles_identifier: "{{ mash_playbook_service_identifier_prefix }}versatiles"

versatiles_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}versatiles"

versatiles_uid: "{{ mash_playbook_uid }}"
versatiles_gid: "{{ mash_playbook_gid }}"

versatiles_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

versatiles_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
versatiles_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
versatiles_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
versatiles_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /versatiles                                                          #
#                                                                      #
########################################################################
# /role-specific:versatiles



# role-specific:vikunja
########################################################################
#                                                                      #
# vikunja                                                              #
#                                                                      #
########################################################################

vikunja_enabled: false

vikunja_identifier: "{{ mash_playbook_service_identifier_prefix }}vikunja"

vikunja_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}vikunja"

vikunja_uid: "{{ mash_playbook_uid }}"
vikunja_gid: "{{ mash_playbook_gid }}"

vikunja_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and vikunja_database_mysql_hostname == mariadb_connection_hostname and vikunja_database_type == 'mysql' else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and vikunja_database_postgres_hostname == postgres_connection_hostname and vikunja_database_type == 'postgres' else [])
  }}

vikunja_systemd_wanted_services_list_auto: |
  {{
    ([(exim_relay_identifier | default('mash-exim-relay')) ~ '.service'] if (exim_relay_enabled | default(false) and vikunja_environment_variables_smtp_host == exim_relay_identifier | default('mash-exim-relay')) else [])
    +
    ([lldap_identifier ~ '.service'] if lldap_enabled | default(false) else [])
    +
    ([typesense_identifier ~ '.service'] if typesense_enabled | default(false) else [])
  }}

vikunja_container_additional_networks_auto: |
  {{
    ([exim_relay_container_network | default('mash-exim-relay')] if (exim_relay_enabled | default(false) and vikunja_environment_variables_smtp_host == exim_relay_identifier | default('mash-exim-relay') and vikunja_container_network != exim_relay_container_network) else [])
    +
    ([lldap_container_network] if lldap_enabled | default(false) and vikunja_container_network != lldap_container_network else [])
    +
    ([mariadb_container_network] if mariadb_enabled | default(false) and vikunja_database_mysql_hostname == mariadb_connection_hostname and vikunja_container_network != mariadb_container_network and vikunja_database_type == 'mysql' else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
    +
    ([postgres_container_network] if postgres_enabled | default(false) and vikunja_database_postgres_hostname == postgres_connection_hostname and vikunja_container_network != postgres_container_network and vikunja_database_type == 'postgres' else [])
    +
    ([typesense_container_network] if typesense_enabled | default(false) and vikunja_container_network != typesense_container_network else [])
  }}

vikunja_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
vikunja_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

vikunja_database_type: "{{ 'postgres' if postgres_enabled | default(false) else 'sqlite' }}"

vikunja_environment_variables_service_jwtsecret: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 's.vikunja', rounds=655555) | to_uuid }}"

# role-specific:exim_relay
vikunja_environment_variables_smtp_enabled: "{{ exim_relay_enabled }}"
vikunja_environment_variables_smtp_from: "{{ exim_relay_sender_address if exim_relay_enabled else '' }}"
vikunja_environment_variables_smtp_host: "{{ exim_relay_identifier if exim_relay_enabled else '' }}"
vikunja_environment_variables_smtp_port: "{{ 8025 if exim_relay_enabled else '587' }}"
# /role-specific:exim_relay

# role-specific:mariadb
vikunja_database_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
vikunja_database_mysql_port: "{{ mariadb_connection_port if mariadb_enabled else '3306' }}"
vikunja_database_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'vikunja.db', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
vikunja_database_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
vikunja_database_postgres_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
vikunja_database_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'vikunja.db', rounds=655555) | to_uuid }}"
vikunja_database_postgres_sslmode: "{{ 'disable' if (vikunja_database_postgres_hostname == postgres_connection_hostname | default('mash-postgres')) else 'require' }}"
# /role-specific:postgres

# role-specific:traefik
vikunja_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
vikunja_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

# role-specific:typesense
vikunja_environment_variables_typesense_enabled: true
vikunja_environment_variables_typesense_url: http://{{ typesense_identifier }}:{{ typesense_container_http_port }}
vikunja_environment_variables_typesense_apikey: "{{ typesense_environment_variables_api_key }}"
# /role-specific:typesense

########################################################################
#                                                                      #
# /vikunja                                                             #
#                                                                      #
########################################################################
# /role-specific:vikunja



# role-specific:wetty
########################################################################
#                                                                      #
# wetty                                                                #
#                                                                      #
########################################################################

wetty_enabled: false

wetty_identifier: "{{ mash_playbook_service_identifier_prefix }}wetty"

wetty_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}wetty"

wetty_uid: "{{ mash_playbook_uid }}"
wetty_gid: "{{ mash_playbook_gid }}"

wetty_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

wetty_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
wetty_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
wetty_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
wetty_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /wetty                                                               #
#                                                                      #
########################################################################
# /role-specific:wetty



# role-specific:wg_easy
########################################################################
#                                                                      #
# wg-easy                                                              #
#                                                                      #
########################################################################

wg_easy_enabled: false

wg_easy_identifier: "{{ mash_playbook_service_identifier_prefix }}wg-easy"

wg_easy_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}wg-easy"

wg_easy_uid: "{{ mash_playbook_uid }}"
wg_easy_gid: "{{ mash_playbook_gid }}"

wg_easy_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

wg_easy_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
wg_easy_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
wg_easy_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
wg_easy_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /wg-easy                                                             #
#                                                                      #
########################################################################
# /role-specific:wg_easy



# role-specific:woodpecker_ci_agent
########################################################################
#                                                                      #
# woodpecker_ci_agent                                                  #
#                                                                      #
########################################################################

woodpecker_ci_agent_enabled: false

woodpecker_ci_agent_identifier: "{{ mash_playbook_service_identifier_prefix }}woodpecker-ci-agent"

woodpecker_ci_agent_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}woodpecker-ci/agent"

woodpecker_ci_agent_uid: "{{ mash_playbook_uid }}"
woodpecker_ci_agent_gid: "{{ mash_playbook_gid }}"

woodpecker_ci_agent_systemd_required_services_list_auto: |
  {{
    ([woodpecker_ci_server_identifier ~ '.service'] if woodpecker_ci_server_enabled else [])
  }}

woodpecker_ci_agent_container_additional_networks_auto: |
  {{
    (
      ([woodpecker_ci_server_container_network] if woodpecker_ci_server_enabled and woodpecker_ci_server_container_network != woodpecker_ci_agent_container_network else [])
    ) | unique
  }}

woodpecker_ci_agent_config_server: "{{ (woodpecker_ci_server_identifier + ':' + woodpecker_ci_server_config_grpc_addr_port | string) if woodpecker_ci_agent_enabled else '' }}"

woodpecker_ci_agent_config_agent_secret: "{{ woodpecker_ci_server_config_agent_secret if woodpecker_ci_agent_enabled else '' }}"

########################################################################
#                                                                      #
# /woodpecker_ci_agent                                                 #
#                                                                      #
########################################################################
# /role-specific:woodpecker_ci_agent



# role-specific:woodpecker_ci_server
########################################################################
#                                                                      #
# woodpecker_ci_server                                                 #
#                                                                      #
########################################################################

woodpecker_ci_server_enabled: false

woodpecker_ci_server_identifier: "{{ mash_playbook_service_identifier_prefix }}woodpecker-ci-server"

woodpecker_ci_server_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}woodpecker-ci/server"

woodpecker_ci_server_uid: "{{ mash_playbook_uid }}"
woodpecker_ci_server_gid: "{{ mash_playbook_gid }}"

woodpecker_ci_server_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled | default(false) and woodpecker_ci_server_database_mysql_hostname == mariadb_connection_hostname and woodpecker_ci_server_database_type == 'mysql' else [])
    +
    ([postgres_identifier ~ '.service'] if postgres_enabled | default(false) and woodpecker_ci_server_database_postgres_hostname == postgres_connection_hostname and woodpecker_ci_server_database_type == 'postgres' else [])
  }}

woodpecker_ci_server_container_additional_networks_auto: |
  {{
    (
      ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
      +
      ([mariadb_container_network] if mariadb_enabled | default(false) and woodpecker_ci_server_database_mysql_hostname == mariadb_connection_hostname and woodpecker_ci_server_container_network != mariadb_container_network and woodpecker_ci_server_database_type == 'mysql' else [])
      +
      ([postgres_container_network] if postgres_enabled | default(false) and woodpecker_ci_server_database_postgres_hostname == postgres_connection_hostname and woodpecker_ci_server_container_network != postgres_container_network and woodpecker_ci_server_database_type == 'postgres' else [])
    ) | unique
  }}

woodpecker_ci_server_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
woodpecker_ci_server_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

woodpecker_ci_server_container_labels_traefik_compression_middleware_enabled: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_enabled }}"
woodpecker_ci_server_container_labels_traefik_compression_middleware_name: "{{ mash_playbook_reverse_proxy_traefik_middleware_compession_name if mash_playbook_reverse_proxy_traefik_middleware_compession_enabled else '' }}"

woodpecker_ci_server_database_type: "{{ 'postgres' if postgres_enabled | default(false) else 'sqlite3' }}"

# role-specific:mariadb
woodpecker_ci_server_database_mysql_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
woodpecker_ci_server_database_mysql_port: "{{ mariadb_connection_port if mariadb_enabled else '3306' }}"
woodpecker_ci_server_database_mysql_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'woodpecker.ci', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:postgres
woodpecker_ci_server_database_postgres_hostname: "{{ postgres_connection_hostname if postgres_enabled else '' }}"
woodpecker_ci_server_database_postgres_port: "{{ postgres_connection_port if postgres_enabled else '5432' }}"
woodpecker_ci_server_database_postgres_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'woodpecker.ci', rounds=655555) | to_uuid }}"
# /role-specific:postgres

########################################################################
#                                                                      #
# /woodpecker_ci_server                                                #
#                                                                      #
########################################################################
# /role-specific:woodpecker_ci_server



# role-specific:wordpress
########################################################################
#                                                                      #
# wordpress                                                            #
#                                                                      #
########################################################################

wordpress_enabled: false

wordpress_identifier: "{{ mash_playbook_service_identifier_prefix }}wordpress"

wordpress_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}wordpress"

wordpress_uid: "{{ mash_playbook_uid }}"
wordpress_gid: "{{ mash_playbook_gid }}"

wordpress_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled and wordpress_database_hostname == mariadb_connection_hostname else [])
  }}

wordpress_container_additional_networks_auto: |
  {{
    ([mariadb_container_network] if mariadb_enabled and wordpress_database_hostname == mariadb_connection_hostname and wordpress_container_network != mariadb_identifier else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

wordpress_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
wordpress_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:mariadb
wordpress_database_hostname: "{{ mariadb_connection_hostname if mariadb_enabled | default(false) else '' }}"
wordpress_mysql_port: "{{ mariadb_connection_port if mariadb_enabled | default(false) else '3306' }}"
wordpress_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.mariadb', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:traefik
wordpress_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
wordpress_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /wordpress                                                           #
#                                                                      #
########################################################################
# /role-specific:wordpress



# role-specific:writefreely
########################################################################
#                                                                      #
# writefreely                                                          #
#                                                                      #
########################################################################

writefreely_enabled: false

writefreely_identifier: "{{ mash_playbook_service_identifier_prefix }}writefreely"

writefreely_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}writefreely"

writefreely_uid: "{{ mash_playbook_uid }}"
writefreely_gid: "{{ mash_playbook_gid }}"

writefreely_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

writefreely_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
writefreely_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
writefreely_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
writefreely_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /writefreely                                                         #
#                                                                      #
########################################################################
# /role-specific:writefreely



# role-specific:yacy
########################################################################
#                                                                      #
# yacy                                                                 #
#                                                                      #
########################################################################

yacy_enabled: false

yacy_identifier: "{{ mash_playbook_service_identifier_prefix }}yacy"

yacy_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}yacy"

yacy_uid: "{{ mash_playbook_uid }}"
yacy_gid: "{{ mash_playbook_gid }}"

yacy_container_additional_networks_auto: |
  {{
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

yacy_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
yacy_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:traefik
yacy_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
yacy_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /yacy                                                                #
#                                                                      #
########################################################################
# /role-specific:yacy



# role-specific:yourls
########################################################################
#                                                                      #
# yourls                                                               #
#                                                                      #
########################################################################

yourls_enabled: false

yourls_identifier: "{{ mash_playbook_service_identifier_prefix }}yourls"

yourls_base_path: "{{ mash_playbook_base_path }}/{{ mash_playbook_service_base_directory_name_prefix }}yourls"

yourls_uid: "{{ mash_playbook_uid }}"
yourls_gid: "{{ mash_playbook_gid }}"

yourls_systemd_required_services_list_auto: |
  {{
    ([mariadb_identifier ~ '.service'] if mariadb_enabled and yourls_database_hostname == mariadb_connection_hostname else [])
  }}

yourls_container_additional_networks_auto: |
  {{
    ([mariadb_container_network] if mariadb_enabled and yourls_database_hostname == mariadb_connection_hostname and yourls_container_network != mariadb_container_network else [])
    +
    ([mash_playbook_reverse_proxyable_services_additional_network] if mash_playbook_reverse_proxyable_services_additional_network else [])
  }}

yourls_environment_variable_cookiekey: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'secret.yourls', rounds=655555) | to_uuid }}"

yourls_container_labels_traefik_enabled: "{{ mash_playbook_traefik_labels_enabled }}"
yourls_container_labels_traefik_docker_network: "{{ mash_playbook_reverse_proxyable_services_additional_network }}"

# role-specific:mariadb
yourls_database_hostname: "{{ mariadb_connection_hostname if mariadb_enabled else '' }}"
yourls_database_port: "{{ mariadb_connection_port if mariadb_enabled | default(false) else '3306' }}"
yourls_database_password: "{{ '%s' | format(mash_playbook_generic_secret_key) | password_hash('sha512', 'db.yourls', rounds=655555) | to_uuid }}"
# /role-specific:mariadb

# role-specific:traefik
yourls_container_labels_traefik_entrypoints: "{{ traefik_entrypoint_primary }}"
yourls_container_labels_traefik_tls_certResolver: "{{ traefik_certResolver_primary }}"
# /role-specific:traefik

########################################################################
#                                                                      #
# /yourls                                                              #
#                                                                      #
########################################################################
# /role-specific:yourls
